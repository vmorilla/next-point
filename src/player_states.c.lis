/tmp/tmp8u8XyWPH.asm:
     1                          MODULE player_states_c
     2                          LINE 0, "player_states.c"
player_states.c:
                                
     1                          ;--------------------------------------------------------
     2                          ; File Created by SDCC : free open source ISO C Compiler
     3                          ; Version 4.3.0 #14210 (Mac OS X ppc)
     4                          ;--------------------------------------------------------
     5                          	.zxn
     6                          ; Processed by Z88DK
     7                          ;--------------------------------------------------------
     8                          
     9                          	EXTERN __divschar
    10                          	EXTERN __divschar_callee
    11                          	EXTERN __divsint
    12                          	EXTERN __divsint_callee
    13                          	EXTERN __divslong
    14                          	EXTERN __divslong_callee
    15                          	EXTERN __divslonglong
    16                          	EXTERN __divslonglong_callee
    17                          	EXTERN __divsuchar
    18                          	EXTERN __divsuchar_callee
    19                          	EXTERN __divuchar
    20                          	EXTERN __divuchar_callee
    21                          	EXTERN __divuint
    22                          	EXTERN __divuint_callee
    23                          	EXTERN __divulong
    24                          	EXTERN __divulong_callee
    25                          	EXTERN __divulonglong
    26                          	EXTERN __divulonglong_callee
    27                          	EXTERN __divuschar
    28                          	EXTERN __divuschar_callee
    29                          	EXTERN __modschar
    30                          	EXTERN __modschar_callee
    31                          	EXTERN __modsint
    32                          	EXTERN __modsint_callee
    33                          	EXTERN __modslong
    34                          	EXTERN __modslong_callee
    35                          	EXTERN __modslonglong
    36                          	EXTERN __modslonglong_callee
    37                          	EXTERN __modsuchar
    38                          	EXTERN __modsuchar_callee
    39                          	EXTERN __moduchar
    40                          	EXTERN __moduchar_callee
    41                          	EXTERN __moduint
    42                          	EXTERN __moduint_callee
    43                          	EXTERN __modulong
    44                          	EXTERN __modulong_callee
    45                          	EXTERN __modulonglong
    46                          	EXTERN __modulonglong_callee
    47                          	EXTERN __moduschar
    48                          	EXTERN __moduschar_callee
    49                          	EXTERN __mulint
    50                          	EXTERN __mulint_callee
    51                          	EXTERN __mullong
    52                          	EXTERN __mullong_callee
    53                          	EXTERN __mullonglong
    54                          	EXTERN __mullonglong_callee
    55                          	EXTERN __mulschar
    56                          	EXTERN __mulschar_callee
    57                          	EXTERN __mulsuchar
    58                          	EXTERN __mulsuchar_callee
    59                          	EXTERN __muluchar
    60                          	EXTERN __muluchar_callee
    61                          	EXTERN __muluschar
    62                          	EXTERN __muluschar_callee
    63                          	EXTERN __rlslonglong
    64                          	EXTERN __rlslonglong_callee
    65                          	EXTERN __rlulonglong
    66                          	EXTERN __rlulonglong_callee
    67                          	EXTERN __rrslonglong
    68                          	EXTERN __rrslonglong_callee
    69                          	EXTERN __rrulonglong
    70                          	EXTERN __rrulonglong_callee
    71                          	EXTERN ___mulsint2slong
    72                          	EXTERN ___mulsint2slong_callee
    73                          	EXTERN ___muluint2ulong
    74                          	EXTERN ___muluint2ulong_callee
    75                          	EXTERN ___sdcc_call_hl
    76                          	EXTERN ___sdcc_call_iy
    77                          	EXTERN ___sdcc_enter_ix
    78                          	EXTERN banked_call
    79                          	EXTERN _banked_ret
    80                          	EXTERN ___fs2schar
    81                          	EXTERN ___fs2schar_callee
    82                          	EXTERN ___fs2sint
    83                          	EXTERN ___fs2sint_callee
    84                          	EXTERN ___fs2slong
    85                          	EXTERN ___fs2slong_callee
    86                          	EXTERN ___fs2slonglong
    87                          	EXTERN ___fs2slonglong_callee
    88                          	EXTERN ___fs2uchar
    89                          	EXTERN ___fs2uchar_callee
    90                          	EXTERN ___fs2uint
    91                          	EXTERN ___fs2uint_callee
    92                          	EXTERN ___fs2ulong
    93                          	EXTERN ___fs2ulong_callee
    94                          	EXTERN ___fs2ulonglong
    95                          	EXTERN ___fs2ulonglong_callee
    96                          	EXTERN ___fsadd
    97                          	EXTERN ___fsadd_callee
    98                          	EXTERN ___fsdiv
    99                          	EXTERN ___fsdiv_callee
   100                          	EXTERN ___fseq
   101                          	EXTERN ___fseq_callee
   102                          	EXTERN ___fsgt
   103                          	EXTERN ___fsgt_callee
   104                          	EXTERN ___fslt
   105                          	EXTERN ___fslt_callee
   106                          	EXTERN ___fsmul
   107                          	EXTERN ___fsmul_callee
   108                          	EXTERN ___fsneq
   109                          	EXTERN ___fsneq_callee
   110                          	EXTERN ___fssub
   111                          	EXTERN ___fssub_callee
   112                          	EXTERN ___schar2fs
   113                          	EXTERN ___schar2fs_callee
   114                          	EXTERN ___sint2fs
   115                          	EXTERN ___sint2fs_callee
   116                          	EXTERN ___slong2fs
   117                          	EXTERN ___slong2fs_callee
   118                          	EXTERN ___slonglong2fs
   119                          	EXTERN ___slonglong2fs_callee
   120                          	EXTERN ___uchar2fs
   121                          	EXTERN ___uchar2fs_callee
   122                          	EXTERN ___uint2fs
   123                          	EXTERN ___uint2fs_callee
   124                          	EXTERN ___ulong2fs
   125                          	EXTERN ___ulong2fs_callee
   126                          	EXTERN ___ulonglong2fs
   127                          	EXTERN ___ulonglong2fs_callee
   128                          	EXTERN ____sdcc_2_copy_src_mhl_dst_deix
   129                          	EXTERN ____sdcc_2_copy_src_mhl_dst_bcix
   130                          	EXTERN ____sdcc_4_copy_src_mhl_dst_deix
   131                          	EXTERN ____sdcc_4_copy_src_mhl_dst_bcix
   132                          	EXTERN ____sdcc_4_copy_src_mhl_dst_mbc
   133                          	EXTERN ____sdcc_4_ldi_nosave_bc
   134                          	EXTERN ____sdcc_4_ldi_save_bc
   135                          	EXTERN ____sdcc_4_push_hlix
   136                          	EXTERN ____sdcc_4_push_mhl
   137                          	EXTERN ____sdcc_lib_setmem_hl
   138                          	EXTERN ____sdcc_ll_add_de_bc_hl
   139                          	EXTERN ____sdcc_ll_add_de_bc_hlix
   140                          	EXTERN ____sdcc_ll_add_de_hlix_bc
   141                          	EXTERN ____sdcc_ll_add_de_hlix_bcix
   142                          	EXTERN ____sdcc_ll_add_deix_bc_hl
   143                          	EXTERN ____sdcc_ll_add_deix_hlix
   144                          	EXTERN ____sdcc_ll_add_hlix_bc_deix
   145                          	EXTERN ____sdcc_ll_add_hlix_deix_bc
   146                          	EXTERN ____sdcc_ll_add_hlix_deix_bcix
   147                          	EXTERN ____sdcc_ll_asr_hlix_a
   148                          	EXTERN ____sdcc_ll_asr_mbc_a
   149                          	EXTERN ____sdcc_ll_copy_src_de_dst_hlix
   150                          	EXTERN ____sdcc_ll_copy_src_de_dst_hlsp
   151                          	EXTERN ____sdcc_ll_copy_src_deix_dst_hl
   152                          	EXTERN ____sdcc_ll_copy_src_deix_dst_hlix
   153                          	EXTERN ____sdcc_ll_copy_src_deixm_dst_hlsp
   154                          	EXTERN ____sdcc_ll_copy_src_desp_dst_hlsp
   155                          	EXTERN ____sdcc_ll_copy_src_hl_dst_de
   156                          	EXTERN ____sdcc_ll_copy_src_hlsp_dst_de
   157                          	EXTERN ____sdcc_ll_copy_src_hlsp_dst_deixm
   158                          	EXTERN ____sdcc_ll_lsl_hlix_a
   159                          	EXTERN ____sdcc_ll_lsl_mbc_a
   160                          	EXTERN ____sdcc_ll_lsr_hlix_a
   161                          	EXTERN ____sdcc_ll_lsr_mbc_a
   162                          	EXTERN ____sdcc_ll_push_hlix
   163                          	EXTERN ____sdcc_ll_push_mhl
   164                          	EXTERN ____sdcc_ll_sub_de_bc_hl
   165                          	EXTERN ____sdcc_ll_sub_de_bc_hlix
   166                          	EXTERN ____sdcc_ll_sub_de_hlix_bc
   167                          	EXTERN ____sdcc_ll_sub_de_hlix_bcix
   168                          	EXTERN ____sdcc_ll_sub_deix_bc_hl
   169                          	EXTERN ____sdcc_ll_sub_deix_hlix
   170                          	EXTERN ____sdcc_ll_sub_hlix_bc_deix
   171                          	EXTERN ____sdcc_ll_sub_hlix_deix_bc
   172                          	EXTERN ____sdcc_ll_sub_hlix_deix_bcix
   173                          	EXTERN ____sdcc_load_debc_deix
   174                          	EXTERN ____sdcc_load_dehl_deix
   175                          	EXTERN ____sdcc_load_debc_mhl
   176                          	EXTERN ____sdcc_load_hlde_mhl
   177                          	EXTERN ____sdcc_store_dehl_bcix
   178                          	EXTERN ____sdcc_store_debc_hlix
   179                          	EXTERN ____sdcc_store_debc_mhl
   180                          	EXTERN ____sdcc_cpu_pop_ei
   181                          	EXTERN ____sdcc_cpu_pop_ei_jp
   182                          	EXTERN ____sdcc_cpu_push_di
   183                          	EXTERN ____sdcc_outi
   184                          	EXTERN ____sdcc_outi_128
   185                          	EXTERN ____sdcc_outi_256
   186                          	EXTERN ____sdcc_ldi
   187                          	EXTERN ____sdcc_ldi_128
   188                          	EXTERN ____sdcc_ldi_256
   189                          	EXTERN ____sdcc_4_copy_srcd_hlix_dst_deix
   190                          	EXTERN ____sdcc_4_and_src_mbc_mhl_dst_deix
   191                          	EXTERN ____sdcc_4_or_src_mbc_mhl_dst_deix
   192                          	EXTERN ____sdcc_4_xor_src_mbc_mhl_dst_deix
   193                          	EXTERN ____sdcc_4_or_src_dehl_dst_bcix
   194                          	EXTERN ____sdcc_4_xor_src_dehl_dst_bcix
   195                          	EXTERN ____sdcc_4_and_src_dehl_dst_bcix
   196                          	EXTERN ____sdcc_4_xor_src_mbc_mhl_dst_debc
   197                          	EXTERN ____sdcc_4_or_src_mbc_mhl_dst_debc
   198                          	EXTERN ____sdcc_4_and_src_mbc_mhl_dst_debc
   199                          	EXTERN ____sdcc_4_cpl_src_mhl_dst_debc
   200                          	EXTERN ____sdcc_4_xor_src_debc_mhl_dst_debc
   201                          	EXTERN ____sdcc_4_or_src_debc_mhl_dst_debc
   202                          	EXTERN ____sdcc_4_and_src_debc_mhl_dst_debc
   203                          	EXTERN ____sdcc_4_and_src_debc_hlix_dst_debc
   204                          	EXTERN ____sdcc_4_or_src_debc_hlix_dst_debc
   205                          	EXTERN ____sdcc_4_xor_src_debc_hlix_dst_debc
   206                          
   207                          ;--------------------------------------------------------
   208                          ; Public variables in this module
   209                          ;--------------------------------------------------------
   210                          	GLOBAL _move_player
   211                          	GLOBAL _player_idle
   212                          	GLOBAL _player_service_ready
   213                          	GLOBAL _player_service_ball_up
   214                          	GLOBAL _player_service_ball_hit
   215                          	GLOBAL _player_no_action
   216                          	GLOBAL _player_walk
   217                          ;--------------------------------------------------------
   218                          ; Externals used
   219                          ;--------------------------------------------------------
   220                          	GLOBAL _float_to_string
   221                          	GLOBAL _valid_area
   222                          	GLOBAL _service_area
   223                          	GLOBAL _get_serving_player
   224                          	GLOBAL _is_ad_service
   225                          	GLOBAL _start_match
   226                          	GLOBAL _event_player_touch
   227                          	GLOBAL _event_net_touched
   228                          	GLOBAL _event_player_hit
   229                          	GLOBAL _event_ball_bounced
   230                          	GLOBAL _update_entities
   231                          	GLOBAL _game_loop
   232                          	GLOBAL _ball_future_x_and_height
   233                          	GLOBAL _set_ball_velocity_net_height
   234                          	GLOBAL _set_lob_ball_velocity
   235                          	GLOBAL _update_ball
   236                          	GLOBAL _xy_in_boundary
   237                          	GLOBAL _point_in_boundary
   238                          	GLOBAL _x_projection
   239                          	GLOBAL _transition_touch
   240                          	GLOBAL _transition_front_walk
   241                          	GLOBAL _transition_hit_ball
   242                          	GLOBAL _transition_lateral_move
   243                          	GLOBAL _transition_serve_hit_ball
   244                          	GLOBAL _transition_receive_serve
   245                          	GLOBAL _transition_serve_ball_up
   246                          	GLOBAL _transition_serve_ready
   247                          	GLOBAL _transition_idle
   248                          	GLOBAL _closest_type_of_hit
   249                          	GLOBAL _ball_at_reach
   250                          	GLOBAL _set_player_status
   251                          	GLOBAL _get_player
   252                          	GLOBAL _update_players
   253                          	GLOBAL _init_controls
   254                          	GLOBAL _diplay_profile
   255                          	GLOBAL _in_mouse_kempston_wheel_delta
   256                          	GLOBAL _in_mouse_kempston_wheel
   257                          	GLOBAL _in_mouse_kempston_callee
   258                          	GLOBAL _in_mouse_kempston
   259                          	GLOBAL _in_mouse_kempston_setpos_callee
   260                          	GLOBAL _in_mouse_kempston_setpos
   261                          	GLOBAL _in_mouse_kempston_reset
   262                          	GLOBAL _in_mouse_kempston_init
   263                          	GLOBAL _in_mouse_amx_wheel_delta
   264                          	GLOBAL _in_mouse_amx_wheel
   265                          	GLOBAL _in_mouse_amx_callee
   266                          	GLOBAL _in_mouse_amx
   267                          	GLOBAL _in_mouse_amx_setpos_callee
   268                          	GLOBAL _in_mouse_amx_setpos
   269                          	GLOBAL _in_mouse_amx_reset
   270                          	GLOBAL _in_mouse_amx_init_callee
   271                          	GLOBAL _in_mouse_amx_init
   272                          	GLOBAL _in_stick_sinclair2
   273                          	GLOBAL _in_stick_sinclair1
   274                          	GLOBAL _in_stick_kempston
   275                          	GLOBAL _in_stick_fuller
   276                          	GLOBAL _in_stick_cursor
   277                          	GLOBAL _in_stick_keyboard_fastcall
   278                          	GLOBAL _in_stick_keyboard
   279                          	GLOBAL _in_wait_nokey
   280                          	GLOBAL _in_wait_key
   281                          	GLOBAL _in_test_key
   282                          	GLOBAL _in_pause_fastcall
   283                          	GLOBAL _in_pause
   284                          	GLOBAL _in_key_scancode_fastcall
   285                          	GLOBAL _in_key_scancode
   286                          	GLOBAL _in_key_pressed_fastcall
   287                          	GLOBAL _in_key_pressed
   288                          	GLOBAL _in_inkey
   289                          	GLOBAL _game_state
   290                          	GLOBAL _match_type
   291                          	GLOBAL _score
   292                          	GLOBAL _game_frame_speed
   293                          	GLOBAL _next_iteration_delta
   294                          	GLOBAL _ball
   295                          	GLOBAL _player_bottom
   296                          	GLOBAL _player_top
   297                          	GLOBAL _game_settings
   298                          	GLOBAL _ppponent_profile
   299                          	GLOBAL _court_boundaries
   300                          ;--------------------------------------------------------
   301                          ; special function registers
   302                          ;--------------------------------------------------------
   303                          ;--------------------------------------------------------
   304                          ; ram data
   305                          ;--------------------------------------------------------
   306                          	SECTION bss_compiler
   307                          ;--------------------------------------------------------
   308                          ; ram data
   309                          ;--------------------------------------------------------
   310                          
   311                          IF 0
   312                          
   313                          ; .area _INITIALIZED removed by z88dk
   314                          
   315                          
   316                          ENDIF
   317                          
   318                          ;--------------------------------------------------------
   319                          ; absolute external ram data
   320                          ;--------------------------------------------------------
   321                          	SECTION IGNORE
   322                          ;--------------------------------------------------------
   323                          ; global & static initialisations
   324                          ;--------------------------------------------------------
   325                          	SECTION code_crt_init
   326                          ;--------------------------------------------------------
   327                          ; Home
   328                          ;--------------------------------------------------------
   329                          	SECTION IGNORE
   330                          ;--------------------------------------------------------
   331                          ; code
   332                          ;--------------------------------------------------------
   333                          	SECTION code_compiler
   334                          ;player_states.c:18: void move_player(Player *player, const Boundary *boundary)
   335                          ;	---------------------------------
   336                          ; Function move_player
   337                          ; ---------------------------------
   338                          _move_player:
   339  0000  cd0000            	call	___sdcc_enter_ix
   340  0003  21f3ff            	ld	hl, -13
   341  0006  39                	add	hl, sp
   342  0007  f9                	ld	sp, hl
   343                          ;player_states.c:20: ControlInput control = player->control;
   344  0008  dd7e04            	ld	a,(ix+4)
   345  000b  dd77f5            	ld	(ix-11),a
   346  000e  dd7e05            	ld	a,(ix+5)
   347  0011  dd77f6            	ld	(ix-10),a
   348  0014  e1                	pop	hl
   349  0015  c1                	pop	bc
   350  0016  c5                	push	bc
   351  0017  e5                	push	hl
   352  0018  03                	inc	bc
   353  0019  0a                	ld	a, (bc)
   354  001a  dd77f7            	ld	(ix-9),a
   355                          ;player_states.c:22: if (control & CONTROL_UP && player->y > boundary->top)
   356  001d  dd7ef5            	ld	a,(ix-11)
   357  0020  c60e              	add	a,0x0e
   358  0022  dd77f8            	ld	(ix-8),a
   359  0025  dd7ef6            	ld	a,(ix-10)
   360  0028  ce00              	adc	a,0x00
   361  002a  dd77f9            	ld	(ix-7),a
   362  002d  dd7e06            	ld	a,(ix+6)
   363  0030  dd77fa            	ld	(ix-6),a
   364  0033  dd7e07            	ld	a,(ix+7)
   365  0036  dd77fb            	ld	(ix-5),a
   366  0039  ddcbf746          	bit	0,(ix-9)
   367  003d  285d              	jr	Z,l_move_player_00102
   368  003f  dd5ef8            	ld	e,(ix-8)
   369  0042  dd56f9            	ld	d,(ix-7)
   370  0045  210900            	ld	hl,9
   371  0048  39                	add	hl, sp
   372  0049  eb                	ex	de, hl
   373  004a  cd0000            	call	____sdcc_4_ldi_nosave_bc
   374  004d  dd4efa            	ld	c,(ix-6)
   375  0050  dd46fb            	ld	b,(ix-5)
   376  0053  210400            	ld	hl,4
   377  0056  09                	add	hl, bc
   378  0057  4e                	ld	c, (hl)
   379  0058  23                	inc	hl
   380  0059  46                	ld	b, (hl)
   381  005a  c5                	push	bc
   382  005b  cd0000            	call	___sint2fs_callee
   383  005e  dd4efe            	ld	c,(ix-2)
   384  0061  dd46ff            	ld	b,(ix-1)
   385  0064  c5                	push	bc
   386  0065  dd4efc            	ld	c,(ix-4)
   387  0068  dd46fd            	ld	b,(ix-3)
   388  006b  c5                	push	bc
   389  006c  d5                	push	de
   390  006d  e5                	push	hl
   391  006e  cd0000            	call	___fslt_callee
   392  0071  7d                	ld	a, l
   393  0072  b7                	or	a, a
   394  0073  2827              	jr	Z,l_move_player_00102
   395                          ;player_states.c:23: player->y -= PLAYER_UPDOWN_WALK_SPEED * next_iteration_delta;
   396  0075  2a0200            	ld	hl, (_next_iteration_delta + 2)
   397  0078  e5                	push	hl
   398  0079  2a0000            	ld	hl, (_next_iteration_delta)
   399  007c  e5                	push	hl
   400  007d  210040            	ld	hl,0x4000
   401  0080  e5                	push	hl
   402  0081  65                	ld	h, l
   403  0082  e5                	push	hl
   404  0083  cd0000            	call	___fsmul_callee
   405  0086  d5                	push	de
   406  0087  e5                	push	hl
   407  0088  21fcff            	ld	hl,-4
   408  008b  cd0000            	call	____sdcc_4_push_hlix
   409  008e  cd0000            	call	___fssub_callee
   410  0091  4d                	ld	c, l
   411  0092  dd6ef8            	ld	l,(ix-8)
   412  0095  44                	ld	b,h
   413  0096  dd66f9            	ld	h,(ix-7)
   414  0099  cd0000            	call	____sdcc_store_debc_mhl
   415                          l_move_player_00102:
   416                          ;player_states.c:24: if (control & CONTROL_DOWN && player->y < boundary->bottom)
   417  009c  ddcbf74e          	bit	1,(ix-9)
   418  00a0  2855              	jr	Z,l_move_player_00105
   419  00a2  dd5ef8            	ld	e,(ix-8)
   420  00a5  dd56f9            	ld	d,(ix-7)
   421  00a8  210900            	ld	hl,9
   422  00ab  39                	add	hl, sp
   423  00ac  eb                	ex	de, hl
   424  00ad  cd0000            	call	____sdcc_4_ldi_nosave_bc
   425  00b0  dd4efa            	ld	c,(ix-6)
   426  00b3  dd46fb            	ld	b,(ix-5)
   427  00b6  210600            	ld	hl,6
   428  00b9  09                	add	hl, bc
   429  00ba  4e                	ld	c, (hl)
   430  00bb  23                	inc	hl
   431  00bc  46                	ld	b, (hl)
   432  00bd  c5                	push	bc
   433  00be  cd0000            	call	___sint2fs_callee
   434  00c1  d5                	push	de
   435  00c2  e5                	push	hl
   436  00c3  21fcff            	ld	hl,-4
   437  00c6  cd0000            	call	____sdcc_4_push_hlix
   438  00c9  cd0000            	call	___fslt_callee
   439  00cc  7d                	ld	a, l
   440  00cd  b7                	or	a, a
   441  00ce  2827              	jr	Z,l_move_player_00105
   442                          ;player_states.c:25: player->y += PLAYER_UPDOWN_WALK_SPEED * next_iteration_delta;
   443  00d0  2a0200            	ld	hl, (_next_iteration_delta + 2)
   444  00d3  e5                	push	hl
   445  00d4  2a0000            	ld	hl, (_next_iteration_delta)
   446  00d7  e5                	push	hl
   447  00d8  210040            	ld	hl,0x4000
   448  00db  e5                	push	hl
   449  00dc  65                	ld	h, l
   450  00dd  e5                	push	hl
   451  00de  cd0000            	call	___fsmul_callee
   452  00e1  d5                	push	de
   453  00e2  e5                	push	hl
   454  00e3  21fcff            	ld	hl,-4
   455  00e6  cd0000            	call	____sdcc_4_push_hlix
   456  00e9  cd0000            	call	___fsadd_callee
   457  00ec  4d                	ld	c, l
   458  00ed  dd6ef8            	ld	l,(ix-8)
   459  00f0  44                	ld	b,h
   460  00f1  dd66f9            	ld	h,(ix-7)
   461  00f4  cd0000            	call	____sdcc_store_debc_mhl
   462                          l_move_player_00105:
   463                          ;player_states.c:26: if (control & CONTROL_LEFT && player->x > boundary->left)
   464  00f7  dd7ef5            	ld	a,(ix-11)
   465  00fa  c60a              	add	a,0x0a
   466  00fc  dd77fe            	ld	(ix-2),a
   467  00ff  dd7ef6            	ld	a,(ix-10)
   468  0102  ce00              	adc	a,0x00
   469  0104  dd77ff            	ld	(ix-1),a
   470  0107  ddcbf756          	bit	2,(ix-9)
   471  010b  285b              	jr	Z,l_move_player_00108
   472  010d  dd5efe            	ld	e,(ix-2)
   473  0110  dd56ff            	ld	d,(ix-1)
   474  0113  210000            	ld	hl,0
   475  0116  39                	add	hl, sp
   476  0117  eb                	ex	de, hl
   477  0118  cd0000            	call	____sdcc_4_ldi_nosave_bc
   478  011b  dd6efa            	ld	l,(ix-6)
   479  011e  dd66fb            	ld	h,(ix-5)
   480  0121  4e                	ld	c, (hl)
   481  0122  23                	inc	hl
   482  0123  46                	ld	b, (hl)
   483  0124  c5                	push	bc
   484  0125  cd0000            	call	___sint2fs_callee
   485  0128  dd4ef5            	ld	c,(ix-11)
   486  012b  dd46f6            	ld	b,(ix-10)
   487  012e  c5                	push	bc
   488  012f  dd4ef3            	ld	c,(ix-13)
   489  0132  dd46f4            	ld	b,(ix-12)
   490  0135  c5                	push	bc
   491  0136  d5                	push	de
   492  0137  e5                	push	hl
   493  0138  cd0000            	call	___fslt_callee
   494  013b  7d                	ld	a, l
   495  013c  b7                	or	a, a
   496  013d  2829              	jr	Z,l_move_player_00108
   497                          ;player_states.c:27: player->x -= PLAYER_LAT_WALK_SPEED * next_iteration_delta;
   498  013f  2a0200            	ld	hl, (_next_iteration_delta + 2)
   499  0142  e5                	push	hl
   500  0143  2a0000            	ld	hl, (_next_iteration_delta)
   501  0146  e5                	push	hl
   502  0147  214040            	ld	hl,0x4040
   503  014a  e5                	push	hl
   504  014b  210000            	ld	hl,0x0000
   505  014e  e5                	push	hl
   506  014f  cd0000            	call	___fsmul_callee
   507  0152  d5                	push	de
   508  0153  e5                	push	hl
   509  0154  21f3ff            	ld	hl,-13
   510  0157  cd0000            	call	____sdcc_4_push_hlix
   511  015a  cd0000            	call	___fssub_callee
   512  015d  4d                	ld	c, l
   513  015e  dd6efe            	ld	l,(ix-2)
   514  0161  44                	ld	b,h
   515  0162  dd66ff            	ld	h,(ix-1)
   516  0165  cd0000            	call	____sdcc_store_debc_mhl
   517                          l_move_player_00108:
   518                          ;player_states.c:28: if (control & CONTROL_RIGHT && player->x < boundary->right)
   519  0168  ddcbf75e          	bit	3,(ix-9)
   520  016c  2855              	jr	Z,l_move_player_00113
   521  016e  dd5efe            	ld	e,(ix-2)
   522  0171  dd56ff            	ld	d,(ix-1)
   523  0174  210300            	ld	hl,3
   524  0177  39                	add	hl, sp
   525  0178  eb                	ex	de, hl
   526  0179  cd0000            	call	____sdcc_4_ldi_nosave_bc
   527  017c  dd6efa            	ld	l,(ix-6)
   528  017f  dd66fb            	ld	h,(ix-5)
   529  0182  23                	inc	hl
   530  0183  23                	inc	hl
   531  0184  4e                	ld	c, (hl)
   532  0185  23                	inc	hl
   533  0186  46                	ld	b, (hl)
   534  0187  c5                	push	bc
   535  0188  cd0000            	call	___sint2fs_callee
   536  018b  d5                	push	de
   537  018c  e5                	push	hl
   538  018d  21f6ff            	ld	hl,-10
   539  0190  cd0000            	call	____sdcc_4_push_hlix
   540  0193  cd0000            	call	___fslt_callee
   541  0196  7d                	ld	a, l
   542  0197  b7                	or	a, a
   543  0198  2829              	jr	Z,l_move_player_00113
   544                          ;player_states.c:29: player->x += PLAYER_LAT_WALK_SPEED * next_iteration_delta;
   545  019a  2a0200            	ld	hl, (_next_iteration_delta + 2)
   546  019d  e5                	push	hl
   547  019e  2a0000            	ld	hl, (_next_iteration_delta)
   548  01a1  e5                	push	hl
   549  01a2  214040            	ld	hl,0x4040
   550  01a5  e5                	push	hl
   551  01a6  210000            	ld	hl,0x0000
   552  01a9  e5                	push	hl
   553  01aa  cd0000            	call	___fsmul_callee
   554  01ad  d5                	push	de
   555  01ae  e5                	push	hl
   556  01af  21f6ff            	ld	hl,-10
   557  01b2  cd0000            	call	____sdcc_4_push_hlix
   558  01b5  cd0000            	call	___fsadd_callee
   559  01b8  4d                	ld	c, l
   560  01b9  dd6efe            	ld	l,(ix-2)
   561  01bc  44                	ld	b,h
   562  01bd  dd66ff            	ld	h,(ix-1)
   563  01c0  cd0000            	call	____sdcc_store_debc_mhl
   564                          l_move_player_00113:
   565                          ;player_states.c:30: }
   566  01c3  ddf9              	ld	sp, ix
   567  01c5  dde1              	pop	ix
   568  01c7  c9                	ret
   569                          	SECTION code_compiler
   570                          ;player_states.c:36: void player_idle(Player *player)
   571                          ;	---------------------------------
   572                          ; Function player_idle
   573                          ; ---------------------------------
   574                          _player_idle:
   575  01c8  cd0000            	call	___sdcc_enter_ix
   576                          ;player_states.c:38: const Boundary *boundary = &court_boundaries[player->id];
   577  01cb  dd4e04            	ld	c,(ix+4)
   578  01ce  dd4605            	ld	b,(ix+5)
   579  01d1  0a                	ld	a, (bc)
   580  01d2  2600              	ld	h,0x00
   581  01d4  6f                	ld	l, a
   582  01d5  29                	add	hl, hl
   583  01d6  29                	add	hl, hl
   584  01d7  29                	add	hl, hl
   585  01d8  110000            	ld	de,_court_boundaries
   586  01db  19                	add	hl, de
   587                          ;player_states.c:39: move_player(player, boundary);
   588  01dc  c5                	push	bc
   589  01dd  e5                	push	hl
   590  01de  c5                	push	bc
   591  01df  cd0000            	call	_move_player
   592  01e2  f1                	pop	af
   593  01e3  f1                	pop	af
   594  01e4  c1                	pop	bc
   595                          ;player_states.c:42: if (player->control & (CONTROL_UP | CONTROL_DOWN | CONTROL_LEFT | CONTROL_RIGHT))
   596  01e5  59                	ld	e, c
   597  01e6  50                	ld	d, b
   598  01e7  13                	inc	de
   599  01e8  1a                	ld	a, (de)
   600  01e9  e60f              	and	a,0x0f
   601  01eb  2807              	jr	Z,l_player_idle_00102
   602                          ;player_states.c:43: transition_front_walk(player);
   603  01ed  d5                	push	de
   604  01ee  c5                	push	bc
   605  01ef  cd0000            	call	_transition_front_walk
   606  01f2  f1                	pop	af
   607  01f3  d1                	pop	de
   608                          l_player_idle_00102:
   609                          ;player_states.c:44: if (player->control & CONTROL_FIRE)
   610  01f4  1a                	ld	a, (de)
   611  01f5  cb67              	bit	4, a
   612  01f7  280b              	jr	Z,l_player_idle_00105
   613                          ;player_states.c:45: transition_hit_ball(player);
   614  01f9  dd6e04            	ld	l,(ix+4)
   615  01fc  dd6605            	ld	h,(ix+5)
   616  01ff  e5                	push	hl
   617  0200  cd0000            	call	_transition_hit_ball
   618  0203  f1                	pop	af
   619                          l_player_idle_00105:
   620                          ;player_states.c:46: }
   621  0204  dde1              	pop	ix
   622  0206  c9                	ret
   623                          ;player_states.c:48: void player_service_ready(Player *player)
   624                          ;	---------------------------------
   625                          ; Function player_service_ready
   626                          ; ---------------------------------
   627                          _player_service_ready:
   628  0207  cd0000            	call	___sdcc_enter_ix
   629                          ;player_states.c:50: if (player->control & CONTROL_FIRE)
   630  020a  dd4e04            	ld	c,(ix+4)
   631  020d  dd4605            	ld	b,(ix+5)
   632  0210  59                	ld	e, c
   633  0211  50                	ld	d, b
   634  0212  13                	inc	de
   635  0213  1a                	ld	a, (de)
   636  0214  cb67              	bit	4, a
   637  0216  2805              	jr	Z,l_player_service_ready_00103
   638                          ;player_states.c:53: transition_serve_ball_up(player);
   639  0218  c5                	push	bc
   640  0219  cd0000            	call	_transition_serve_ball_up
   641  021c  f1                	pop	af
   642                          l_player_service_ready_00103:
   643                          ;player_states.c:55: }
   644  021d  dde1              	pop	ix
   645  021f  c9                	ret
   646                          ;player_states.c:57: void player_service_ball_up(Player *player)
   647                          ;	---------------------------------
   648                          ; Function player_service_ball_up
   649                          ; ---------------------------------
   650                          _player_service_ball_up:
   651  0220  cd0000            	call	___sdcc_enter_ix
   652                          ;player_states.c:60: if (player->control & CONTROL_FIRE && !ball.hidden)
   653  0223  dd4e04            	ld	c,(ix+4)
   654  0226  dd4605            	ld	b,(ix+5)
   655  0229  59                	ld	e, c
   656  022a  50                	ld	d, b
   657  022b  13                	inc	de
   658  022c  1a                	ld	a, (de)
   659  022d  cb67              	bit	4, a
   660  022f  280c              	jr	Z,l_player_service_ball_up_00104
   661  0231  211800            	ld	hl,+(_ball + 24)
   662  0234  cb46              	bit	0,(hl)
   663  0236  2005              	jr	NZ,l_player_service_ball_up_00104
   664                          ;player_states.c:62: transition_serve_hit_ball(player);
   665  0238  c5                	push	bc
   666  0239  cd0000            	call	_transition_serve_hit_ball
   667  023c  f1                	pop	af
   668                          l_player_service_ball_up_00104:
   669                          ;player_states.c:64: }
   670  023d  dde1              	pop	ix
   671  023f  c9                	ret
   672                          ;player_states.c:66: void player_service_ball_hit(Player *player)
   673                          ;	---------------------------------
   674                          ; Function player_service_ball_hit
   675                          ; ---------------------------------
   676                          _player_service_ball_hit:
   677  0240  cd0000            	call	___sdcc_enter_ix
   678                          ;player_states.c:68: (void)player;
   679                          ;player_states.c:69: }
   680  0243  dde1              	pop	ix
   681  0245  c9                	ret
   682                          ;player_states.c:71: void player_no_action(Player *player)
   683                          ;	---------------------------------
   684                          ; Function player_no_action
   685                          ; ---------------------------------
   686                          _player_no_action:
   687  0246  cd0000            	call	___sdcc_enter_ix
   688                          ;player_states.c:74: (void)player;
   689                          ;player_states.c:75: }
   690  0249  dde1              	pop	ix
   691  024b  c9                	ret
   692                          ;player_states.c:77: void player_walk(Player *player)
   693                          ;	---------------------------------
   694                          ; Function player_walk
   695                          ; ---------------------------------
   696                          _player_walk:
   697  024c  cd0000            	call	___sdcc_enter_ix
   698                          ;player_states.c:79: if (player->control & CONTROL_FIRE)
   699  024f  dd4e04            	ld	c,(ix+4)
   700  0252  dd4605            	ld	b,(ix+5)
   701  0255  59                	ld	e, c
   702  0256  50                	ld	d, b
   703  0257  13                	inc	de
   704  0258  1a                	ld	a, (de)
   705  0259  cb67              	bit	4, a
   706  025b  2807              	jr	Z,l_player_walk_00107
   707                          ;player_states.c:80: transition_hit_ball(player);
   708  025d  c5                	push	bc
   709  025e  cd0000            	call	_transition_hit_ball
   710  0261  f1                	pop	af
   711  0262  1834              	jr	l_player_walk_00109
   712                          l_player_walk_00107:
   713                          ;player_states.c:83: const Boundary *boundary = &court_boundaries[player->id];
   714  0264  0a                	ld	a, (bc)
   715  0265  2600              	ld	h,0x00
   716  0267  6f                	ld	l, a
   717  0268  29                	add	hl, hl
   718  0269  29                	add	hl, hl
   719  026a  29                	add	hl, hl
   720  026b  3e00              	ld	a,+((_court_boundaries) & 0xFF)
   721  026d  85                	add	a,l
   722  026e  6f                	ld	l,a
   723  026f  3e00              	ld	a,+((_court_boundaries) / 256)
   724  0271  8c                	adc	a,h
   725  0272  67                	ld	h,a
   726                          ;player_states.c:84: move_player(player, boundary);
   727  0273  c5                	push	bc
   728  0274  d5                	push	de
   729  0275  e5                	push	hl
   730  0276  c5                	push	bc
   731  0277  cd0000            	call	_move_player
   732  027a  f1                	pop	af
   733  027b  f1                	pop	af
   734  027c  d1                	pop	de
   735  027d  c1                	pop	bc
   736                          ;player_states.c:85: if (player->control & (CONTROL_UP | CONTROL_DOWN | CONTROL_LEFT | CONTROL_RIGHT))
   737  027e  1a                	ld	a, (de)
   738  027f  5f                	ld	e, a
   739                          ;player_states.c:86: player->state_timer = WALK_DURATION;
   740  0280  210900            	ld	hl,0x0009
   741  0283  09                	add	hl, bc
   742                          ;player_states.c:85: if (player->control & (CONTROL_UP | CONTROL_DOWN | CONTROL_LEFT | CONTROL_RIGHT))
   743  0284  7b                	ld	a, e
   744  0285  e60f              	and	a,0x0f
   745  0287  2804              	jr	Z,l_player_walk_00104
   746                          ;player_states.c:86: player->state_timer = WALK_DURATION;
   747  0289  360a              	ld	(hl),0x0a
   748  028b  180b              	jr	l_player_walk_00109
   749                          l_player_walk_00104:
   750                          ;player_states.c:87: else if (--player->state_timer == 0) // Time to go back to idle
   751  028d  7e                	ld	a, (hl)
   752  028e  3d                	dec	a
   753  028f  77                	ld	(hl), a
   754  0290  b7                	or	a, a
   755  0291  2005              	jr	NZ,l_player_walk_00109
   756                          ;player_states.c:88: transition_idle(player);
   757  0293  c5                	push	bc
   758  0294  cd0000            	call	_transition_idle
   759  0297  f1                	pop	af
   760                          l_player_walk_00109:
   761                          ;player_states.c:90: }
   762  0298  dde1              	pop	ix
   763  029a  c9                	ret
   764                          	SECTION IGNORE
   765                          
