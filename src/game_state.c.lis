/tmp/tmpomP03erP.asm:
     1                          MODULE game_state_c
     2                          LINE 0, "game_state.c"
game_state.c:
                                
     1                          ;--------------------------------------------------------
     2                          ; File Created by SDCC : free open source ISO C Compiler
     3                          ; Version 4.3.0 #14210 (Mac OS X ppc)
     4                          ;--------------------------------------------------------
     5                          	.zxn
     6                          ; Processed by Z88DK
     7                          ;--------------------------------------------------------
     8                          
     9                          	EXTERN __divschar
    10                          	EXTERN __divschar_callee
    11                          	EXTERN __divsint
    12                          	EXTERN __divsint_callee
    13                          	EXTERN __divslong
    14                          	EXTERN __divslong_callee
    15                          	EXTERN __divslonglong
    16                          	EXTERN __divslonglong_callee
    17                          	EXTERN __divsuchar
    18                          	EXTERN __divsuchar_callee
    19                          	EXTERN __divuchar
    20                          	EXTERN __divuchar_callee
    21                          	EXTERN __divuint
    22                          	EXTERN __divuint_callee
    23                          	EXTERN __divulong
    24                          	EXTERN __divulong_callee
    25                          	EXTERN __divulonglong
    26                          	EXTERN __divulonglong_callee
    27                          	EXTERN __divuschar
    28                          	EXTERN __divuschar_callee
    29                          	EXTERN __modschar
    30                          	EXTERN __modschar_callee
    31                          	EXTERN __modsint
    32                          	EXTERN __modsint_callee
    33                          	EXTERN __modslong
    34                          	EXTERN __modslong_callee
    35                          	EXTERN __modslonglong
    36                          	EXTERN __modslonglong_callee
    37                          	EXTERN __modsuchar
    38                          	EXTERN __modsuchar_callee
    39                          	EXTERN __moduchar
    40                          	EXTERN __moduchar_callee
    41                          	EXTERN __moduint
    42                          	EXTERN __moduint_callee
    43                          	EXTERN __modulong
    44                          	EXTERN __modulong_callee
    45                          	EXTERN __modulonglong
    46                          	EXTERN __modulonglong_callee
    47                          	EXTERN __moduschar
    48                          	EXTERN __moduschar_callee
    49                          	EXTERN __mulint
    50                          	EXTERN __mulint_callee
    51                          	EXTERN __mullong
    52                          	EXTERN __mullong_callee
    53                          	EXTERN __mullonglong
    54                          	EXTERN __mullonglong_callee
    55                          	EXTERN __mulschar
    56                          	EXTERN __mulschar_callee
    57                          	EXTERN __mulsuchar
    58                          	EXTERN __mulsuchar_callee
    59                          	EXTERN __muluchar
    60                          	EXTERN __muluchar_callee
    61                          	EXTERN __muluschar
    62                          	EXTERN __muluschar_callee
    63                          	EXTERN __rlslonglong
    64                          	EXTERN __rlslonglong_callee
    65                          	EXTERN __rlulonglong
    66                          	EXTERN __rlulonglong_callee
    67                          	EXTERN __rrslonglong
    68                          	EXTERN __rrslonglong_callee
    69                          	EXTERN __rrulonglong
    70                          	EXTERN __rrulonglong_callee
    71                          	EXTERN ___mulsint2slong
    72                          	EXTERN ___mulsint2slong_callee
    73                          	EXTERN ___muluint2ulong
    74                          	EXTERN ___muluint2ulong_callee
    75                          	EXTERN ___sdcc_call_hl
    76                          	EXTERN ___sdcc_call_iy
    77                          	EXTERN ___sdcc_enter_ix
    78                          	EXTERN banked_call
    79                          	EXTERN _banked_ret
    80                          	EXTERN ___fs2schar
    81                          	EXTERN ___fs2schar_callee
    82                          	EXTERN ___fs2sint
    83                          	EXTERN ___fs2sint_callee
    84                          	EXTERN ___fs2slong
    85                          	EXTERN ___fs2slong_callee
    86                          	EXTERN ___fs2slonglong
    87                          	EXTERN ___fs2slonglong_callee
    88                          	EXTERN ___fs2uchar
    89                          	EXTERN ___fs2uchar_callee
    90                          	EXTERN ___fs2uint
    91                          	EXTERN ___fs2uint_callee
    92                          	EXTERN ___fs2ulong
    93                          	EXTERN ___fs2ulong_callee
    94                          	EXTERN ___fs2ulonglong
    95                          	EXTERN ___fs2ulonglong_callee
    96                          	EXTERN ___fsadd
    97                          	EXTERN ___fsadd_callee
    98                          	EXTERN ___fsdiv
    99                          	EXTERN ___fsdiv_callee
   100                          	EXTERN ___fseq
   101                          	EXTERN ___fseq_callee
   102                          	EXTERN ___fsgt
   103                          	EXTERN ___fsgt_callee
   104                          	EXTERN ___fslt
   105                          	EXTERN ___fslt_callee
   106                          	EXTERN ___fsmul
   107                          	EXTERN ___fsmul_callee
   108                          	EXTERN ___fsneq
   109                          	EXTERN ___fsneq_callee
   110                          	EXTERN ___fssub
   111                          	EXTERN ___fssub_callee
   112                          	EXTERN ___schar2fs
   113                          	EXTERN ___schar2fs_callee
   114                          	EXTERN ___sint2fs
   115                          	EXTERN ___sint2fs_callee
   116                          	EXTERN ___slong2fs
   117                          	EXTERN ___slong2fs_callee
   118                          	EXTERN ___slonglong2fs
   119                          	EXTERN ___slonglong2fs_callee
   120                          	EXTERN ___uchar2fs
   121                          	EXTERN ___uchar2fs_callee
   122                          	EXTERN ___uint2fs
   123                          	EXTERN ___uint2fs_callee
   124                          	EXTERN ___ulong2fs
   125                          	EXTERN ___ulong2fs_callee
   126                          	EXTERN ___ulonglong2fs
   127                          	EXTERN ___ulonglong2fs_callee
   128                          	EXTERN ____sdcc_2_copy_src_mhl_dst_deix
   129                          	EXTERN ____sdcc_2_copy_src_mhl_dst_bcix
   130                          	EXTERN ____sdcc_4_copy_src_mhl_dst_deix
   131                          	EXTERN ____sdcc_4_copy_src_mhl_dst_bcix
   132                          	EXTERN ____sdcc_4_copy_src_mhl_dst_mbc
   133                          	EXTERN ____sdcc_4_ldi_nosave_bc
   134                          	EXTERN ____sdcc_4_ldi_save_bc
   135                          	EXTERN ____sdcc_4_push_hlix
   136                          	EXTERN ____sdcc_4_push_mhl
   137                          	EXTERN ____sdcc_lib_setmem_hl
   138                          	EXTERN ____sdcc_ll_add_de_bc_hl
   139                          	EXTERN ____sdcc_ll_add_de_bc_hlix
   140                          	EXTERN ____sdcc_ll_add_de_hlix_bc
   141                          	EXTERN ____sdcc_ll_add_de_hlix_bcix
   142                          	EXTERN ____sdcc_ll_add_deix_bc_hl
   143                          	EXTERN ____sdcc_ll_add_deix_hlix
   144                          	EXTERN ____sdcc_ll_add_hlix_bc_deix
   145                          	EXTERN ____sdcc_ll_add_hlix_deix_bc
   146                          	EXTERN ____sdcc_ll_add_hlix_deix_bcix
   147                          	EXTERN ____sdcc_ll_asr_hlix_a
   148                          	EXTERN ____sdcc_ll_asr_mbc_a
   149                          	EXTERN ____sdcc_ll_copy_src_de_dst_hlix
   150                          	EXTERN ____sdcc_ll_copy_src_de_dst_hlsp
   151                          	EXTERN ____sdcc_ll_copy_src_deix_dst_hl
   152                          	EXTERN ____sdcc_ll_copy_src_deix_dst_hlix
   153                          	EXTERN ____sdcc_ll_copy_src_deixm_dst_hlsp
   154                          	EXTERN ____sdcc_ll_copy_src_desp_dst_hlsp
   155                          	EXTERN ____sdcc_ll_copy_src_hl_dst_de
   156                          	EXTERN ____sdcc_ll_copy_src_hlsp_dst_de
   157                          	EXTERN ____sdcc_ll_copy_src_hlsp_dst_deixm
   158                          	EXTERN ____sdcc_ll_lsl_hlix_a
   159                          	EXTERN ____sdcc_ll_lsl_mbc_a
   160                          	EXTERN ____sdcc_ll_lsr_hlix_a
   161                          	EXTERN ____sdcc_ll_lsr_mbc_a
   162                          	EXTERN ____sdcc_ll_push_hlix
   163                          	EXTERN ____sdcc_ll_push_mhl
   164                          	EXTERN ____sdcc_ll_sub_de_bc_hl
   165                          	EXTERN ____sdcc_ll_sub_de_bc_hlix
   166                          	EXTERN ____sdcc_ll_sub_de_hlix_bc
   167                          	EXTERN ____sdcc_ll_sub_de_hlix_bcix
   168                          	EXTERN ____sdcc_ll_sub_deix_bc_hl
   169                          	EXTERN ____sdcc_ll_sub_deix_hlix
   170                          	EXTERN ____sdcc_ll_sub_hlix_bc_deix
   171                          	EXTERN ____sdcc_ll_sub_hlix_deix_bc
   172                          	EXTERN ____sdcc_ll_sub_hlix_deix_bcix
   173                          	EXTERN ____sdcc_load_debc_deix
   174                          	EXTERN ____sdcc_load_dehl_deix
   175                          	EXTERN ____sdcc_load_debc_mhl
   176                          	EXTERN ____sdcc_load_hlde_mhl
   177                          	EXTERN ____sdcc_store_dehl_bcix
   178                          	EXTERN ____sdcc_store_debc_hlix
   179                          	EXTERN ____sdcc_store_debc_mhl
   180                          	EXTERN ____sdcc_cpu_pop_ei
   181                          	EXTERN ____sdcc_cpu_pop_ei_jp
   182                          	EXTERN ____sdcc_cpu_push_di
   183                          	EXTERN ____sdcc_outi
   184                          	EXTERN ____sdcc_outi_128
   185                          	EXTERN ____sdcc_outi_256
   186                          	EXTERN ____sdcc_ldi
   187                          	EXTERN ____sdcc_ldi_128
   188                          	EXTERN ____sdcc_ldi_256
   189                          	EXTERN ____sdcc_4_copy_srcd_hlix_dst_deix
   190                          	EXTERN ____sdcc_4_and_src_mbc_mhl_dst_deix
   191                          	EXTERN ____sdcc_4_or_src_mbc_mhl_dst_deix
   192                          	EXTERN ____sdcc_4_xor_src_mbc_mhl_dst_deix
   193                          	EXTERN ____sdcc_4_or_src_dehl_dst_bcix
   194                          	EXTERN ____sdcc_4_xor_src_dehl_dst_bcix
   195                          	EXTERN ____sdcc_4_and_src_dehl_dst_bcix
   196                          	EXTERN ____sdcc_4_xor_src_mbc_mhl_dst_debc
   197                          	EXTERN ____sdcc_4_or_src_mbc_mhl_dst_debc
   198                          	EXTERN ____sdcc_4_and_src_mbc_mhl_dst_debc
   199                          	EXTERN ____sdcc_4_cpl_src_mhl_dst_debc
   200                          	EXTERN ____sdcc_4_xor_src_debc_mhl_dst_debc
   201                          	EXTERN ____sdcc_4_or_src_debc_mhl_dst_debc
   202                          	EXTERN ____sdcc_4_and_src_debc_mhl_dst_debc
   203                          	EXTERN ____sdcc_4_and_src_debc_hlix_dst_debc
   204                          	EXTERN ____sdcc_4_or_src_debc_hlix_dst_debc
   205                          	EXTERN ____sdcc_4_xor_src_debc_hlix_dst_debc
   206                          
   207                          ;--------------------------------------------------------
   208                          ; Public variables in this module
   209                          ;--------------------------------------------------------
   210                          	GLOBAL _ball_bounced_out_opponent_area
   211                          	GLOBAL _ball_bounced_out_own_area
   212                          	GLOBAL _fade_out
   213                          	GLOBAL _ball_in_boundary
   214                          	GLOBAL _match_type
   215                          	GLOBAL _score
   216                          	GLOBAL _game_state
   217                          	GLOBAL _get_serving_player
   218                          	GLOBAL _service_area
   219                          	GLOBAL _valid_area
   220                          	GLOBAL _is_ad_service
   221                          	GLOBAL _update_entities
   222                          	GLOBAL _start_match
   223                          	GLOBAL _start_set
   224                          	GLOBAL _start_game
   225                          	GLOBAL _start_point
   226                          	GLOBAL _start_service
   227                          	GLOBAL _event_ball_bounced
   228                          	GLOBAL _event_player_hit
   229                          	GLOBAL _event_net_touched
   230                          	GLOBAL _event_player_touch
   231                          	GLOBAL _ball_touched_player
   232                          	GLOBAL _ball_is_bouncing_out
   233                          	GLOBAL _ball_bounced_out
   234                          	GLOBAL _ball_bounced_twice
   235                          	GLOBAL _finish_point
   236                          	GLOBAL _finish_game
   237                          	GLOBAL _finish_set
   238                          	GLOBAL _finish_match
   239                          	GLOBAL _end_match
   240                          ;--------------------------------------------------------
   241                          ; Externals used
   242                          ;--------------------------------------------------------
   243                          	GLOBAL _umpire_call_touch
   244                          	GLOBAL _umpire_call_match_point
   245                          	GLOBAL _umpire_call_set_point
   246                          	GLOBAL _umpire_call_game_point
   247                          	GLOBAL _umpire_call_match_for_player
   248                          	GLOBAL _umpire_call_set_for_player
   249                          	GLOBAL _umpire_call_game_for_player
   250                          	GLOBAL _umpire_call_score
   251                          	GLOBAL _umpire_call_service
   252                          	GLOBAL _umpire_call_second_service
   253                          	GLOBAL _umpire_call_out
   254                          	GLOBAL _umpire_call_let
   255                          	GLOBAL _umpire_call_first_service
   256                          	GLOBAL _umpire_call_fault
   257                          	GLOBAL _umpire_call_double_fault
   258                          	GLOBAL _umpire_call_ace
   259                          	GLOBAL _update_umpire
   260                          	GLOBAL _init_umpire
   261                          	GLOBAL _restart_computer_controls
   262                          	GLOBAL _read_computer_control
   263                          	GLOBAL _hide_score_board
   264                          	GLOBAL _show_score_board
   265                          	GLOBAL _init_score_board
   266                          	GLOBAL _update_messages
   267                          	GLOBAL _send_message
   268                          	GLOBAL _transition_touch
   269                          	GLOBAL _transition_front_walk
   270                          	GLOBAL _transition_hit_ball
   271                          	GLOBAL _transition_lateral_move
   272                          	GLOBAL _transition_serve_hit_ball
   273                          	GLOBAL _transition_receive_serve
   274                          	GLOBAL _transition_serve_ball_up
   275                          	GLOBAL _transition_serve_ready
   276                          	GLOBAL _transition_idle
   277                          	GLOBAL _channel_b_remaining_length
   278                          	GLOBAL _is_sound_playing_channel_b
   279                          	GLOBAL _is_sound_playing
   280                          	GLOBAL _play_sound_channel_b
   281                          	GLOBAL _play_sound
   282                          	GLOBAL _sound_interrupt_handler
   283                          	GLOBAL _init_sound
   284                          	GLOBAL _ball_future_x_and_height
   285                          	GLOBAL _set_ball_velocity_net_height
   286                          	GLOBAL _set_lob_ball_velocity
   287                          	GLOBAL _update_ball
   288                          	GLOBAL _xy_in_boundary
   289                          	GLOBAL _point_in_boundary
   290                          	GLOBAL _x_projection
   291                          	GLOBAL _closest_type_of_hit
   292                          	GLOBAL _ball_at_reach
   293                          	GLOBAL _set_player_status
   294                          	GLOBAL _get_player
   295                          	GLOBAL _update_players
   296                          	GLOBAL _init_controls
   297                          	GLOBAL _diplay_profile
   298                          	GLOBAL _in_mouse_kempston_wheel_delta
   299                          	GLOBAL _in_mouse_kempston_wheel
   300                          	GLOBAL _in_mouse_kempston_callee
   301                          	GLOBAL _in_mouse_kempston
   302                          	GLOBAL _in_mouse_kempston_setpos_callee
   303                          	GLOBAL _in_mouse_kempston_setpos
   304                          	GLOBAL _in_mouse_kempston_reset
   305                          	GLOBAL _in_mouse_kempston_init
   306                          	GLOBAL _in_mouse_amx_wheel_delta
   307                          	GLOBAL _in_mouse_amx_wheel
   308                          	GLOBAL _in_mouse_amx_callee
   309                          	GLOBAL _in_mouse_amx
   310                          	GLOBAL _in_mouse_amx_setpos_callee
   311                          	GLOBAL _in_mouse_amx_setpos
   312                          	GLOBAL _in_mouse_amx_reset
   313                          	GLOBAL _in_mouse_amx_init_callee
   314                          	GLOBAL _in_mouse_amx_init
   315                          	GLOBAL _in_stick_sinclair2
   316                          	GLOBAL _in_stick_sinclair1
   317                          	GLOBAL _in_stick_kempston
   318                          	GLOBAL _in_stick_fuller
   319                          	GLOBAL _in_stick_cursor
   320                          	GLOBAL _in_stick_keyboard_fastcall
   321                          	GLOBAL _in_stick_keyboard
   322                          	GLOBAL _in_wait_nokey
   323                          	GLOBAL _in_wait_key
   324                          	GLOBAL _in_test_key
   325                          	GLOBAL _in_pause_fastcall
   326                          	GLOBAL _in_pause
   327                          	GLOBAL _in_key_scancode_fastcall
   328                          	GLOBAL _in_key_scancode
   329                          	GLOBAL _in_key_pressed_fastcall
   330                          	GLOBAL _in_key_pressed
   331                          	GLOBAL _in_inkey
   332                          	GLOBAL _env_getenv_callee
   333                          	GLOBAL _env_getenv
   334                          	GLOBAL _getenv_ex_callee
   335                          	GLOBAL _getenv_ex
   336                          	GLOBAL _getenv_fastcall
   337                          	GLOBAL _getenv
   338                          	GLOBAL _mkstemp_ex_fastcall
   339                          	GLOBAL _mkstemp_ex
   340                          	GLOBAL _ulltoa_callee
   341                          	GLOBAL _ulltoa
   342                          	GLOBAL _strtoull_callee
   343                          	GLOBAL _strtoull
   344                          	GLOBAL _strtoll_callee
   345                          	GLOBAL _strtoll
   346                          	GLOBAL _lltoa_callee
   347                          	GLOBAL _lltoa
   348                          	GLOBAL _llabs_callee
   349                          	GLOBAL _llabs
   350                          	GLOBAL __lldivu__callee
   351                          	GLOBAL __lldivu_
   352                          	GLOBAL __lldiv__callee
   353                          	GLOBAL __lldiv_
   354                          	GLOBAL _atoll_callee
   355                          	GLOBAL _atoll
   356                          	GLOBAL _realloc_unlocked_callee
   357                          	GLOBAL _realloc_unlocked
   358                          	GLOBAL _malloc_unlocked_fastcall
   359                          	GLOBAL _malloc_unlocked
   360                          	GLOBAL _free_unlocked_fastcall
   361                          	GLOBAL _free_unlocked
   362                          	GLOBAL _calloc_unlocked_callee
   363                          	GLOBAL _calloc_unlocked
   364                          	GLOBAL _aligned_alloc_unlocked_callee
   365                          	GLOBAL _aligned_alloc_unlocked
   366                          	GLOBAL _realloc_callee
   367                          	GLOBAL _realloc
   368                          	GLOBAL _malloc_fastcall
   369                          	GLOBAL _malloc
   370                          	GLOBAL _free_fastcall
   371                          	GLOBAL _free
   372                          	GLOBAL _calloc_callee
   373                          	GLOBAL _calloc
   374                          	GLOBAL _aligned_alloc_callee
   375                          	GLOBAL _aligned_alloc
   376                          	GLOBAL _utoa_callee
   377                          	GLOBAL _utoa
   378                          	GLOBAL _ultoa_callee
   379                          	GLOBAL _ultoa
   380                          	GLOBAL _system_fastcall
   381                          	GLOBAL _system
   382                          	GLOBAL _strtoul_callee
   383                          	GLOBAL _strtoul
   384                          	GLOBAL _strtol_callee
   385                          	GLOBAL _strtol
   386                          	GLOBAL _strtof_callee
   387                          	GLOBAL _strtof
   388                          	GLOBAL _strtod_callee
   389                          	GLOBAL _strtod
   390                          	GLOBAL _srand_fastcall
   391                          	GLOBAL _srand
   392                          	GLOBAL _rand
   393                          	GLOBAL _quick_exit_fastcall
   394                          	GLOBAL _quick_exit
   395                          	GLOBAL _qsort_callee
   396                          	GLOBAL _qsort
   397                          	GLOBAL _ltoa_callee
   398                          	GLOBAL _ltoa
   399                          	GLOBAL _labs_fastcall
   400                          	GLOBAL _labs
   401                          	GLOBAL _itoa_callee
   402                          	GLOBAL _itoa
   403                          	GLOBAL _ftoh_callee
   404                          	GLOBAL _ftoh
   405                          	GLOBAL _ftog_callee
   406                          	GLOBAL _ftog
   407                          	GLOBAL _ftoe_callee
   408                          	GLOBAL _ftoe
   409                          	GLOBAL _ftoa_callee
   410                          	GLOBAL _ftoa
   411                          	GLOBAL _exit_fastcall
   412                          	GLOBAL _exit
   413                          	GLOBAL _dtoh_callee
   414                          	GLOBAL _dtoh
   415                          	GLOBAL _dtog_callee
   416                          	GLOBAL _dtog
   417                          	GLOBAL _dtoe_callee
   418                          	GLOBAL _dtoe
   419                          	GLOBAL _dtoa_callee
   420                          	GLOBAL _dtoa
   421                          	GLOBAL _bsearch_callee
   422                          	GLOBAL _bsearch
   423                          	GLOBAL _atol_fastcall
   424                          	GLOBAL _atol
   425                          	GLOBAL _atoi_fastcall
   426                          	GLOBAL _atoi
   427                          	GLOBAL _atof_fastcall
   428                          	GLOBAL _atof
   429                          	GLOBAL _atexit_fastcall
   430                          	GLOBAL _atexit
   431                          	GLOBAL _at_quick_exit_fastcall
   432                          	GLOBAL _at_quick_exit
   433                          	GLOBAL _abs_fastcall
   434                          	GLOBAL _abs
   435                          	GLOBAL _abort
   436                          	GLOBAL __strtou__callee
   437                          	GLOBAL __strtou_
   438                          	GLOBAL __strtoi__callee
   439                          	GLOBAL __strtoi_
   440                          	GLOBAL __random_uniform_xor_8__fastcall
   441                          	GLOBAL __random_uniform_xor_8_
   442                          	GLOBAL __random_uniform_xor_32__fastcall
   443                          	GLOBAL __random_uniform_xor_32_
   444                          	GLOBAL __random_uniform_cmwc_8__fastcall
   445                          	GLOBAL __random_uniform_cmwc_8_
   446                          	GLOBAL __shellsort__callee
   447                          	GLOBAL __shellsort_
   448                          	GLOBAL __quicksort__callee
   449                          	GLOBAL __quicksort_
   450                          	GLOBAL __insertion_sort__callee
   451                          	GLOBAL __insertion_sort_
   452                          	GLOBAL __ldivu__callee
   453                          	GLOBAL __ldivu_
   454                          	GLOBAL __ldiv__callee
   455                          	GLOBAL __ldiv_
   456                          	GLOBAL __divu__callee
   457                          	GLOBAL __divu_
   458                          	GLOBAL __div__callee
   459                          	GLOBAL __div_
   460                          	GLOBAL _umpire_frame
   461                          	GLOBAL _ball
   462                          	GLOBAL _player_bottom
   463                          	GLOBAL _player_top
   464                          	GLOBAL _game_settings
   465                          	GLOBAL _ppponent_profile
   466                          	GLOBAL _court_boundaries
   467                          ;--------------------------------------------------------
   468                          ; special function registers
   469                          ;--------------------------------------------------------
   470                          ;--------------------------------------------------------
   471                          ; ram data
   472                          ;--------------------------------------------------------
   473                          	SECTION bss_compiler
   474                          _game_state:
   475  0000  0000000000000000  	DEFS 9
              00                
   476                          _score:
   477  0009  000000000000      	DEFS 6
   478                          ;--------------------------------------------------------
   479                          ; ram data
   480                          ;--------------------------------------------------------
   481                          
   482                          IF 0
   483                          
   484                          ; .area _INITIALIZED removed by z88dk
   485                          
   486                          _match_type:
   487                          	DEFS 2
   488                          
   489                          ENDIF
   490                          
   491                          ;--------------------------------------------------------
   492                          ; absolute external ram data
   493                          ;--------------------------------------------------------
   494                          	SECTION IGNORE
   495                          ;--------------------------------------------------------
   496                          ; global & static initialisations
   497                          ;--------------------------------------------------------
   498                          	SECTION code_crt_init
   499                          ;--------------------------------------------------------
   500                          ; Home
   501                          ;--------------------------------------------------------
   502                          	SECTION IGNORE
   503                          ;--------------------------------------------------------
   504                          ; code
   505                          ;--------------------------------------------------------
   506                          	SECTION code_compiler
   507                          ;game_state.c:71: bool ball_in_boundary(CourtArea area)
   508                          ;	---------------------------------
   509                          ; Function ball_in_boundary
   510                          ; ---------------------------------
   511                          _ball_in_boundary:
   512  0000  cd0000            	call	___sdcc_enter_ix
   513  0003  f5                	push	af
   514  0004  f5                	push	af
   515                          ;game_state.c:73: const Boundary *boundary = &court_boundaries[area];
   516  0005  dd6e04            	ld	l,(ix+4)
   517  0008  2600              	ld	h,0x00
   518  000a  29                	add	hl, hl
   519  000b  29                	add	hl, hl
   520  000c  29                	add	hl, hl
   521  000d  110000            	ld	de,_court_boundaries
   522  0010  19                	add	hl, de
   523                          ;game_state.c:74: return ball.x >= boundary->left && ball.x <= boundary->right && ball.y >= boundary->top && ball.y <= boundary->bottom;
   524  0011  e5                	push	hl
   525  0012  110000            	ld	de,_ball
   526  0015  210200            	ld	hl,2
   527  0018  39                	add	hl, sp
   528  0019  eb                	ex	de, hl
   529  001a  cd0000            	call	____sdcc_4_ldi_nosave_bc
   530  001d  e1                	pop	hl
   531  001e  5e                	ld	e,(hl)
   532  001f  23                	inc	hl
   533  0020  56                	ld	d,(hl)
   534  0021  2b                	dec	hl
   535  0022  e5                	push	hl
   536  0023  d5                	push	de
   537  0024  cd0000            	call	___sint2fs_callee
   538  0027  d5                	push	de
   539  0028  e5                	push	hl
   540  0029  21fcff            	ld	hl,-4
   541  002c  cd0000            	call	____sdcc_4_push_hlix
   542  002f  cd0000            	call	___fslt_callee
   543  0032  c1                	pop	bc
   544  0033  cb45              	bit	0, l
   545  0035  c2a900            	jp	NZ, l_ball_in_boundary_00103
   546  0038  69                	ld	l, c
   547  0039  60                	ld	h, b
   548  003a  23                	inc	hl
   549  003b  23                	inc	hl
   550  003c  5e                	ld	e, (hl)
   551  003d  23                	inc	hl
   552  003e  56                	ld	d, (hl)
   553  003f  c5                	push	bc
   554  0040  d5                	push	de
   555  0041  cd0000            	call	___sint2fs_callee
   556  0044  e5                	push	hl
   557  0045  dd6efe            	ld	l,(ix-2)
   558  0048  dd66ff            	ld	h,(ix-1)
   559  004b  e3                	ex	(sp), hl
   560  004c  e5                	push	hl
   561  004d  dd6efc            	ld	l,(ix-4)
   562  0050  dd66fd            	ld	h,(ix-3)
   563  0053  e3                	ex	(sp), hl
   564  0054  d5                	push	de
   565  0055  e5                	push	hl
   566  0056  cd0000            	call	___fslt_callee
   567  0059  c1                	pop	bc
   568  005a  cb45              	bit	0, l
   569  005c  204b              	jr	NZ,l_ball_in_boundary_00103
   570  005e  c5                	push	bc
   571  005f  110400            	ld	de,+(_ball + 4)
   572  0062  210200            	ld	hl,2
   573  0065  39                	add	hl, sp
   574  0066  eb                	ex	de, hl
   575  0067  cd0000            	call	____sdcc_4_ldi_nosave_bc
   576  006a  c1                	pop	bc
   577  006b  210400            	ld	hl,4
   578  006e  09                	add	hl,bc
   579  006f  5e                	ld	e, (hl)
   580  0070  23                	inc	hl
   581  0071  56                	ld	d, (hl)
   582  0072  c5                	push	bc
   583  0073  d5                	push	de
   584  0074  cd0000            	call	___sint2fs_callee
   585  0077  d5                	push	de
   586  0078  e5                	push	hl
   587  0079  21fcff            	ld	hl,-4
   588  007c  cd0000            	call	____sdcc_4_push_hlix
   589  007f  cd0000            	call	___fslt_callee
   590  0082  c1                	pop	bc
   591  0083  cb45              	bit	0, l
   592  0085  2022              	jr	NZ,l_ball_in_boundary_00103
   593  0087  210600            	ld	hl,6
   594  008a  09                	add	hl, bc
   595  008b  4e                	ld	c, (hl)
   596  008c  23                	inc	hl
   597  008d  46                	ld	b, (hl)
   598  008e  c5                	push	bc
   599  008f  cd0000            	call	___sint2fs_callee
   600  0092  dd4efe            	ld	c,(ix-2)
   601  0095  dd46ff            	ld	b,(ix-1)
   602  0098  c5                	push	bc
   603  0099  dd4efc            	ld	c,(ix-4)
   604  009c  dd46fd            	ld	b,(ix-3)
   605  009f  c5                	push	bc
   606  00a0  d5                	push	de
   607  00a1  e5                	push	hl
   608  00a2  cd0000            	call	___fslt_callee
   609  00a5  cb45              	bit	0, l
   610  00a7  2804              	jr	Z,l_ball_in_boundary_00104
   611                          l_ball_in_boundary_00103:
   612  00a9  2e00              	ld	l,0x00
   613  00ab  1802              	jr	l_ball_in_boundary_00105
   614                          l_ball_in_boundary_00104:
   615  00ad  2e01              	ld	l,0x01
   616                          l_ball_in_boundary_00105:
   617                          ;game_state.c:75: }
   618  00af  ddf9              	ld	sp, ix
   619  00b1  dde1              	pop	ix
   620  00b3  c9                	ret
   621                          	SECTION code_compiler
   622                          ;game_state.c:77: Player *get_serving_player(void)
   623                          ;	---------------------------------
   624                          ; Function get_serving_player
   625                          ; ---------------------------------
   626                          _get_serving_player:
   627                          ;game_state.c:79: return game_state.service_owner == PLAYER_TOP ? &player_top : &player_bottom;
   628  00b4  210200            	ld	hl,+(_game_state + 2)
   629  00b7  cb46              	bit	0,(hl)
   630  00b9  2005              	jr	NZ,l_get_serving_player_00103
   631  00bb  110000            	ld	de,_player_top+0
   632  00be  1803              	jr	l_get_serving_player_00104
   633                          l_get_serving_player_00103:
   634  00c0  110000            	ld	de,_player_bottom+0
   635                          l_get_serving_player_00104:
   636  00c3  eb                	ex	de, hl
   637                          ;game_state.c:80: }
   638  00c4  c9                	ret
   639                          ;game_state.c:82: const Boundary *service_area(void)
   640                          ;	---------------------------------
   641                          ; Function service_area
   642                          ; ---------------------------------
   643                          _service_area:
   644                          ;game_state.c:84: return &court_boundaries[COURT_AREA_UPPER_DEUCE_SERVE + (is_ad_service() ? 2 : 0) + (game_state.service_owner == PLAYER_BOTTOM ? 0 : 1)];
   645  00c5  cd1201            	call	_is_ad_service
   646  00c8  cb45              	bit	0, l
   647  00ca  2804              	jr	Z,l_service_area_00103
   648  00cc  3e02              	ld	a,0x02
   649  00ce  1801              	jr	l_service_area_00104
   650                          l_service_area_00103:
   651  00d0  af                	xor	a, a
   652                          l_service_area_00104:
   653  00d1  c604              	add	a,0x04
   654  00d3  4f                	ld	c, a
   655  00d4  210200            	ld	hl,+(_game_state + 2)
   656  00d7  46                	ld	b, (hl)
   657  00d8  cb40              	bit	0, b
   658  00da  2805              	jr	Z,l_service_area_00105
   659  00dc  210000            	ld	hl,0x0000
   660  00df  1803              	jr	l_service_area_00106
   661                          l_service_area_00105:
   662  00e1  210100            	ld	hl,0x0001
   663                          l_service_area_00106:
   664  00e4  09                	add	hl, bc
   665  00e5  7d                	ld	a, l
   666  00e6  07                	rlca
   667  00e7  9f                	sbc	a, a
   668  00e8  67                	ld	h, a
   669  00e9  29                	add	hl, hl
   670  00ea  29                	add	hl, hl
   671  00eb  29                	add	hl, hl
   672  00ec  110000            	ld	de,_court_boundaries
   673  00ef  19                	add	hl, de
   674                          ;game_state.c:85: }
   675  00f0  c9                	ret
   676                          ;game_state.c:87: const Boundary *valid_area(PlayerId player_id)
   677                          ;	---------------------------------
   678                          ; Function valid_area
   679                          ; ---------------------------------
   680                          _valid_area:
   681  00f1  cd0000            	call	___sdcc_enter_ix
   682                          ;game_state.c:89: return &court_boundaries[COURT_AREA_VALID_UPPER + (player_id == PLAYER_BOTTOM ? 0 : 1)];
   683  00f4  ddcb0446          	bit	0,(ix+4)
   684  00f8  2805              	jr	Z,l_valid_area_00103
   685  00fa  210000            	ld	hl,0x0000
   686  00fd  1803              	jr	l_valid_area_00104
   687                          l_valid_area_00103:
   688  00ff  210100            	ld	hl,0x0001
   689                          l_valid_area_00104:
   690  0102  2c                	inc	l
   691  0103  2c                	inc	l
   692  0104  7d                	ld	a, l
   693  0105  07                	rlca
   694  0106  9f                	sbc	a, a
   695  0107  67                	ld	h, a
   696  0108  29                	add	hl, hl
   697  0109  29                	add	hl, hl
   698  010a  29                	add	hl, hl
   699  010b  110000            	ld	de,_court_boundaries
   700  010e  19                	add	hl, de
   701                          ;game_state.c:90: }
   702  010f  dde1              	pop	ix
   703  0111  c9                	ret
   704                          ;game_state.c:92: bool is_ad_service(void)
   705                          ;	---------------------------------
   706                          ; Function is_ad_service
   707                          ; ---------------------------------
   708                          _is_ad_service:
   709                          ;game_state.c:94: return (score.points[0] + score.points[1]) & 1;
   710  0112  3a0d00            	ld	a, (_score + 4)
   711  0115  1600              	ld	d,0x00
   712  0117  2a0e00            	ld	hl,(_score + 5)
   713  011a  62                	ld	h,d
   714  011b  5f                	ld	e, a
   715  011c  19                	add	hl, de
   716  011d  7d                	ld	a, l
   717  011e  e601              	and	a,0x01
   718  0120  6f                	ld	l, a
   719                          ;game_state.c:95: }
   720  0121  c9                	ret
   721                          ;game_state.c:101: void fade_out(uint8_t timer, void (*fn)(void))
   722                          ;	---------------------------------
   723                          ; Function fade_out
   724                          ; ---------------------------------
   725                          _fade_out:
   726  0122  cd0000            	call	___sdcc_enter_ix
   727                          ;game_state.c:103: game_state.fadeout_timer = timer;
   728  0125  210600            	ld	hl, +(_game_state + 6)
   729  0128  dd7e04            	ld	a,(ix+4)
   730  012b  77                	ld	(hl), a
   731                          ;game_state.c:104: game_state.fadeout_fn = fn;
   732  012c  210700            	ld	hl, +(_game_state + 7)
   733  012f  dd7e05            	ld	a,(ix+5)
   734  0132  77                	ld	(hl), a
   735  0133  23                	inc	hl
   736  0134  dd7e06            	ld	a,(ix+6)
   737  0137  77                	ld	(hl), a
   738                          ;game_state.c:105: }
   739  0138  dde1              	pop	ix
   740  013a  c9                	ret
   741                          ;game_state.c:107: void update_entities(void)
   742                          ;	---------------------------------
   743                          ; Function update_entities
   744                          ; ---------------------------------
   745                          _update_entities:
   746                          ;game_state.c:109: if (game_state.fadeout_timer > 0)
   747  013b  010600            	ld	bc,_game_state + 6
   748  013e  0a                	ld	a, (bc)
   749  013f  b7                	or	a, a
   750  0140  280b              	jr	Z,l_update_entities_00104
   751                          ;game_state.c:111: game_state.fadeout_timer--;
   752  0142  3d                	dec	a
   753  0143  02                	ld	(bc), a
   754                          ;game_state.c:112: if (game_state.fadeout_timer == 0)
   755  0144  b7                	or	a, a
   756  0145  2006              	jr	NZ,l_update_entities_00104
   757                          ;game_state.c:114: game_state.fadeout_fn();
   758  0147  2a0700            	ld	hl, (_game_state + 7)
   759  014a  cd0000            	call	___sdcc_call_hl
   760                          l_update_entities_00104:
   761                          ;game_state.c:118: update_ball();
   762  014d  cd0000            	call	_update_ball
   763                          ;game_state.c:119: update_players();
   764  0150  cd0000            	call	_update_players
   765                          ;game_state.c:120: update_umpire();
   766                          ;game_state.c:123: }
   767  0153  c30000            	jp	_update_umpire
   768                          ;game_state.c:128: void start_match(void)
   769                          ;	---------------------------------
   770                          ; Function start_match
   771                          ; ---------------------------------
   772                          _start_match:
   773                          ;game_state.c:130: init_controls();
   774  0156  cd0000            	call	_init_controls
   775                          ;game_state.c:131: init_umpire();
   776  0159  cd0000            	call	_init_umpire
   777                          ;game_state.c:137: game_state.service_owner = rand() % 2;
   778  015c  cd0000            	call	_rand
   779  015f  110200            	ld	de,0x0002
   780  0162  d5                	push	de
   781  0163  e5                	push	hl
   782  0164  cd0000            	call	__modsint_callee
   783  0167  7c                	ld	a, h
   784  0168  b5                	or	a, l
   785  0169  c6ff              	add	a,0xff
   786  016b  3e00              	ld	a,0x00
   787  016d  17                	rla
   788  016e  320200            	ld	((_game_state + 2)),a
   789                          ;game_state.c:140: umpire_call_service();
   790  0171  cd0000            	call	_umpire_call_service
   791                          ;game_state.c:143: score.sets[0] = 0;
   792  0174  210900            	ld	hl,_score
   793  0177  3600              	ld	(hl),0x00
   794                          ;game_state.c:144: score.sets[1] = 0;
   795  0179  210a00            	ld	hl, +(_score + 1)
   796  017c  3600              	ld	(hl),0x00
   797                          ;game_state.c:147: game_state.fadeout_timer = 0;
   798  017e  210600            	ld	hl, +(_game_state + 6)
   799  0181  3600              	ld	(hl),0x00
   800                          ;game_state.c:148: game_state.fadeout_fn = NULL;
   801  0183  210000            	ld	hl,0x0000
   802  0186  220700            	ld	(_game_state + 7),hl
   803                          ;game_state.c:151: init_score_board();
   804  0189  cd0000            	call	_init_score_board
   805                          ;game_state.c:152: show_score_board();
   806  018c  cd0000            	call	_show_score_board
   807                          ;game_state.c:154: start_set();
   808                          ;game_state.c:155: }
   809  018f  c39201            	jp	_start_set
   810                          ;game_state.c:157: void start_set(void)
   811                          ;	---------------------------------
   812                          ; Function start_set
   813                          ; ---------------------------------
   814                          _start_set:
   815                          ;game_state.c:159: score.games[0] = 0;
   816                          ;game_state.c:160: score.games[1] = 0;
   817  0192  210000            	ld	hl,0x0000
   818  0195  220b00            	ld	((_score + 2)),hl
   819                          ;game_state.c:161: show_score_board();
   820  0198  cd0000            	call	_show_score_board
   821                          ;game_state.c:163: start_game();
   822                          ;game_state.c:164: }
   823  019b  c39e01            	jp	_start_game
   824                          ;game_state.c:166: void start_game(void)
   825                          ;	---------------------------------
   826                          ; Function start_game
   827                          ; ---------------------------------
   828                          _start_game:
   829                          ;game_state.c:168: game_state.service_owner = (game_state.service_owner + 1) % 2;
   830  019e  010200            	ld	bc,_game_state+2
   831  01a1  0a                	ld	a, (bc)
   832  01a2  1600              	ld	d,0x00
   833  01a4  5f                	ld	e, a
   834  01a5  13                	inc	de
   835  01a6  c5                	push	bc
   836  01a7  210200            	ld	hl,0x0002
   837  01aa  e5                	push	hl
   838  01ab  d5                	push	de
   839  01ac  cd0000            	call	__modsint_callee
   840  01af  c1                	pop	bc
   841  01b0  7c                	ld	a, h
   842  01b1  b5                	or	a, l
   843  01b2  c6ff              	add	a,0xff
   844  01b4  3e00              	ld	a,0x00
   845  01b6  17                	rla
   846  01b7  02                	ld	(bc), a
   847                          ;game_state.c:169: score.points[0] = GAME_ZERO;
   848                          ;game_state.c:170: score.points[1] = GAME_ZERO;
   849  01b8  210000            	ld	hl,0x0000
   850  01bb  220d00            	ld	((_score + 4)),hl
   851                          ;game_state.c:171: show_score_board();
   852  01be  cd0000            	call	_show_score_board
   853                          ;game_state.c:173: start_point();
   854                          ;game_state.c:174: }
   855  01c1  c3c401            	jp	_start_point
   856                          ;game_state.c:176: void start_point(void)
   857                          ;	---------------------------------
   858                          ; Function start_point
   859                          ; ---------------------------------
   860                          _start_point:
   861                          ;game_state.c:178: game_state.second_service = false;
   862  01c4  210300            	ld	hl, +(_game_state + 3)
   863  01c7  3600              	ld	(hl),0x00
   864                          ;game_state.c:180: start_service();
   865                          ;game_state.c:181: }
   866  01c9  c3cc01            	jp	_start_service
   867                          ;game_state.c:183: void start_service(void)
   868                          ;	---------------------------------
   869                          ; Function start_service
   870                          ; ---------------------------------
   871                          _start_service:
   872                          ;game_state.c:185: game_state.touched_net = false;
   873  01cc  210400            	ld	hl, +(_game_state + 4)
   874  01cf  3600              	ld	(hl),0x00
   875                          ;game_state.c:186: game_state.point_status = POS_SERVICE_START;
   876  01d1  210000            	ld	hl,_game_state
   877  01d4  3600              	ld	(hl),0x00
   878                          ;game_state.c:187: restart_computer_controls();
   879  01d6  cd0000            	call	_restart_computer_controls
   880                          ;game_state.c:190: if (game_state.service_owner == PLAYER_TOP)
   881  01d9  210200            	ld	hl,_game_state + 2
   882  01dc  cb46              	bit	0,(hl)
   883  01de  2008              	jr	NZ,l_start_service_00102
   884                          ;game_state.c:192: serving_player = &player_top;
   885  01e0  110000            	ld	de,_player_top+0
   886                          ;game_state.c:193: receiving_player = &player_bottom;
   887  01e3  010000            	ld	bc,_player_bottom+0
   888  01e6  1806              	jr	l_start_service_00103
   889                          l_start_service_00102:
   890                          ;game_state.c:197: serving_player = &player_bottom;
   891  01e8  110000            	ld	de,_player_bottom
   892                          ;game_state.c:198: receiving_player = &player_top;
   893  01eb  010000            	ld	bc,_player_top
   894                          l_start_service_00103:
   895                          ;game_state.c:200: transition_serve_ready(serving_player);
   896  01ee  c5                	push	bc
   897  01ef  d5                	push	de
   898  01f0  cd0000            	call	_transition_serve_ready
   899  01f3  f1                	pop	af
   900  01f4  cd0000            	call	_transition_receive_serve
   901  01f7  f1                	pop	af
   902                          ;game_state.c:204: }
   903  01f8  c9                	ret
   904                          ;game_state.c:213: void event_ball_bounced(void)
   905                          ;	---------------------------------
   906                          ; Function event_ball_bounced
   907                          ; ---------------------------------
   908                          _event_ball_bounced:
   909                          ;game_state.c:215: if (game_state.fadeout_timer > 0)
   910  01f9  3a0600            	ld	a, (_game_state + 6)
   911  01fc  b7                	or	a, a
   912                          ;game_state.c:216: return;
   913  01fd  c2ab02            	jp	NZ,l_event_ball_bounced_00128
   914                          ;game_state.c:218: if (game_state.point_status == POS_SERVICE_START)
   915  0200  3a0000            	ld	a,(_game_state)
   916  0203  4f                	ld	c,a
   917  0204  b7                	or	a, a
   918  0205  2010              	jr	NZ,l_event_ball_bounced_00126
   919                          ;game_state.c:221: fade_out(DEFAULT_FADEOUT, start_service);
   920  0207  21cc01            	ld	hl,_start_service
   921  020a  e5                	push	hl
   922  020b  3e1e              	ld	a,0x1e
   923  020d  f5                	push	af
   924  020e  33                	inc	sp
   925  020f  cd2201            	call	_fade_out
   926  0212  f1                	pop	af
   927  0213  33                	inc	sp
   928  0214  c3ab02            	jp	l_event_ball_bounced_00128
   929                          l_event_ball_bounced_00126:
   930                          ;game_state.c:225: CourtArea valid_area = (is_ad_service() ? COURT_AREA_UPPER_AD_SERVE : COURT_AREA_UPPER_DEUCE_SERVE) | (game_state.service_owner ^ 1);
   931                          ;game_state.c:223: else if (game_state.point_status == POS_SERVICE_HIT || game_state.point_status == POS_SERVICE_HIT_ATTEMPT)
   932  0217  79                	ld	a,c
   933  0218  fe02              	cp	a,0x02
   934  021a  2803              	jr	Z,l_event_ball_bounced_00121
   935  021c  3d                	dec	a
   936  021d  2051              	jr	NZ,l_event_ball_bounced_00122
   937                          l_event_ball_bounced_00121:
   938                          ;game_state.c:225: CourtArea valid_area = (is_ad_service() ? COURT_AREA_UPPER_AD_SERVE : COURT_AREA_UPPER_DEUCE_SERVE) | (game_state.service_owner ^ 1);
   939  021f  cd1201            	call	_is_ad_service
   940  0222  cb45              	bit	0, l
   941  0224  2804              	jr	Z,l_event_ball_bounced_00130
   942  0226  0e06              	ld	c,0x06
   943  0228  1802              	jr	l_event_ball_bounced_00131
   944                          l_event_ball_bounced_00130:
   945  022a  0e04              	ld	c,0x04
   946                          l_event_ball_bounced_00131:
   947  022c  3a0200            	ld	a,(_game_state + 2)
   948  022f  ee01              	xor	a,0x01
   949  0231  b1                	or	a, c
   950                          ;game_state.c:226: if (ball_in_boundary(valid_area))
   951  0232  f5                	push	af
   952  0233  33                	inc	sp
   953  0234  cd0000            	call	_ball_in_boundary
   954  0237  33                	inc	sp
   955  0238  cb45              	bit	0, l
   956  023a  282f              	jr	Z,l_event_ball_bounced_00110
   957                          ;game_state.c:229: if (game_state.touched_net)
   958  023c  210400            	ld	hl,_game_state + 4
   959  023f  cb46              	bit	0,(hl)
   960  0241  2821              	jr	Z,l_event_ball_bounced_00107
   961                          ;game_state.c:232: umpire_call_let();
   962  0243  cd0000            	call	_umpire_call_let
   963                          ;game_state.c:233: if (game_state.second_service)
   964  0246  210300            	ld	hl,_game_state + 3
   965  0249  cb46              	bit	0,(hl)
   966  024b  2805              	jr	Z,l_event_ball_bounced_00104
   967                          ;game_state.c:234: umpire_call_second_service();
   968  024d  cd0000            	call	_umpire_call_second_service
   969  0250  1803              	jr	l_event_ball_bounced_00105
   970                          l_event_ball_bounced_00104:
   971                          ;game_state.c:236: umpire_call_first_service();
   972  0252  cd0000            	call	_umpire_call_first_service
   973                          l_event_ball_bounced_00105:
   974                          ;game_state.c:237: fade_out(DEFAULT_FADEOUT, start_service);
   975  0255  21cc01            	ld	hl,_start_service
   976  0258  e5                	push	hl
   977  0259  3e1e              	ld	a,0x1e
   978  025b  f5                	push	af
   979  025c  33                	inc	sp
   980  025d  cd2201            	call	_fade_out
   981  0260  f1                	pop	af
   982  0261  33                	inc	sp
   983  0262  1847              	jr	l_event_ball_bounced_00128
   984                          l_event_ball_bounced_00107:
   985                          ;game_state.c:241: game_state.point_status = POS_BOUNCED_IN;
   986  0264  210000            	ld	hl,_game_state
   987  0267  3604              	ld	(hl),0x04
   988  0269  1840              	jr	l_event_ball_bounced_00128
   989                          l_event_ball_bounced_00110:
   990                          ;game_state.c:246: ball_is_bouncing_out();
   991  026b  c35e03            	jp	_ball_is_bouncing_out
   992  026e  183b              	jr	l_event_ball_bounced_00128
   993                          l_event_ball_bounced_00122:
   994                          ;game_state.c:250: else if (game_state.point_status == POS_HIT)
   995  0270  79                	ld	a, c
   996  0271  d603              	sub	a,0x03
   997  0273  2019              	jr	NZ,l_event_ball_bounced_00119
   998                          ;game_state.c:252: if (ball_in_boundary(COURT_AREA_VALID_UPPER | (game_state.ball_owner ^ 1)))
   999  0275  3a0100            	ld	a, (_game_state + 1)
  1000  0278  ee01              	xor	a,0x01
  1001  027a  f602              	or	a,0x02
  1002  027c  f5                	push	af
  1003  027d  33                	inc	sp
  1004  027e  cd0000            	call	_ball_in_boundary
  1005  0281  33                	inc	sp
  1006  0282  cb45              	bit	0, l
  1007  0284  ca5e03            	jp	Z,_ball_is_bouncing_out
  1008                          ;game_state.c:253: game_state.point_status = POS_BOUNCED_IN;
  1009  0287  210000            	ld	hl,_game_state
  1010                          ;game_state.c:255: ball_is_bouncing_out();
  1011  028a  3604              	ld	(hl),0x04
  1012  028c  181d              	jr	l_event_ball_bounced_00128
  1013                          l_event_ball_bounced_00119:
  1014                          ;game_state.c:257: else if (game_state.point_status == POS_BOUNCED_IN)
  1015  028e  79                	ld	a, c
  1016  028f  d604              	sub	a,0x04
  1017  0291  200f              	jr	NZ,l_event_ball_bounced_00116
  1018                          ;game_state.c:259: fade_out(SHORT_FADEOUT, ball_bounced_twice);
  1019  0293  21e503            	ld	hl,_ball_bounced_twice
  1020  0296  e5                	push	hl
  1021  0297  3e0a              	ld	a,0x0a
  1022  0299  f5                	push	af
  1023  029a  33                	inc	sp
  1024  029b  cd2201            	call	_fade_out
  1025  029e  f1                	pop	af
  1026  029f  33                	inc	sp
  1027  02a0  1809              	jr	l_event_ball_bounced_00128
  1028                          l_event_ball_bounced_00116:
  1029                          ;game_state.c:264: finish_point(game_state.service_owner);
  1030  02a2  3a0200            	ld	a,(_game_state + 2)
  1031  02a5  f5                	push	af
  1032  02a6  33                	inc	sp
  1033  02a7  cdef03            	call	_finish_point
  1034  02aa  33                	inc	sp
  1035                          l_event_ball_bounced_00128:
  1036                          ;game_state.c:266: }
  1037  02ab  c9                	ret
  1038                          ;game_state.c:273: void event_player_hit(PlayerId player)
  1039                          ;	---------------------------------
  1040                          ; Function event_player_hit
  1041                          ; ---------------------------------
  1042                          _event_player_hit:
  1043  02ac  cd0000            	call	___sdcc_enter_ix
  1044                          ;game_state.c:275: if (game_state.fadeout_timer > 0)
  1045  02af  3a0600            	ld	a, (_game_state + 6)
  1046  02b2  b7                	or	a, a
  1047                          ;game_state.c:276: return;
  1048  02b3  2051              	jr	NZ,l_event_player_hit_00116
  1049                          ;game_state.c:279: if (game_state.point_status == POS_SERVICE_START)
  1050  02b5  210000            	ld	hl,_game_state
  1051  02b8  5e                	ld	e, (hl)
  1052                          ;game_state.c:282: game_state.ball_owner = player;
  1053  02b9  010100            	ld	bc,_game_state + 1
  1054                          ;game_state.c:279: if (game_state.point_status == POS_SERVICE_START)
  1055  02bc  7b                	ld	a, e
  1056  02bd  b7                	or	a, a
  1057  02be  200b              	jr	NZ,l_event_player_hit_00114
  1058                          ;game_state.c:281: game_state.point_status = POS_SERVICE_HIT;
  1059  02c0  210000            	ld	hl,_game_state
  1060  02c3  3602              	ld	(hl),0x02
  1061                          ;game_state.c:282: game_state.ball_owner = player;
  1062  02c5  dd7e04            	ld	a,(ix+4)
  1063  02c8  02                	ld	(bc), a
  1064  02c9  183b              	jr	l_event_player_hit_00116
  1065                          l_event_player_hit_00114:
  1066                          ;game_state.c:288: finish_point(player ^ 1);
  1067  02cb  dd7e04            	ld	a,(ix+4)
  1068  02ce  ee01              	xor	a,0x01
  1069  02d0  57                	ld	d, a
  1070                          ;game_state.c:284: else if (game_state.point_status == POS_SERVICE_HIT)
  1071  02d1  7b                	ld	a, e
  1072  02d2  d602              	sub	a,0x02
  1073  02d4  2008              	jr	NZ,l_event_player_hit_00111
  1074                          ;game_state.c:288: finish_point(player ^ 1);
  1075  02d6  d5                	push	de
  1076  02d7  33                	inc	sp
  1077  02d8  cdef03            	call	_finish_point
  1078  02db  33                	inc	sp
  1079  02dc  1828              	jr	l_event_player_hit_00116
  1080                          l_event_player_hit_00111:
  1081                          ;game_state.c:290: else if (game_state.point_status == POS_BOUNCED_IN || game_state.point_status == POS_HIT)
  1082  02de  7b                	ld	a,e
  1083  02df  fe04              	cp	a,0x04
  1084  02e1  2804              	jr	Z,l_event_player_hit_00106
  1085  02e3  d603              	sub	a,0x03
  1086  02e5  201b              	jr	NZ,l_event_player_hit_00107
  1087                          l_event_player_hit_00106:
  1088                          ;game_state.c:292: if (game_state.ball_owner == player)
  1089  02e7  0a                	ld	a, (bc)
  1090  02e8  5f                	ld	e, a
  1091  02e9  dd7e04            	ld	a,(ix+4)
  1092  02ec  93                	sub	a, e
  1093  02ed  2008              	jr	NZ,l_event_player_hit_00104
  1094                          ;game_state.c:295: finish_point(player ^ 1);
  1095  02ef  d5                	push	de
  1096  02f0  33                	inc	sp
  1097  02f1  cdef03            	call	_finish_point
  1098  02f4  33                	inc	sp
  1099  02f5  180f              	jr	l_event_player_hit_00116
  1100                          l_event_player_hit_00104:
  1101                          ;game_state.c:300: game_state.point_status = POS_HIT;
  1102  02f7  210000            	ld	hl,_game_state
  1103  02fa  3603              	ld	(hl),0x03
  1104                          ;game_state.c:301: game_state.ball_owner = player;
  1105  02fc  dd7e04            	ld	a,(ix+4)
  1106  02ff  02                	ld	(bc), a
  1107  0300  1804              	jr	l_event_player_hit_00116
  1108                          l_event_player_hit_00107:
  1109                          ;game_state.c:307: game_state.ball_owner = player;
  1110  0302  dd7e04            	ld	a,(ix+4)
  1111  0305  02                	ld	(bc), a
  1112                          l_event_player_hit_00116:
  1113                          ;game_state.c:309: }
  1114  0306  dde1              	pop	ix
  1115  0308  c9                	ret
  1116                          ;game_state.c:314: void event_net_touched(void)
  1117                          ;	---------------------------------
  1118                          ; Function event_net_touched
  1119                          ; ---------------------------------
  1120                          _event_net_touched:
  1121                          ;game_state.c:316: game_state.touched_net = true;
  1122  0309  210400            	ld	hl, +(_game_state + 4)
  1123  030c  3601              	ld	(hl),0x01
  1124                          ;game_state.c:317: }
  1125  030e  c9                	ret
  1126                          ;game_state.c:319: void event_player_touch(Player *player)
  1127                          ;	---------------------------------
  1128                          ; Function event_player_touch
  1129                          ; ---------------------------------
  1130                          _event_player_touch:
  1131  030f  cd0000            	call	___sdcc_enter_ix
  1132                          ;game_state.c:321: if (game_state.fadeout_timer > 0 || game_state.point_status == POS_END_MATCH)
  1133  0312  3a0600            	ld	a, (_game_state + 6)
  1134  0315  b7                	or	a, a
  1135  0316  2023              	jr	NZ,l_event_player_touch_00104
  1136  0318  3a0000            	ld	a,(_game_state)
  1137  031b  d605              	sub	a,0x05
  1138                          ;game_state.c:322: return;
  1139  031d  281c              	jr	Z,l_event_player_touch_00104
  1140                          ;game_state.c:324: game_state.touched_ball = player->id;
  1141  031f  110500            	ld	de,_game_state + 5
  1142  0322  dd4e04            	ld	c,(ix+4)
  1143  0325  dd4605            	ld	b,(ix+5)
  1144  0328  0a                	ld	a, (bc)
  1145  0329  12                	ld	(de), a
  1146                          ;game_state.c:325: transition_touch(player);
  1147  032a  c5                	push	bc
  1148  032b  cd0000            	call	_transition_touch
  1149                          ;game_state.c:327: fade_out(DEFAULT_FADEOUT, ball_touched_player);
  1150  032e  213e03            	ld	hl,_ball_touched_player
  1151  0331  e3                	ex	(sp),hl
  1152  0332  3e1e              	ld	a,0x1e
  1153  0334  f5                	push	af
  1154  0335  33                	inc	sp
  1155  0336  cd2201            	call	_fade_out
  1156  0339  f1                	pop	af
  1157  033a  33                	inc	sp
  1158                          l_event_player_touch_00104:
  1159                          ;game_state.c:328: }
  1160  033b  dde1              	pop	ix
  1161  033d  c9                	ret
  1162                          ;game_state.c:331: void ball_touched_player(void)
  1163                          ;	---------------------------------
  1164                          ; Function ball_touched_player
  1165                          ; ---------------------------------
  1166                          _ball_touched_player:
  1167                          ;game_state.c:333: umpire_call_touch();
  1168  033e  cd0000            	call	_umpire_call_touch
  1169                          ;game_state.c:334: finish_point(game_state.touched_ball ^ 1);
  1170  0341  3a0500            	ld	a,(_game_state + 5)
  1171  0344  ee01              	xor	a,0x01
  1172  0346  f5                	push	af
  1173  0347  33                	inc	sp
  1174  0348  cdef03            	call	_finish_point
  1175  034b  33                	inc	sp
  1176                          ;game_state.c:335: }
  1177  034c  c9                	ret
  1178                          ;game_state.c:337: void ball_bounced_out_own_area(void)
  1179                          ;	---------------------------------
  1180                          ; Function ball_bounced_out_own_area
  1181                          ; ---------------------------------
  1182                          _ball_bounced_out_own_area:
  1183                          ;game_state.c:339: ball_bounced_out(true);
  1184  034d  3e01              	ld	a,0x01
  1185  034f  f5                	push	af
  1186  0350  33                	inc	sp
  1187  0351  cd9403            	call	_ball_bounced_out
  1188  0354  33                	inc	sp
  1189                          ;game_state.c:340: }
  1190  0355  c9                	ret
  1191                          ;game_state.c:342: void ball_bounced_out_opponent_area(void)
  1192                          ;	---------------------------------
  1193                          ; Function ball_bounced_out_opponent_area
  1194                          ; ---------------------------------
  1195                          _ball_bounced_out_opponent_area:
  1196                          ;game_state.c:344: ball_bounced_out(false);
  1197  0356  af                	xor	a, a
  1198  0357  f5                	push	af
  1199  0358  33                	inc	sp
  1200  0359  cd9403            	call	_ball_bounced_out
  1201  035c  33                	inc	sp
  1202                          ;game_state.c:345: }
  1203  035d  c9                	ret
  1204                          ;game_state.c:347: void ball_is_bouncing_out(void)
  1205                          ;	---------------------------------
  1206                          ; Function ball_is_bouncing_out
  1207                          ; ---------------------------------
  1208                          _ball_is_bouncing_out:
  1209                          ;game_state.c:349: bool bouncing_top = ball.y < NET_REFERENCE_Y;
  1210  035e  ed4b0400          	ld	bc,(_ball + 4)
  1211  0362  112043            	ld	de,0x4320
  1212  0365  d5                	push	de
  1213  0366  110000            	ld	de,0x0000
  1214  0369  d5                	push	de
  1215  036a  2a0600            	ld	hl,(_ball + 4 + 2)
  1216  036d  e5                	push	hl
  1217  036e  c5                	push	bc
  1218  036f  cd0000            	call	___fslt_callee
  1219                          ;game_state.c:350: fade_out(SHORT_FADEOUT, bouncing_top ^ game_state.ball_owner == PLAYER_TOP ? ball_bounced_out_opponent_area : ball_bounced_out_own_area);
  1220  0372  3a0100            	ld	a,(_game_state + 1)
  1221  0375  b7                	or	a,a
  1222  0376  4d                	ld	c,l
  1223  0377  2004              	jr	NZ,l_ball_is_bouncing_out_00110
  1224  0379  3e01              	ld	a,0x01
  1225  037b  1801              	jr	l_ball_is_bouncing_out_00111
  1226                          l_ball_is_bouncing_out_00110:
  1227  037d  af                	xor	a,a
  1228                          l_ball_is_bouncing_out_00111:
  1229  037e  a9                	xor	a,c
  1230  037f  2805              	jr	Z,l_ball_is_bouncing_out_00103
  1231  0381  015603            	ld	bc,_ball_bounced_out_opponent_area
  1232  0384  1803              	jr	l_ball_is_bouncing_out_00104
  1233                          l_ball_is_bouncing_out_00103:
  1234  0386  014d03            	ld	bc,_ball_bounced_out_own_area
  1235                          l_ball_is_bouncing_out_00104:
  1236  0389  c5                	push	bc
  1237  038a  3e0a              	ld	a,0x0a
  1238  038c  f5                	push	af
  1239  038d  33                	inc	sp
  1240  038e  cd2201            	call	_fade_out
  1241  0391  f1                	pop	af
  1242  0392  33                	inc	sp
  1243                          ;game_state.c:351: }
  1244  0393  c9                	ret
  1245                          ;game_state.c:357: void ball_bounced_out(bool own_area)
  1246                          ;	---------------------------------
  1247                          ; Function ball_bounced_out
  1248                          ; ---------------------------------
  1249                          _ball_bounced_out:
  1250  0394  cd0000            	call	___sdcc_enter_ix
  1251                          ;game_state.c:359: if (game_state.point_status == POS_SERVICE_HIT || game_state.point_status == POS_SERVICE_HIT_ATTEMPT)
  1252  0397  3a0000            	ld	a,(_game_state)
  1253  039a  fe02              	cp	a,0x02
  1254  039c  2803              	jr	Z,l_ball_bounced_out_00106
  1255  039e  3d                	dec	a
  1256  039f  202d              	jr	NZ,l_ball_bounced_out_00107
  1257                          l_ball_bounced_out_00106:
  1258                          ;game_state.c:361: if (game_state.second_service)
  1259  03a1  210300            	ld	hl,_game_state + 3
  1260  03a4  cb46              	bit	0,(hl)
  1261  03a6  2810              	jr	Z,l_ball_bounced_out_00102
  1262                          ;game_state.c:363: umpire_call_double_fault();
  1263  03a8  cd0000            	call	_umpire_call_double_fault
  1264                          ;game_state.c:364: finish_point(game_state.service_owner ^ 1);
  1265  03ab  3a0200            	ld	a, (_game_state + 2)
  1266  03ae  ee01              	xor	a,0x01
  1267  03b0  f5                	push	af
  1268  03b1  33                	inc	sp
  1269  03b2  cdef03            	call	_finish_point
  1270  03b5  33                	inc	sp
  1271  03b6  182a              	jr	l_ball_bounced_out_00110
  1272                          l_ball_bounced_out_00102:
  1273                          ;game_state.c:368: umpire_call_fault();
  1274  03b8  e5                	push	hl
  1275  03b9  cd0000            	call	_umpire_call_fault
  1276  03bc  e1                	pop	hl
  1277                          ;game_state.c:369: game_state.second_service = true;
  1278  03bd  3601              	ld	(hl),0x01
  1279                          ;game_state.c:370: fade_out(DEFAULT_FADEOUT, start_service);
  1280  03bf  21cc01            	ld	hl,_start_service
  1281  03c2  e5                	push	hl
  1282  03c3  3e1e              	ld	a,0x1e
  1283  03c5  f5                	push	af
  1284  03c6  33                	inc	sp
  1285  03c7  cd2201            	call	_fade_out
  1286  03ca  f1                	pop	af
  1287  03cb  33                	inc	sp
  1288  03cc  1814              	jr	l_ball_bounced_out_00110
  1289                          l_ball_bounced_out_00107:
  1290                          ;game_state.c:376: if (!own_area)
  1291  03ce  ddcb0446          	bit	0,(ix+4)
  1292  03d2  2003              	jr	NZ,l_ball_bounced_out_00105
  1293                          ;game_state.c:377: umpire_call_out();
  1294  03d4  cd0000            	call	_umpire_call_out
  1295                          l_ball_bounced_out_00105:
  1296                          ;game_state.c:378: finish_point(game_state.ball_owner ^ 1);
  1297  03d7  3a0100            	ld	a,(_game_state + 1)
  1298  03da  ee01              	xor	a,0x01
  1299  03dc  f5                	push	af
  1300  03dd  33                	inc	sp
  1301  03de  cdef03            	call	_finish_point
  1302  03e1  33                	inc	sp
  1303                          l_ball_bounced_out_00110:
  1304                          ;game_state.c:380: }
  1305  03e2  dde1              	pop	ix
  1306  03e4  c9                	ret
  1307                          ;game_state.c:382: void ball_bounced_twice(void)
  1308                          ;	---------------------------------
  1309                          ; Function ball_bounced_twice
  1310                          ; ---------------------------------
  1311                          _ball_bounced_twice:
  1312                          ;game_state.c:384: finish_point(game_state.ball_owner);
  1313  03e5  3a0100            	ld	a,(_game_state + 1)
  1314  03e8  f5                	push	af
  1315  03e9  33                	inc	sp
  1316  03ea  cdef03            	call	_finish_point
  1317  03ed  33                	inc	sp
  1318                          ;game_state.c:385: }
  1319  03ee  c9                	ret
  1320                          ;game_state.c:391: void finish_point(PlayerId playerId)
  1321                          ;	---------------------------------
  1322                          ; Function finish_point
  1323                          ; ---------------------------------
  1324                          _finish_point:
  1325  03ef  cd0000            	call	___sdcc_enter_ix
  1326  03f2  f5                	push	af
  1327                          ;game_state.c:393: bool tie_break = score.games[0] == score.games[1] && score.games[0] == match_type.n_games;
  1328  03f3  210b00            	ld	hl,_score + 2
  1329  03f6  4e                	ld	c, (hl)
  1330  03f7  3a0c00            	ld	a, (_score + 3)
  1331  03fa  91                	sub	a, c
  1332  03fb  2006              	jr	NZ,l_finish_point_00118
  1333  03fd  3a0000            	ld	a,(_match_type)
  1334  0400  91                	sub	a, c
  1335  0401  2803              	jr	Z,l_finish_point_00119
  1336                          l_finish_point_00118:
  1337  0403  af                	xor	a, a
  1338  0404  1802              	jr	l_finish_point_00120
  1339                          l_finish_point_00119:
  1340  0406  3e01              	ld	a,0x01
  1341                          l_finish_point_00120:
  1342  0408  dd77fe            	ld	(ix-2),a
  1343                          ;game_state.c:394: GamePoint pointsPlayer = score.points[playerId];
  1344  040b  dd7e04            	ld	a,(ix+4)
  1345  040e  c60d              	add	a,+((_score+4) & 0xFF)
  1346  0410  4f                	ld	c, a
  1347  0411  3e00              	ld	a,0x00
  1348  0413  ce00              	adc	a,+((_score+4) / 256)
  1349  0415  47                	ld	b, a
  1350  0416  0a                	ld	a, (bc)
  1351  0417  dd77ff            	ld	(ix-1),a
  1352  041a  5f                	ld	e,a
  1353                          ;game_state.c:395: GamePoint pointsOpponent = score.points[playerId ^ 1];
  1354  041b  dd7e04            	ld	a,(ix+4)
  1355  041e  1600              	ld	d,0x00
  1356  0420  ee01              	xor	a,0x01
  1357  0422  c60d              	add	a,+((_score+4) & 0xFF)
  1358  0424  6f                	ld	l, a
  1359  0425  7a                	ld	a, d
  1360  0426  ce00              	adc	a,+((_score+4) / 256)
  1361  0428  67                	ld	h, a
  1362  0429  56                	ld	d, (hl)
  1363                          ;game_state.c:397: if (tie_break)
  1364  042a  ddcbfe46          	bit	0,(ix-2)
  1365  042e  2040              	jr	NZ,l_finish_point_00115
  1366                          ;game_state.c:404: if (pointsPlayer == GAME_FORTY)
  1367  0430  dd7eff            	ld	a,(ix-1)
  1368  0433  d603              	sub	a,0x03
  1369  0435  2021              	jr	NZ,l_finish_point_00111
  1370                          ;game_state.c:406: if (pointsOpponent < GAME_FORTY)
  1371  0437  7a                	ld	a, d
  1372  0438  d603              	sub	a,0x03
  1373  043a  300e              	jr	NC,l_finish_point_00105
  1374                          ;game_state.c:408: finish_game(playerId);
  1375  043c  dd7e04            	ld	a,(ix+4)
  1376  043f  f5                	push	af
  1377  0440  33                	inc	sp
  1378  0441  cd8704            	call	_finish_game
  1379  0444  33                	inc	sp
  1380                          ;game_state.c:409: show_score_board();
  1381  0445  cd0000            	call	_show_score_board
  1382                          ;game_state.c:410: return;
  1383  0448  1839              	jr	l_finish_point_00116
  1384                          l_finish_point_00105:
  1385                          ;game_state.c:412: else if (pointsOpponent == GAME_FORTY)
  1386  044a  7a                	ld	a, d
  1387  044b  d603              	sub	a,0x03
  1388  044d  2005              	jr	NZ,l_finish_point_00102
  1389                          ;game_state.c:415: score.points[playerId] = GAME_ADVANTAGE;
  1390  044f  3e04              	ld	a,0x04
  1391  0451  02                	ld	(bc), a
  1392  0452  181c              	jr	l_finish_point_00115
  1393                          l_finish_point_00102:
  1394                          ;game_state.c:420: score.points[playerId ^ 1] = GAME_FORTY;
  1395  0454  3603              	ld	(hl),0x03
  1396  0456  1818              	jr	l_finish_point_00115
  1397                          l_finish_point_00111:
  1398                          ;game_state.c:423: else if (pointsPlayer == GAME_ADVANTAGE)
  1399  0458  dd7eff            	ld	a,(ix-1)
  1400  045b  d604              	sub	a,0x04
  1401  045d  200e              	jr	NZ,l_finish_point_00108
  1402                          ;game_state.c:425: finish_game(playerId);
  1403  045f  dd7e04            	ld	a,(ix+4)
  1404  0462  f5                	push	af
  1405  0463  33                	inc	sp
  1406  0464  cd8704            	call	_finish_game
  1407  0467  33                	inc	sp
  1408                          ;game_state.c:426: show_score_board();
  1409  0468  cd0000            	call	_show_score_board
  1410                          ;game_state.c:427: return;
  1411  046b  1816              	jr	l_finish_point_00116
  1412                          l_finish_point_00108:
  1413                          ;game_state.c:431: score.points[playerId]++;
  1414  046d  7b                	ld	a, e
  1415  046e  3c                	inc	a
  1416  046f  02                	ld	(bc), a
  1417                          l_finish_point_00115:
  1418                          ;game_state.c:435: show_score_board();
  1419  0470  cd0000            	call	_show_score_board
  1420                          ;game_state.c:436: umpire_call_score();
  1421  0473  cd0000            	call	_umpire_call_score
  1422                          ;game_state.c:437: fade_out(DEFAULT_FADEOUT, start_point);
  1423  0476  21c401            	ld	hl,_start_point
  1424  0479  e5                	push	hl
  1425  047a  3e1e              	ld	a,0x1e
  1426  047c  f5                	push	af
  1427  047d  33                	inc	sp
  1428  047e  cd2201            	call	_fade_out
  1429  0481  f1                	pop	af
  1430  0482  33                	inc	sp
  1431                          l_finish_point_00116:
  1432                          ;game_state.c:438: }
  1433  0483  f1                	pop	af
  1434  0484  dde1              	pop	ix
  1435  0486  c9                	ret
  1436                          ;game_state.c:440: void finish_game(PlayerId playerId)
  1437                          ;	---------------------------------
  1438                          ; Function finish_game
  1439                          ; ---------------------------------
  1440                          _finish_game:
  1441  0487  cd0000            	call	___sdcc_enter_ix
  1442                          ;game_state.c:442: score.games[playerId]++;
  1443  048a  dd7e04            	ld	a,(ix+4)
  1444  048d  c60b              	add	a,+((_score+2) & 0xFF)
  1445  048f  4f                	ld	c, a
  1446  0490  3e00              	ld	a,0x00
  1447  0492  ce00              	adc	a,+((_score+2) / 256)
  1448  0494  47                	ld	b, a
  1449  0495  0a                	ld	a, (bc)
  1450  0496  3c                	inc	a
  1451  0497  57                	ld	d,a
  1452  0498  02                	ld	(bc), a
  1453                          ;game_state.c:444: int8_t gamesDiff = score.games[playerId] - score.games[playerId ^ 1];
  1454  0499  dd7e04            	ld	a,(ix+4)
  1455  049c  1e00              	ld	e,0x00
  1456  049e  ee01              	xor	a,0x01
  1457  04a0  c60b              	add	a,+((_score+2) & 0xFF)
  1458  04a2  6f                	ld	l, a
  1459  04a3  7b                	ld	a, e
  1460  04a4  ce00              	adc	a,+((_score+2) / 256)
  1461  04a6  67                	ld	h, a
  1462  04a7  5e                	ld	e, (hl)
  1463  04a8  7a                	ld	a, d
  1464  04a9  93                	sub	a, e
  1465  04aa  5f                	ld	e, a
  1466                          ;game_state.c:445: if ((score.games[playerId] == match_type.n_games && gamesDiff >= 2) || score.games[playerId] > match_type.n_games)
  1467  04ab  2a0000            	ld	hl,(_match_type)
  1468  04ae  7a                	ld	a, d
  1469  04af  95                	sub	a, l
  1470  04b0  2007              	jr	NZ,l_finish_game_00105
  1471  04b2  7b                	ld	a, e
  1472  04b3  ee80              	xor	a,0x80
  1473  04b5  d682              	sub	a,0x82
  1474  04b7  3006              	jr	NC,l_finish_game_00101
  1475                          l_finish_game_00105:
  1476  04b9  0a                	ld	a, (bc)
  1477  04ba  4f                	ld	c, a
  1478  04bb  7d                	ld	a, l
  1479  04bc  91                	sub	a, c
  1480  04bd  300b              	jr	NC,l_finish_game_00102
  1481                          l_finish_game_00101:
  1482                          ;game_state.c:446: finish_set(playerId);
  1483  04bf  dd7e04            	ld	a,(ix+4)
  1484  04c2  f5                	push	af
  1485  04c3  33                	inc	sp
  1486  04c4  cde304            	call	_finish_set
  1487  04c7  33                	inc	sp
  1488  04c8  1816              	jr	l_finish_game_00106
  1489                          l_finish_game_00102:
  1490                          ;game_state.c:449: umpire_call_game_for_player(playerId);
  1491  04ca  dd7e04            	ld	a,(ix+4)
  1492  04cd  f5                	push	af
  1493  04ce  33                	inc	sp
  1494  04cf  cd0000            	call	_umpire_call_game_for_player
  1495  04d2  33                	inc	sp
  1496                          ;game_state.c:450: fade_out(DEFAULT_FADEOUT, start_game);
  1497  04d3  219e01            	ld	hl,_start_game
  1498  04d6  e5                	push	hl
  1499  04d7  3e1e              	ld	a,0x1e
  1500  04d9  f5                	push	af
  1501  04da  33                	inc	sp
  1502  04db  cd2201            	call	_fade_out
  1503  04de  f1                	pop	af
  1504  04df  33                	inc	sp
  1505                          l_finish_game_00106:
  1506                          ;game_state.c:452: }
  1507  04e0  dde1              	pop	ix
  1508  04e2  c9                	ret
  1509                          ;game_state.c:454: void finish_set(PlayerId playerId)
  1510                          ;	---------------------------------
  1511                          ; Function finish_set
  1512                          ; ---------------------------------
  1513                          _finish_set:
  1514  04e3  cd0000            	call	___sdcc_enter_ix
  1515                          ;game_state.c:456: score.sets[playerId]++;
  1516  04e6  dd4e04            	ld	c,(ix+4)
  1517  04e9  0600              	ld	b,0x00
  1518  04eb  210900            	ld	hl,_score
  1519  04ee  09                	add	hl, bc
  1520  04ef  4e                	ld	c, (hl)
  1521  04f0  0c                	inc	c
  1522  04f1  71                	ld	(hl), c
  1523                          ;game_state.c:457: if (score.sets[playerId] >= match_type.n_sets)
  1524  04f2  210100            	ld	hl,+(_match_type + 1)
  1525  04f5  46                	ld	b, (hl)
  1526  04f6  79                	ld	a, c
  1527  04f7  90                	sub	a, b
  1528  04f8  380b              	jr	C,l_finish_set_00102
  1529                          ;game_state.c:459: finish_match(playerId);
  1530  04fa  dd7e04            	ld	a,(ix+4)
  1531  04fd  f5                	push	af
  1532  04fe  33                	inc	sp
  1533  04ff  cd1e05            	call	_finish_match
  1534  0502  33                	inc	sp
  1535  0503  1816              	jr	l_finish_set_00104
  1536                          l_finish_set_00102:
  1537                          ;game_state.c:463: umpire_call_game_for_player(playerId);
  1538  0505  dd7e04            	ld	a,(ix+4)
  1539  0508  f5                	push	af
  1540  0509  33                	inc	sp
  1541  050a  cd0000            	call	_umpire_call_game_for_player
  1542  050d  33                	inc	sp
  1543                          ;game_state.c:464: fade_out(DEFAULT_FADEOUT, start_set);
  1544  050e  219201            	ld	hl,_start_set
  1545  0511  e5                	push	hl
  1546  0512  3e1e              	ld	a,0x1e
  1547  0514  f5                	push	af
  1548  0515  33                	inc	sp
  1549  0516  cd2201            	call	_fade_out
  1550  0519  f1                	pop	af
  1551  051a  33                	inc	sp
  1552                          l_finish_set_00104:
  1553                          ;game_state.c:466: }
  1554  051b  dde1              	pop	ix
  1555  051d  c9                	ret
  1556                          ;game_state.c:468: void finish_match(PlayerId playerId)
  1557                          ;	---------------------------------
  1558                          ; Function finish_match
  1559                          ; ---------------------------------
  1560                          _finish_match:
  1561  051e  cd0000            	call	___sdcc_enter_ix
  1562                          ;game_state.c:470: umpire_call_match_for_player(playerId);
  1563  0521  dd7e04            	ld	a,(ix+4)
  1564  0524  f5                	push	af
  1565  0525  33                	inc	sp
  1566  0526  cd0000            	call	_umpire_call_match_for_player
  1567  0529  33                	inc	sp
  1568                          ;game_state.c:471: fade_out(END_FADEOUT, end_match);
  1569  052a  213a05            	ld	hl,_end_match
  1570  052d  e5                	push	hl
  1571  052e  3e32              	ld	a,0x32
  1572  0530  f5                	push	af
  1573  0531  33                	inc	sp
  1574  0532  cd2201            	call	_fade_out
  1575  0535  f1                	pop	af
  1576  0536  33                	inc	sp
  1577                          ;game_state.c:472: }
  1578  0537  dde1              	pop	ix
  1579  0539  c9                	ret
  1580                          ;game_state.c:475: void end_match(void)
  1581                          ;	---------------------------------
  1582                          ; Function end_match
  1583                          ; ---------------------------------
  1584                          _end_match:
  1585                          ;game_state.c:477: game_state.point_status = POS_END_MATCH;
  1586  053a  210000            	ld	hl,_game_state
  1587  053d  3605              	ld	(hl),0x05
  1588                          ;game_state.c:478: }
  1589  053f  c9                	ret
  1590                          	SECTION data_compiler
  1591                          _match_type:
  1592  0000  06                	DEFB +0x06
  1593  0001  02                	DEFB +0x02
  1594                          	SECTION IGNORE
  1595                          
