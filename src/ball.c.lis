/tmp/tmpiCDqgmUG.asm:
     1                          MODULE ball_c
     2                          LINE 0, "ball.c"
ball.c:
                                
     1                          ;--------------------------------------------------------
     2                          ; File Created by SDCC : free open source ISO C Compiler
     3                          ; Version 4.3.0 #14210 (Mac OS X ppc)
     4                          ;--------------------------------------------------------
     5                          	.zxn
     6                          ; Processed by Z88DK
     7                          ;--------------------------------------------------------
     8                          
     9                          	EXTERN __divschar
    10                          	EXTERN __divschar_callee
    11                          	EXTERN __divsint
    12                          	EXTERN __divsint_callee
    13                          	EXTERN __divslong
    14                          	EXTERN __divslong_callee
    15                          	EXTERN __divslonglong
    16                          	EXTERN __divslonglong_callee
    17                          	EXTERN __divsuchar
    18                          	EXTERN __divsuchar_callee
    19                          	EXTERN __divuchar
    20                          	EXTERN __divuchar_callee
    21                          	EXTERN __divuint
    22                          	EXTERN __divuint_callee
    23                          	EXTERN __divulong
    24                          	EXTERN __divulong_callee
    25                          	EXTERN __divulonglong
    26                          	EXTERN __divulonglong_callee
    27                          	EXTERN __divuschar
    28                          	EXTERN __divuschar_callee
    29                          	EXTERN __modschar
    30                          	EXTERN __modschar_callee
    31                          	EXTERN __modsint
    32                          	EXTERN __modsint_callee
    33                          	EXTERN __modslong
    34                          	EXTERN __modslong_callee
    35                          	EXTERN __modslonglong
    36                          	EXTERN __modslonglong_callee
    37                          	EXTERN __modsuchar
    38                          	EXTERN __modsuchar_callee
    39                          	EXTERN __moduchar
    40                          	EXTERN __moduchar_callee
    41                          	EXTERN __moduint
    42                          	EXTERN __moduint_callee
    43                          	EXTERN __modulong
    44                          	EXTERN __modulong_callee
    45                          	EXTERN __modulonglong
    46                          	EXTERN __modulonglong_callee
    47                          	EXTERN __moduschar
    48                          	EXTERN __moduschar_callee
    49                          	EXTERN __mulint
    50                          	EXTERN __mulint_callee
    51                          	EXTERN __mullong
    52                          	EXTERN __mullong_callee
    53                          	EXTERN __mullonglong
    54                          	EXTERN __mullonglong_callee
    55                          	EXTERN __mulschar
    56                          	EXTERN __mulschar_callee
    57                          	EXTERN __mulsuchar
    58                          	EXTERN __mulsuchar_callee
    59                          	EXTERN __muluchar
    60                          	EXTERN __muluchar_callee
    61                          	EXTERN __muluschar
    62                          	EXTERN __muluschar_callee
    63                          	EXTERN __rlslonglong
    64                          	EXTERN __rlslonglong_callee
    65                          	EXTERN __rlulonglong
    66                          	EXTERN __rlulonglong_callee
    67                          	EXTERN __rrslonglong
    68                          	EXTERN __rrslonglong_callee
    69                          	EXTERN __rrulonglong
    70                          	EXTERN __rrulonglong_callee
    71                          	EXTERN ___mulsint2slong
    72                          	EXTERN ___mulsint2slong_callee
    73                          	EXTERN ___muluint2ulong
    74                          	EXTERN ___muluint2ulong_callee
    75                          	EXTERN ___sdcc_call_hl
    76                          	EXTERN ___sdcc_call_iy
    77                          	EXTERN ___sdcc_enter_ix
    78                          	EXTERN banked_call
    79                          	EXTERN _banked_ret
    80                          	EXTERN ___fs2schar
    81                          	EXTERN ___fs2schar_callee
    82                          	EXTERN ___fs2sint
    83                          	EXTERN ___fs2sint_callee
    84                          	EXTERN ___fs2slong
    85                          	EXTERN ___fs2slong_callee
    86                          	EXTERN ___fs2slonglong
    87                          	EXTERN ___fs2slonglong_callee
    88                          	EXTERN ___fs2uchar
    89                          	EXTERN ___fs2uchar_callee
    90                          	EXTERN ___fs2uint
    91                          	EXTERN ___fs2uint_callee
    92                          	EXTERN ___fs2ulong
    93                          	EXTERN ___fs2ulong_callee
    94                          	EXTERN ___fs2ulonglong
    95                          	EXTERN ___fs2ulonglong_callee
    96                          	EXTERN ___fsadd
    97                          	EXTERN ___fsadd_callee
    98                          	EXTERN ___fsdiv
    99                          	EXTERN ___fsdiv_callee
   100                          	EXTERN ___fseq
   101                          	EXTERN ___fseq_callee
   102                          	EXTERN ___fsgt
   103                          	EXTERN ___fsgt_callee
   104                          	EXTERN ___fslt
   105                          	EXTERN ___fslt_callee
   106                          	EXTERN ___fsmul
   107                          	EXTERN ___fsmul_callee
   108                          	EXTERN ___fsneq
   109                          	EXTERN ___fsneq_callee
   110                          	EXTERN ___fssub
   111                          	EXTERN ___fssub_callee
   112                          	EXTERN ___schar2fs
   113                          	EXTERN ___schar2fs_callee
   114                          	EXTERN ___sint2fs
   115                          	EXTERN ___sint2fs_callee
   116                          	EXTERN ___slong2fs
   117                          	EXTERN ___slong2fs_callee
   118                          	EXTERN ___slonglong2fs
   119                          	EXTERN ___slonglong2fs_callee
   120                          	EXTERN ___uchar2fs
   121                          	EXTERN ___uchar2fs_callee
   122                          	EXTERN ___uint2fs
   123                          	EXTERN ___uint2fs_callee
   124                          	EXTERN ___ulong2fs
   125                          	EXTERN ___ulong2fs_callee
   126                          	EXTERN ___ulonglong2fs
   127                          	EXTERN ___ulonglong2fs_callee
   128                          	EXTERN ____sdcc_2_copy_src_mhl_dst_deix
   129                          	EXTERN ____sdcc_2_copy_src_mhl_dst_bcix
   130                          	EXTERN ____sdcc_4_copy_src_mhl_dst_deix
   131                          	EXTERN ____sdcc_4_copy_src_mhl_dst_bcix
   132                          	EXTERN ____sdcc_4_copy_src_mhl_dst_mbc
   133                          	EXTERN ____sdcc_4_ldi_nosave_bc
   134                          	EXTERN ____sdcc_4_ldi_save_bc
   135                          	EXTERN ____sdcc_4_push_hlix
   136                          	EXTERN ____sdcc_4_push_mhl
   137                          	EXTERN ____sdcc_lib_setmem_hl
   138                          	EXTERN ____sdcc_ll_add_de_bc_hl
   139                          	EXTERN ____sdcc_ll_add_de_bc_hlix
   140                          	EXTERN ____sdcc_ll_add_de_hlix_bc
   141                          	EXTERN ____sdcc_ll_add_de_hlix_bcix
   142                          	EXTERN ____sdcc_ll_add_deix_bc_hl
   143                          	EXTERN ____sdcc_ll_add_deix_hlix
   144                          	EXTERN ____sdcc_ll_add_hlix_bc_deix
   145                          	EXTERN ____sdcc_ll_add_hlix_deix_bc
   146                          	EXTERN ____sdcc_ll_add_hlix_deix_bcix
   147                          	EXTERN ____sdcc_ll_asr_hlix_a
   148                          	EXTERN ____sdcc_ll_asr_mbc_a
   149                          	EXTERN ____sdcc_ll_copy_src_de_dst_hlix
   150                          	EXTERN ____sdcc_ll_copy_src_de_dst_hlsp
   151                          	EXTERN ____sdcc_ll_copy_src_deix_dst_hl
   152                          	EXTERN ____sdcc_ll_copy_src_deix_dst_hlix
   153                          	EXTERN ____sdcc_ll_copy_src_deixm_dst_hlsp
   154                          	EXTERN ____sdcc_ll_copy_src_desp_dst_hlsp
   155                          	EXTERN ____sdcc_ll_copy_src_hl_dst_de
   156                          	EXTERN ____sdcc_ll_copy_src_hlsp_dst_de
   157                          	EXTERN ____sdcc_ll_copy_src_hlsp_dst_deixm
   158                          	EXTERN ____sdcc_ll_lsl_hlix_a
   159                          	EXTERN ____sdcc_ll_lsl_mbc_a
   160                          	EXTERN ____sdcc_ll_lsr_hlix_a
   161                          	EXTERN ____sdcc_ll_lsr_mbc_a
   162                          	EXTERN ____sdcc_ll_push_hlix
   163                          	EXTERN ____sdcc_ll_push_mhl
   164                          	EXTERN ____sdcc_ll_sub_de_bc_hl
   165                          	EXTERN ____sdcc_ll_sub_de_bc_hlix
   166                          	EXTERN ____sdcc_ll_sub_de_hlix_bc
   167                          	EXTERN ____sdcc_ll_sub_de_hlix_bcix
   168                          	EXTERN ____sdcc_ll_sub_deix_bc_hl
   169                          	EXTERN ____sdcc_ll_sub_deix_hlix
   170                          	EXTERN ____sdcc_ll_sub_hlix_bc_deix
   171                          	EXTERN ____sdcc_ll_sub_hlix_deix_bc
   172                          	EXTERN ____sdcc_ll_sub_hlix_deix_bcix
   173                          	EXTERN ____sdcc_load_debc_deix
   174                          	EXTERN ____sdcc_load_dehl_deix
   175                          	EXTERN ____sdcc_load_debc_mhl
   176                          	EXTERN ____sdcc_load_hlde_mhl
   177                          	EXTERN ____sdcc_store_dehl_bcix
   178                          	EXTERN ____sdcc_store_debc_hlix
   179                          	EXTERN ____sdcc_store_debc_mhl
   180                          	EXTERN ____sdcc_cpu_pop_ei
   181                          	EXTERN ____sdcc_cpu_pop_ei_jp
   182                          	EXTERN ____sdcc_cpu_push_di
   183                          	EXTERN ____sdcc_outi
   184                          	EXTERN ____sdcc_outi_128
   185                          	EXTERN ____sdcc_outi_256
   186                          	EXTERN ____sdcc_ldi
   187                          	EXTERN ____sdcc_ldi_128
   188                          	EXTERN ____sdcc_ldi_256
   189                          	EXTERN ____sdcc_4_copy_srcd_hlix_dst_deix
   190                          	EXTERN ____sdcc_4_and_src_mbc_mhl_dst_deix
   191                          	EXTERN ____sdcc_4_or_src_mbc_mhl_dst_deix
   192                          	EXTERN ____sdcc_4_xor_src_mbc_mhl_dst_deix
   193                          	EXTERN ____sdcc_4_or_src_dehl_dst_bcix
   194                          	EXTERN ____sdcc_4_xor_src_dehl_dst_bcix
   195                          	EXTERN ____sdcc_4_and_src_dehl_dst_bcix
   196                          	EXTERN ____sdcc_4_xor_src_mbc_mhl_dst_debc
   197                          	EXTERN ____sdcc_4_or_src_mbc_mhl_dst_debc
   198                          	EXTERN ____sdcc_4_and_src_mbc_mhl_dst_debc
   199                          	EXTERN ____sdcc_4_cpl_src_mhl_dst_debc
   200                          	EXTERN ____sdcc_4_xor_src_debc_mhl_dst_debc
   201                          	EXTERN ____sdcc_4_or_src_debc_mhl_dst_debc
   202                          	EXTERN ____sdcc_4_and_src_debc_mhl_dst_debc
   203                          	EXTERN ____sdcc_4_and_src_debc_hlix_dst_debc
   204                          	EXTERN ____sdcc_4_or_src_debc_hlix_dst_debc
   205                          	EXTERN ____sdcc_4_xor_src_debc_hlix_dst_debc
   206                          
   207                          ;--------------------------------------------------------
   208                          ; Public variables in this module
   209                          ;--------------------------------------------------------
   210                          	GLOBAL _check_players_touch
   211                          	GLOBAL _check_player_touch
   212                          	GLOBAL _ball_crosses_net
   213                          	GLOBAL _ball_hits_ground
   214                          	GLOBAL _ball
   215                          	GLOBAL _update_ball
   216                          	GLOBAL _set_lob_ball_velocity
   217                          	GLOBAL _set_ball_velocity_net_height
   218                          	GLOBAL _ball_future_x_and_height
   219                          ;--------------------------------------------------------
   220                          ; Externals used
   221                          ;--------------------------------------------------------
   222                          	GLOBAL _game_loop
   223                          	GLOBAL _float_to_string
   224                          	GLOBAL _channel_b_remaining_length
   225                          	GLOBAL _is_sound_playing_channel_b
   226                          	GLOBAL _is_sound_playing
   227                          	GLOBAL _play_sound_channel_b
   228                          	GLOBAL _play_sound
   229                          	GLOBAL _sound_interrupt_handler
   230                          	GLOBAL _init_sound
   231                          	GLOBAL _ball_trajectory_points_at_service
   232                          	GLOBAL _ball_trajectory_points
   233                          	GLOBAL _set_ball_speed_at_drive
   234                          	GLOBAL _valid_area
   235                          	GLOBAL _service_area
   236                          	GLOBAL _get_serving_player
   237                          	GLOBAL _is_ad_service
   238                          	GLOBAL _start_match
   239                          	GLOBAL _event_player_touch
   240                          	GLOBAL _event_net_touched
   241                          	GLOBAL _event_player_hit
   242                          	GLOBAL _event_ball_bounced
   243                          	GLOBAL _update_entities
   244                          	GLOBAL _xy_in_boundary
   245                          	GLOBAL _point_in_boundary
   246                          	GLOBAL _x_projection
   247                          	GLOBAL _closest_type_of_hit
   248                          	GLOBAL _ball_at_reach
   249                          	GLOBAL _set_player_status
   250                          	GLOBAL _get_player
   251                          	GLOBAL _update_players
   252                          	GLOBAL _init_controls
   253                          	GLOBAL _diplay_profile
   254                          	GLOBAL _net_height_at
   255                          	GLOBAL _poly_callee
   256                          	GLOBAL _poly
   257                          	GLOBAL _exp10_fastcall
   258                          	GLOBAL _exp10
   259                          	GLOBAL _mul10u_fastcall
   260                          	GLOBAL _mul10u
   261                          	GLOBAL _mul2_fastcall
   262                          	GLOBAL _mul2
   263                          	GLOBAL _div2_fastcall
   264                          	GLOBAL _div2
   265                          	GLOBAL _invsqrt_fastcall
   266                          	GLOBAL _invsqrt
   267                          	GLOBAL _inv_fastcall
   268                          	GLOBAL _inv
   269                          	GLOBAL _sqr_fastcall
   270                          	GLOBAL _sqr
   271                          	GLOBAL _neg_fastcall
   272                          	GLOBAL _neg
   273                          	GLOBAL _isunordered_callee
   274                          	GLOBAL _isunordered
   275                          	GLOBAL _islessgreater_callee
   276                          	GLOBAL _islessgreater
   277                          	GLOBAL _islessequal_callee
   278                          	GLOBAL _islessequal
   279                          	GLOBAL _isless_callee
   280                          	GLOBAL _isless
   281                          	GLOBAL _isgreaterequal_callee
   282                          	GLOBAL _isgreaterequal
   283                          	GLOBAL _isgreater_callee
   284                          	GLOBAL _isgreater
   285                          	GLOBAL _fma_callee
   286                          	GLOBAL _fma
   287                          	GLOBAL _fmin_callee
   288                          	GLOBAL _fmin
   289                          	GLOBAL _fmax_callee
   290                          	GLOBAL _fmax
   291                          	GLOBAL _fdim_callee
   292                          	GLOBAL _fdim
   293                          	GLOBAL _nexttoward_callee
   294                          	GLOBAL _nexttoward
   295                          	GLOBAL _nextafter_callee
   296                          	GLOBAL _nextafter
   297                          	GLOBAL _nan_fastcall
   298                          	GLOBAL _nan
   299                          	GLOBAL _copysign_callee
   300                          	GLOBAL _copysign
   301                          	GLOBAL _remquo_callee
   302                          	GLOBAL _remquo
   303                          	GLOBAL _remainder_callee
   304                          	GLOBAL _remainder
   305                          	GLOBAL _fmod_callee
   306                          	GLOBAL _fmod
   307                          	GLOBAL _modf_callee
   308                          	GLOBAL _modf
   309                          	GLOBAL _trunc_fastcall
   310                          	GLOBAL _trunc
   311                          	GLOBAL _lround_fastcall
   312                          	GLOBAL _lround
   313                          	GLOBAL _round_fastcall
   314                          	GLOBAL _round
   315                          	GLOBAL _lrint_fastcall
   316                          	GLOBAL _lrint
   317                          	GLOBAL _rint_fastcall
   318                          	GLOBAL _rint
   319                          	GLOBAL _nearbyint_fastcall
   320                          	GLOBAL _nearbyint
   321                          	GLOBAL _floor_fastcall
   322                          	GLOBAL _floor
   323                          	GLOBAL _ceil_fastcall
   324                          	GLOBAL _ceil
   325                          	GLOBAL _tgamma_fastcall
   326                          	GLOBAL _tgamma
   327                          	GLOBAL _lgamma_fastcall
   328                          	GLOBAL _lgamma
   329                          	GLOBAL _erfc_fastcall
   330                          	GLOBAL _erfc
   331                          	GLOBAL _erf_fastcall
   332                          	GLOBAL _erf
   333                          	GLOBAL _cbrt_fastcall
   334                          	GLOBAL _cbrt
   335                          	GLOBAL _sqrt_fastcall
   336                          	GLOBAL _sqrt
   337                          	GLOBAL _pow_callee
   338                          	GLOBAL _pow
   339                          	GLOBAL _hypot_callee
   340                          	GLOBAL _hypot
   341                          	GLOBAL _fabs_fastcall
   342                          	GLOBAL _fabs
   343                          	GLOBAL _logb_fastcall
   344                          	GLOBAL _logb
   345                          	GLOBAL _log2_fastcall
   346                          	GLOBAL _log2
   347                          	GLOBAL _log1p_fastcall
   348                          	GLOBAL _log1p
   349                          	GLOBAL _log10_fastcall
   350                          	GLOBAL _log10
   351                          	GLOBAL _log_fastcall
   352                          	GLOBAL _log
   353                          	GLOBAL _ilogb_fastcall
   354                          	GLOBAL _ilogb
   355                          	GLOBAL _scalbln_callee
   356                          	GLOBAL _scalbln
   357                          	GLOBAL _scalbn_callee
   358                          	GLOBAL _scalbn
   359                          	GLOBAL _ldexp_callee
   360                          	GLOBAL _ldexp
   361                          	GLOBAL _frexp_callee
   362                          	GLOBAL _frexp
   363                          	GLOBAL _expm1_fastcall
   364                          	GLOBAL _expm1
   365                          	GLOBAL _exp2_fastcall
   366                          	GLOBAL _exp2
   367                          	GLOBAL _exp_fastcall
   368                          	GLOBAL _exp
   369                          	GLOBAL _tanh_fastcall
   370                          	GLOBAL _tanh
   371                          	GLOBAL _sinh_fastcall
   372                          	GLOBAL _sinh
   373                          	GLOBAL _cosh_fastcall
   374                          	GLOBAL _cosh
   375                          	GLOBAL _atanh_fastcall
   376                          	GLOBAL _atanh
   377                          	GLOBAL _asinh_fastcall
   378                          	GLOBAL _asinh
   379                          	GLOBAL _acosh_fastcall
   380                          	GLOBAL _acosh
   381                          	GLOBAL _tan_fastcall
   382                          	GLOBAL _tan
   383                          	GLOBAL _sin_fastcall
   384                          	GLOBAL _sin
   385                          	GLOBAL _cos_fastcall
   386                          	GLOBAL _cos
   387                          	GLOBAL _atan2_callee
   388                          	GLOBAL _atan2
   389                          	GLOBAL _atan_fastcall
   390                          	GLOBAL _atan
   391                          	GLOBAL _asin_fastcall
   392                          	GLOBAL _asin
   393                          	GLOBAL _acos_fastcall
   394                          	GLOBAL _acos
   395                          	GLOBAL _in_mouse_kempston_wheel_delta
   396                          	GLOBAL _in_mouse_kempston_wheel
   397                          	GLOBAL _in_mouse_kempston_callee
   398                          	GLOBAL _in_mouse_kempston
   399                          	GLOBAL _in_mouse_kempston_setpos_callee
   400                          	GLOBAL _in_mouse_kempston_setpos
   401                          	GLOBAL _in_mouse_kempston_reset
   402                          	GLOBAL _in_mouse_kempston_init
   403                          	GLOBAL _in_mouse_amx_wheel_delta
   404                          	GLOBAL _in_mouse_amx_wheel
   405                          	GLOBAL _in_mouse_amx_callee
   406                          	GLOBAL _in_mouse_amx
   407                          	GLOBAL _in_mouse_amx_setpos_callee
   408                          	GLOBAL _in_mouse_amx_setpos
   409                          	GLOBAL _in_mouse_amx_reset
   410                          	GLOBAL _in_mouse_amx_init_callee
   411                          	GLOBAL _in_mouse_amx_init
   412                          	GLOBAL _in_stick_sinclair2
   413                          	GLOBAL _in_stick_sinclair1
   414                          	GLOBAL _in_stick_kempston
   415                          	GLOBAL _in_stick_fuller
   416                          	GLOBAL _in_stick_cursor
   417                          	GLOBAL _in_stick_keyboard_fastcall
   418                          	GLOBAL _in_stick_keyboard
   419                          	GLOBAL _in_wait_nokey
   420                          	GLOBAL _in_wait_key
   421                          	GLOBAL _in_test_key
   422                          	GLOBAL _in_pause_fastcall
   423                          	GLOBAL _in_pause
   424                          	GLOBAL _in_key_scancode_fastcall
   425                          	GLOBAL _in_key_scancode
   426                          	GLOBAL _in_key_pressed_fastcall
   427                          	GLOBAL _in_key_pressed
   428                          	GLOBAL _in_inkey
   429                          	GLOBAL _game_frame_speed
   430                          	GLOBAL _next_iteration_delta
   431                          	GLOBAL _game_state
   432                          	GLOBAL _match_type
   433                          	GLOBAL _score
   434                          	GLOBAL _player_bottom
   435                          	GLOBAL _player_top
   436                          	GLOBAL _game_settings
   437                          	GLOBAL _ppponent_profile
   438                          	GLOBAL _court_boundaries
   439                          ;--------------------------------------------------------
   440                          ; special function registers
   441                          ;--------------------------------------------------------
   442                          ;--------------------------------------------------------
   443                          ; ram data
   444                          ;--------------------------------------------------------
   445                          	SECTION bss_compiler
   446                          ;--------------------------------------------------------
   447                          ; ram data
   448                          ;--------------------------------------------------------
   449                          
   450                          IF 0
   451                          
   452                          ; .area _INITIALIZED removed by z88dk
   453                          
   454                          _ball:
   455                          	DEFS 25
   456                          
   457                          ENDIF
   458                          
   459                          ;--------------------------------------------------------
   460                          ; absolute external ram data
   461                          ;--------------------------------------------------------
   462                          	SECTION IGNORE
   463                          ;--------------------------------------------------------
   464                          ; global & static initialisations
   465                          ;--------------------------------------------------------
   466                          	SECTION code_crt_init
   467                          ;--------------------------------------------------------
   468                          ; Home
   469                          ;--------------------------------------------------------
   470                          	SECTION IGNORE
   471                          ;--------------------------------------------------------
   472                          ; code
   473                          ;--------------------------------------------------------
   474                          	SECTION BANK_8
   475                          ;ball.c:58: if (ball.v_h > 1.5)
   476                          ;	---------------------------------
   477                          ; Function ball_hits_ground
   478                          ; ---------------------------------
   479                          _ball_hits_ground:
   480  0000  cd0000            	call	___sdcc_enter_ix
   481  0003  f5                	push	af
   482  0004  f5                	push	af
   483                          ;ball.c:60: ball.height = 0;
   484  0005  ed4b0000          	ld	bc,(_ball + 12)
   485  0009  2a0000            	ld	hl,(_ball + 12 + 2)
   486  000c  e5                	push	hl
   487  000d  c5                	push	bc
   488  000e  210000            	ld	hl,0x3fc0
   489  0011  e5                	push	hl
   490  0012  210000            	ld	hl,0x0000
   491  0015  e5                	push	hl
   492  0016  cd0000            	call	___fslt_callee
   493  0019  7d                	ld	a, l
   494  001a  b7                	or	a, a
   495  001b  2805              	jr	Z,l_ball_hits_ground_00102
   496                          ;ball.c:61: event_ball_bounced();
   497  001d  2e10              	ld	l,0x10
   498  001f  cd0000            	call	_play_sound
   499                          l_ball_hits_ground_00102:
   500                          ;ball.c:62: // The condition prevents excessive bounces when the ball is very close to the ground
   501  0022  210000            	ld	hl,0x0000
   502  0025  220800            	ld	(_ball + 8),hl
   503  0028  220a00            	ld	(_ball + 8 + 2),hl
   504                          ;ball.c:63: if (ball.v_h > 1)
   505  002b  cd0000            	call	_event_ball_bounced
   506                          ;ball.c:65: // TODO: consider friction for vectors v_x and v_y
   507  002e  110c00            	ld	de,+(_ball + 12)
   508  0031  210000            	ld	hl,0
   509  0034  39                	add	hl, sp
   510  0035  eb                	ex	de, hl
   511  0036  cd0000            	call	____sdcc_4_ldi_nosave_bc
   512  0039  d1                	pop	de
   513  003a  e1                	pop	hl
   514  003b  e5                	push	hl
   515  003c  d5                	push	de
   516  003d  eb                	ex	de,hl
   517  003e  e1                	pop	hl
   518  003f  e5                	push	hl
   519  0040  d5                	push	de
   520  0041  e5                	push	hl
   521  0042  21803f            	ld	hl,0x3f80
   522  0045  e5                	push	hl
   523  0046  210000            	ld	hl,0x0000
   524  0049  e5                	push	hl
   525  004a  cd0000            	call	___fslt_callee
   526  004d  7d                	ld	a, l
   527  004e  b7                	or	a, a
   528  004f  2821              	jr	Z,l_ball_hits_ground_00104
   529                          ;ball.c:68: else
   530  0051  dd7eff            	ld	a,(ix-1)
   531  0054  ee80              	xor	a,0x80
   532  0056  c1                	pop	bc
   533  0057  c5                	push	bc
   534  0058  dd5efe            	ld	e,(ix-2)
   535  005b  57                	ld	d, a
   536  005c  d5                	push	de
   537  005d  c5                	push	bc
   538  005e  21403f            	ld	hl,0x3f40
   539  0061  e5                	push	hl
   540  0062  210000            	ld	hl,0x0000
   541  0065  e5                	push	hl
   542  0066  cd0000            	call	___fsmul_callee
   543  0069  220c00            	ld	(_ball + 12),hl
   544  006c  ed530e00          	ld	(_ball + 12 + 2),de
   545  0070  1815              	jr	l_ball_hits_ground_00106
   546                          l_ball_hits_ground_00104:
   547                          ;ball.c:72: ball.v_x = 0;
   548  0072  210000            	ld	hl,0x0000
   549  0075  220c00            	ld	(_ball + 12),hl
   550  0078  220e00            	ld	(_ball + 12 + 2),hl
   551                          ;ball.c:74: }
   552  007b  221000            	ld	(_ball + 16),hl
   553  007e  221200            	ld	(_ball + 16 + 2),hl
   554                          ;ball.c:75: }
   555  0081  221400            	ld	(_ball + 20),hl
   556  0084  221600            	ld	(_ball + 20 + 2),hl
   557                          l_ball_hits_ground_00106:
   558                          ;ball.c:77: void ball_crosses_net(void)
   559  0087  ddf9              	ld	sp, ix
   560  0089  dde1              	pop	ix
   561  008b  c9                	ret
   562                          	SECTION BANK_8
   563                          ;ball.c:79: // TODO: consider touching the upper part of the net
   564                          ;	---------------------------------
   565                          ; Function ball_crosses_net
   566                          ; ---------------------------------
   567                          _ball_crosses_net:
   568  008c  cd0000            	call	___sdcc_enter_ix
   569  008f  21f8ff            	ld	hl, -8
   570  0092  39                	add	hl, sp
   571  0093  f9                	ld	sp, hl
   572                          ;ball.c:83: {
   573  0094  ed4b0000          	ld	bc,(_ball)
   574  0098  2a0200            	ld	hl, (_ball + 2)
   575  009b  e5                	push	hl
   576  009c  c5                	push	bc
   577  009d  cd0000            	call	___fs2sint_callee
   578  00a0  e5                	push	hl
   579  00a1  cd0000            	call	_net_height_at
   580  00a4  f1                	pop	af
   581  00a5  dd75fb            	ld	(ix-5),l
   582                          ;ball.c:84: event_net_touched();
   583  00a8  110800            	ld	de,+(_ball + 8)
   584  00ab  210400            	ld	hl,4
   585  00ae  39                	add	hl, sp
   586  00af  eb                	ex	de, hl
   587  00b0  cd0000            	call	____sdcc_4_ldi_nosave_bc
   588  00b3  dd7efb            	ld	a,(ix-5)
   589  00b6  f5                	push	af
   590  00b7  33                	inc	sp
   591  00b8  cd0000            	call	___uchar2fs_callee
   592  00bb  d5                	push	de
   593  00bc  e5                	push	hl
   594  00bd  21fcff            	ld	hl,-4
   595  00c0  cd0000            	call	____sdcc_4_push_hlix
   596  00c3  cd0000            	call	___fslt_callee
   597  00c6  7d                	ld	a, l
   598  00c7  b7                	or	a, a
   599  00c8  caf101            	jp	Z, l_ball_crosses_net_00106
   600                          ;ball.c:86: float ball_net_overlap = net_height - ball.height;
   601  00cb  cd0000            	call	_event_net_touched
   602                          ;ball.c:87: // debug_number("RIM", ball_net_overlap);
   603  00ce  2e13              	ld	l,0x13
   604  00d0  cd0000            	call	_play_sound
   605                          ;ball.c:88: if (ball_net_overlap >= BALL_DIAMETER)
   606  00d3  dd4efb            	ld	c,(ix-5)
   607  00d6  0600              	ld	b,0x00
   608  00d8  c5                	push	bc
   609  00d9  110800            	ld	de,+(_ball + 8)
   610  00dc  210600            	ld	hl,6
   611  00df  39                	add	hl, sp
   612  00e0  eb                	ex	de, hl
   613  00e1  cd0000            	call	____sdcc_4_ldi_nosave_bc
   614  00e4  cd0000            	call	___sint2fs_callee
   615  00e7  dd4efe            	ld	c,(ix-2)
   616  00ea  dd46ff            	ld	b,(ix-1)
   617  00ed  c5                	push	bc
   618  00ee  dd4efc            	ld	c,(ix-4)
   619  00f1  dd46fd            	ld	b,(ix-3)
   620  00f4  c5                	push	bc
   621  00f5  d5                	push	de
   622  00f6  e5                	push	hl
   623  00f7  cd0000            	call	___fssub_callee
   624                          ;ball.c:92: }
   625  00fa  d5                	push	de
   626  00fb  e5                	push	hl
   627  00fc  111400            	ld	de,+(_ball + 20)
   628  00ff  210400            	ld	hl,4
   629  0102  39                	add	hl, sp
   630  0103  eb                	ex	de, hl
   631  0104  cd0000            	call	____sdcc_4_ldi_nosave_bc
   632  0107  c1                	pop	bc
   633  0108  d1                	pop	de
   634                          ;ball.c:90: ball.y = NET_POSITION_Y - ball.v_y; // Move the ball back... make sure it does not cross the net
   635  0109  c5                	push	bc
   636  010a  d5                	push	de
   637  010b  21a040            	ld	hl,0x40a0
   638  010e  e5                	push	hl
   639  010f  210000            	ld	hl,0x0000
   640  0112  e5                	push	hl
   641  0113  d5                	push	de
   642  0114  c5                	push	bc
   643  0115  cd0000            	call	___fslt_callee
   644  0118  d1                	pop	de
   645  0119  c1                	pop	bc
   646  011a  cb45              	bit	0, l
   647  011c  203d              	jr	NZ,l_ball_crosses_net_00102
   648                          ;ball.c:92: }
   649  011e  d1                	pop	de
   650  011f  e1                	pop	hl
   651  0120  e5                	push	hl
   652  0121  d5                	push	de
   653  0122  eb                	ex	de,hl
   654  0123  e1                	pop	hl
   655  0124  e5                	push	hl
   656  0125  d5                	push	de
   657  0126  e5                	push	hl
   658  0127  212043            	ld	hl,0x4320
   659  012a  e5                	push	hl
   660  012b  210000            	ld	hl,0x0000
   661  012e  e5                	push	hl
   662  012f  cd0000            	call	___fssub_callee
   663  0132  220400            	ld	(_ball + 4),hl
   664  0135  ed530600          	ld	(_ball + 4 + 2),de
   665                          ;ball.c:93: else
   666  0139  ed4b1400          	ld	bc,(_ball + 20)
   667  013d  2a1600            	ld	hl,(_ball + 20 + 2)
   668  0140  7c                	ld	a, h
   669  0141  ee80              	xor	a,0x80
   670  0143  67                	ld	h, a
   671  0144  e5                	push	hl
   672  0145  c5                	push	bc
   673  0146  21283e            	ld	hl,0x3e28
   674  0149  e5                	push	hl
   675  014a  21c3f5            	ld	hl,0xf5c3
   676  014d  e5                	push	hl
   677  014e  cd0000            	call	___fsmul_callee
   678  0151  221400            	ld	(_ball + 20),hl
   679  0154  ed531600          	ld	(_ball + 20 + 2),de
   680  0158  c3f101            	jp	l_ball_crosses_net_00106
   681                          l_ball_crosses_net_00102:
   682                          ;ball.c:100: ball.v_y *= NET_COEF_RESTITUTION;
   683  015b  d5                	push	de
   684  015c  c5                	push	bc
   685  015d  210040            	ld	hl,0x4000
   686  0160  e5                	push	hl
   687  0161  65                	ld	h, l
   688  0162  e5                	push	hl
   689  0163  cd0000            	call	___fsmul_callee
   690  0166  01a040            	ld	bc,0x40a0
   691  0169  c5                	push	bc
   692  016a  010000            	ld	bc,0x0000
   693  016d  c5                	push	bc
   694  016e  d5                	push	de
   695  016f  e5                	push	hl
   696  0170  cd0000            	call	___fsdiv_callee
   697  0173  4d                	ld	c, l
   698  0174  44                	ld	b, h
   699  0175  21003f            	ld	hl,0x3f00
   700  0178  e5                	push	hl
   701  0179  65                	ld	h, l
   702  017a  e5                	push	hl
   703  017b  d5                	push	de
   704  017c  c5                	push	bc
   705  017d  cd0000            	call	___fsadd_callee
   706  0180  d5                	push	de
   707  0181  e5                	push	hl
   708  0182  21283e            	ld	hl,0x3e28
   709  0185  e5                	push	hl
   710  0186  21c3f5            	ld	hl,0xf5c3
   711  0189  e5                	push	hl
   712  018a  cd0000            	call	___fsmul_callee
   713  018d  01ffff            	ld	bc,-1
   714  0190  cd0000            	call	____sdcc_store_dehl_bcix
   715                          ;ball.c:102: ball.v_h = -fabs(ball.v_h) * corrected_coef_restitution;
   716  0193  d1                	pop	de
   717  0194  e1                	pop	hl
   718  0195  e5                	push	hl
   719  0196  d5                	push	de
   720  0197  eb                	ex	de,hl
   721  0198  e1                	pop	hl
   722  0199  e5                	push	hl
   723  019a  d5                	push	de
   724  019b  e5                	push	hl
   725  019c  21283e            	ld	hl,0x3e28
   726  019f  e5                	push	hl
   727  01a0  21c3f5            	ld	hl,0xf5c3
   728  01a3  e5                	push	hl
   729  01a4  cd0000            	call	___fsmul_callee
   730  01a7  221400            	ld	(_ball + 20),hl
   731  01aa  ed531600          	ld	(_ball + 20 + 2),de
   732                          ;ball.c:103: }
   733  01ae  ed4b1000          	ld	bc,(_ball + 16)
   734  01b2  2a1200            	ld	hl,(_ball + 16 + 2)
   735  01b5  e5                	push	hl
   736  01b6  c5                	push	bc
   737  01b7  21283e            	ld	hl,0x3e28
   738  01ba  e5                	push	hl
   739  01bb  21c3f5            	ld	hl,0xf5c3
   740  01be  e5                	push	hl
   741  01bf  cd0000            	call	___fsmul_callee
   742  01c2  221000            	ld	(_ball + 16),hl
   743  01c5  ed531200          	ld	(_ball + 16 + 2),de
   744                          ;ball.c:104: }
   745  01c9  2a0c00            	ld	hl,(_ball + 12)
   746  01cc  ed5b0e00          	ld	de,(_ball + 12 + 2)
   747  01d0  cd0000            	call	_fabs_fastcall
   748  01d3  7a                	ld	a, d
   749  01d4  ee80              	xor	a,0x80
   750  01d6  dd4efe            	ld	c,(ix-2)
   751  01d9  dd46ff            	ld	b,(ix-1)
   752  01dc  c5                	push	bc
   753  01dd  dd4efc            	ld	c,(ix-4)
   754  01e0  dd46fd            	ld	b,(ix-3)
   755  01e3  c5                	push	bc
   756  01e4  57                	ld	d, a
   757  01e5  d5                	push	de
   758  01e6  e5                	push	hl
   759  01e7  cd0000            	call	___fsmul_callee
   760  01ea  220c00            	ld	(_ball + 12),hl
   761  01ed  ed530e00          	ld	(_ball + 12 + 2),de
   762                          l_ball_crosses_net_00106:
   763                          ;ball.c:107: bool check_player_touch(Player *player)
   764  01f1  ddf9              	ld	sp, ix
   765  01f3  dde1              	pop	ix
   766  01f5  c9                	ret
   767                          ;ball.c:109: if ((player->state == PS_IDLE || player->state == PS_WALK) &&
   768                          ;	---------------------------------
   769                          ; Function check_player_touch
   770                          ; ---------------------------------
   771                          _check_player_touch:
   772  01f6  cd0000            	call	___sdcc_enter_ix
   773  01f9  f5                	push	af
   774  01fa  f5                	push	af
   775                          ;ball.c:111: {
   776  01fb  dd6e04            	ld	l,(ix+4)
   777  01fe  dd6605            	ld	h,(ix+5)
   778  0201  4d                	ld	c,l
   779  0202  44                	ld	b,h
   780  0203  23                	inc	hl
   781  0204  23                	inc	hl
   782  0205  23                	inc	hl
   783  0206  7e                	ld	a, (hl)
   784  0207  b7                	or	a, a
   785  0208  2805              	jr	Z,l_check_player_touch_00104
   786  020a  d606              	sub	a,0x06
   787  020c  c2bd02            	jp	NZ,l_check_player_touch_00102
   788                          l_check_player_touch_00104:
   789                          ;ball.c:112: event_player_touch(player);
   790  020f  c5                	push	bc
   791  0210  110000            	ld	de,_ball
   792  0213  210200            	ld	hl,2
   793  0216  39                	add	hl, sp
   794  0217  eb                	ex	de, hl
   795  0218  cd0000            	call	____sdcc_4_ldi_nosave_bc
   796  021b  c1                	pop	bc
   797  021c  210a00            	ld	hl,10
   798  021f  09                	add	hl,bc
   799  0220  cd0000            	call	____sdcc_load_hlde_mhl
   800  0223  c5                	push	bc
   801  0224  e5                	push	hl
   802  0225  d5                	push	de
   803  0226  21fcff            	ld	hl,-4
   804  0229  cd0000            	call	____sdcc_4_push_hlix
   805  022c  cd0000            	call	___fssub_callee
   806  022f  cd0000            	call	_fabs_fastcall
   807  0232  ed8a4180          	push	+0x4180
   808  0236  ed8a0000          	push	+0x0000
   809  023a  d5                	push	de
   810  023b  e5                	push	hl
   811  023c  cd0000            	call	___fslt_callee
   812  023f  7d                	ld	a, l
   813  0240  c1                	pop	bc
   814  0241  b7                	or	a, a
   815  0242  cabd02            	jp	Z, l_check_player_touch_00102
   816  0245  ed5b0800          	ld	de, (_ball + 8)
   817  0249  2a0a00            	ld	hl, (_ball + 10)
   818  024c  c5                	push	bc
   819  024d  e5                	push	hl
   820  024e  d5                	push	de
   821  024f  213042            	ld	hl,0x4230
   822  0252  e5                	push	hl
   823  0253  210000            	ld	hl,0x0000
   824  0256  e5                	push	hl
   825  0257  cd0000            	call	___fslt_callee
   826  025a  c1                	pop	bc
   827  025b  cb45              	bit	0, l
   828  025d  205e              	jr	NZ,l_check_player_touch_00102
   829                          ;ball.c:114: ball.v_x = ball.v_x * PLAYER_COEF_RESTITUTION;
   830  025f  c5                	push	bc
   831  0260  cd0000            	call	_event_player_touch
   832  0263  f1                	pop	af
   833                          ;ball.c:115: ball.v_h = ball.v_h * PLAYER_COEF_RESTITUTION;
   834  0264  ed4b1400          	ld	bc,(_ball + 20)
   835  0268  2a1600            	ld	hl,(_ball + 20 + 2)
   836  026b  7c                	ld	a, h
   837  026c  ee80              	xor	a,0x80
   838  026e  67                	ld	h, a
   839  026f  e5                	push	hl
   840  0270  c5                	push	bc
   841  0271  21803e            	ld	hl,0x3e80
   842  0274  e5                	push	hl
   843  0275  210000            	ld	hl,0x0000
   844  0278  e5                	push	hl
   845  0279  cd0000            	call	___fsmul_callee
   846  027c  221400            	ld	(_ball + 20),hl
   847  027f  ed531600          	ld	(_ball + 20 + 2),de
   848                          ;ball.c:116:
   849  0283  ed4b1000          	ld	bc,(_ball + 16)
   850  0287  2a1200            	ld	hl,(_ball + 16 + 2)
   851  028a  e5                	push	hl
   852  028b  c5                	push	bc
   853  028c  21803e            	ld	hl,0x3e80
   854  028f  e5                	push	hl
   855  0290  210000            	ld	hl,0x0000
   856  0293  e5                	push	hl
   857  0294  cd0000            	call	___fsmul_callee
   858  0297  221000            	ld	(_ball + 16),hl
   859  029a  ed531200          	ld	(_ball + 16 + 2),de
   860                          ;ball.c:117: return true;
   861  029e  ed4b0c00          	ld	bc,(_ball + 12)
   862  02a2  2a0e00            	ld	hl,(_ball + 12 + 2)
   863  02a5  e5                	push	hl
   864  02a6  c5                	push	bc
   865  02a7  21803e            	ld	hl,0x3e80
   866  02aa  e5                	push	hl
   867  02ab  210000            	ld	hl,0x0000
   868  02ae  e5                	push	hl
   869  02af  cd0000            	call	___fsmul_callee
   870  02b2  220c00            	ld	(_ball + 12),hl
   871  02b5  ed530e00          	ld	(_ball + 12 + 2),de
   872                          ;ball.c:119: return false;
   873  02b9  2e01              	ld	l,0x01
   874  02bb  1802              	jr	l_check_player_touch_00106
   875                          l_check_player_touch_00102:
   876                          ;ball.c:121:
   877  02bd  2e00              	ld	l,0x00
   878                          l_check_player_touch_00106:
   879                          ;ball.c:122: bool check_players_touch(void)
   880  02bf  ddf9              	ld	sp, ix
   881  02c1  dde1              	pop	ix
   882  02c3  c9                	ret
   883                          ;ball.c:124: float next_ball_y = ball.y + ball.v_y * next_iteration_delta;
   884                          ;	---------------------------------
   885                          ; Function check_players_touch
   886                          ; ---------------------------------
   887                          _check_players_touch:
   888  02c4  cd0000            	call	___sdcc_enter_ix
   889  02c7  21f3ff            	ld	hl, -13
   890  02ca  39                	add	hl, sp
   891  02cb  f9                	ld	sp, hl
   892                          ;ball.c:126: {
   893  02cc  110400            	ld	de,_ball + 4
   894  02cf  210400            	ld	hl,4
   895  02d2  39                	add	hl, sp
   896  02d3  eb                	ex	de, hl
   897  02d4  cd0000            	call	____sdcc_4_ldi_nosave_bc
   898  02d7  ed4b1400          	ld	bc, (_ball + 20)
   899  02db  ed5b1600          	ld	de, (_ball + 22)
   900  02df  c5                	push	bc
   901  02e0  d5                	push	de
   902  02e1  2a0200            	ld	hl, (_next_iteration_delta + 2)
   903  02e4  e5                	push	hl
   904  02e5  2a0000            	ld	hl, (_next_iteration_delta)
   905  02e8  e5                	push	hl
   906  02e9  d5                	push	de
   907  02ea  c5                	push	bc
   908  02eb  cd0000            	call	___fsmul_callee
   909  02ee  01ffff            	ld	bc,-1
   910  02f1  cd0000            	call	____sdcc_store_dehl_bcix
   911  02f4  21fcff            	ld	hl,-4
   912  02f7  cd0000            	call	____sdcc_4_push_hlix
   913  02fa  21f7ff            	ld	hl,-9
   914  02fd  cd0000            	call	____sdcc_4_push_hlix
   915  0300  cd0000            	call	___fsadd_callee
   916  0303  01f6ff            	ld	bc,-10
   917  0306  cd0000            	call	____sdcc_store_dehl_bcix
   918  0309  d1                	pop	de
   919  030a  c1                	pop	bc
   920  030b  d5                	push	de
   921  030c  c5                	push	bc
   922  030d  210c00            	ld	hl,12
   923  0310  39                	add	hl, sp
   924  0311  eb                	ex	de, hl
   925  0312  210400            	ld	hl,4
   926  0315  39                	add	hl, sp
   927  0316  cd0000            	call	____sdcc_4_ldi_nosave_bc
   928  0319  c1                	pop	bc
   929  031a  d1                	pop	de
   930                          ;ball.c:127: if (ball.y < player_bottom.y && next_ball_y >= player_bottom.y)
   931  031b  c5                	push	bc
   932  031c  d5                	push	de
   933  031d  d5                	push	de
   934  031e  c5                	push	bc
   935  031f  210000            	ld	hl,0x0000
   936  0322  e5                	push	hl
   937  0323  e5                	push	hl
   938  0324  cd0000            	call	___fslt_callee
   939  0327  dd75ff            	ld	(ix-1),l
   940  032a  d1                	pop	de
   941  032b  c1                	pop	bc
   942  032c  dd7eff            	ld	a,(ix-1)
   943  032f  b7                	or	a, a
   944  0330  283c              	jr	Z,l_check_players_touch_00110
   945                          ;ball.c:129: }
   946  0332  ed4b0e00          	ld	bc, (_player_bottom + 14)
   947  0336  2a1000            	ld	hl, (_player_bottom + 16)
   948  0339  e5                	push	hl
   949  033a  c5                	push	bc
   950  033b  e5                	push	hl
   951  033c  c5                	push	bc
   952  033d  dd5ef9            	ld	e,(ix-7)
   953  0340  dd56fa            	ld	d,(ix-6)
   954  0343  d5                	push	de
   955  0344  dd5ef7            	ld	e,(ix-9)
   956  0347  dd56f8            	ld	d,(ix-8)
   957  034a  d5                	push	de
   958  034b  cd0000            	call	___fslt_callee
   959  034e  7d                	ld	a, l
   960  034f  c1                	pop	bc
   961  0350  e1                	pop	hl
   962  0351  b7                	or	a, a
   963  0352  cabf03            	jp	Z, l_check_players_touch_00111
   964  0355  e5                	push	hl
   965  0356  c5                	push	bc
   966  0357  21fbff            	ld	hl,-5
   967  035a  cd0000            	call	____sdcc_4_push_hlix
   968  035d  cd0000            	call	___fslt_callee
   969  0360  cb45              	bit	0, l
   970  0362  205b              	jr	NZ,l_check_players_touch_00111
   971                          ;ball.c:130: else if (ball.v_y < 0)
   972  0364  210000            	ld	hl,_player_bottom
   973  0367  e5                	push	hl
   974  0368  cdf601            	call	_check_player_touch
   975  036b  f1                	pop	af
   976  036c  1853              	jr	l_check_players_touch_00112
   977                          l_check_players_touch_00110:
   978                          ;ball.c:132: if (ball.y > player_top.y && next_ball_y <= player_top.y)
   979  036e  210000            	ld	hl,0x0000
   980  0371  e5                	push	hl
   981  0372  e5                	push	hl
   982  0373  d5                	push	de
   983  0374  c5                	push	bc
   984  0375  cd0000            	call	___fslt_callee
   985  0378  7d                	ld	a, l
   986  0379  b7                	or	a, a
   987  037a  2843              	jr	Z,l_check_players_touch_00111
   988                          ;ball.c:134: }
   989  037c  ed4b0e00          	ld	bc, (_player_top + 14)
   990  0380  2a1000            	ld	hl, (_player_top + 16)
   991  0383  e5                	push	hl
   992  0384  c5                	push	bc
   993  0385  dd5ef9            	ld	e,(ix-7)
   994  0388  dd56fa            	ld	d,(ix-6)
   995  038b  d5                	push	de
   996  038c  dd5ef7            	ld	e,(ix-9)
   997  038f  dd56f8            	ld	d,(ix-8)
   998  0392  d5                	push	de
   999  0393  e5                	push	hl
  1000  0394  c5                	push	bc
  1001  0395  cd0000            	call	___fslt_callee
  1002  0398  7d                	ld	a, l
  1003  0399  c1                	pop	bc
  1004  039a  e1                	pop	hl
  1005  039b  b7                	or	a, a
  1006  039c  2821              	jr	Z,l_check_players_touch_00111
  1007  039e  dd5efd            	ld	e,(ix-3)
  1008  03a1  dd56fe            	ld	d,(ix-2)
  1009  03a4  d5                	push	de
  1010  03a5  dd5efb            	ld	e,(ix-5)
  1011  03a8  dd56fc            	ld	d,(ix-4)
  1012  03ab  d5                	push	de
  1013  03ac  e5                	push	hl
  1014  03ad  c5                	push	bc
  1015  03ae  cd0000            	call	___fslt_callee
  1016  03b1  cb45              	bit	0, l
  1017  03b3  200a              	jr	NZ,l_check_players_touch_00111
  1018                          ;ball.c:135: return false;
  1019  03b5  210000            	ld	hl,_player_top
  1020  03b8  e5                	push	hl
  1021  03b9  cdf601            	call	_check_player_touch
  1022  03bc  f1                	pop	af
  1023  03bd  1802              	jr	l_check_players_touch_00112
  1024                          l_check_players_touch_00111:
  1025                          ;ball.c:137:
  1026  03bf  2e00              	ld	l,0x00
  1027                          l_check_players_touch_00112:
  1028                          ;ball.c:138: void update_ball(void)
  1029  03c1  ddf9              	ld	sp, ix
  1030  03c3  dde1              	pop	ix
  1031  03c5  c9                	ret
  1032                          ;ball.c:140: if (ball.hidden)
  1033                          ;	---------------------------------
  1034                          ; Function update_ball
  1035                          ; ---------------------------------
  1036                          _update_ball:
  1037  03c6  cd0000            	call	___sdcc_enter_ix
  1038  03c9  21fbff            	ld	hl, -5
  1039  03cc  39                	add	hl, sp
  1040  03cd  f9                	ld	sp, hl
  1041                          ;ball.c:142:
  1042  03ce  211800            	ld	hl,_ball + 24
  1043  03d1  cb46              	bit	0,(hl)
  1044                          ;ball.c:143: ball.v_h += GRAVITY * next_iteration_delta;
  1045  03d3  c2df05            	jp	NZ,l_update_ball_00119
  1046                          ;ball.c:145: if (ball.height < 0)
  1047  03d6  110c00            	ld	de,+(_ball + 12)
  1048  03d9  210100            	ld	hl,1
  1049  03dc  39                	add	hl, sp
  1050  03dd  eb                	ex	de, hl
  1051  03de  cd0000            	call	____sdcc_4_ldi_nosave_bc
  1052  03e1  2a0200            	ld	hl, (_next_iteration_delta + 2)
  1053  03e4  e5                	push	hl
  1054  03e5  2a0000            	ld	hl, (_next_iteration_delta)
  1055  03e8  e5                	push	hl
  1056  03e9  21193e            	ld	hl,0x3e19
  1057  03ec  e5                	push	hl
  1058  03ed  219a99            	ld	hl,0x999a
  1059  03f0  e5                	push	hl
  1060  03f1  cd0000            	call	___fsmul_callee
  1061  03f4  d5                	push	de
  1062  03f5  e5                	push	hl
  1063  03f6  21fcff            	ld	hl,-4
  1064  03f9  cd0000            	call	____sdcc_4_push_hlix
  1065  03fc  cd0000            	call	___fsadd_callee
  1066  03ff  220c00            	ld	(_ball + 12),hl
  1067  0402  ed530e00          	ld	(_ball + 12 + 2),de
  1068                          ;ball.c:146: ball_hits_ground();
  1069  0406  d5                	push	de
  1070  0407  e5                	push	hl
  1071  0408  110800            	ld	de,+(_ball + 8)
  1072  040b  210500            	ld	hl,5
  1073  040e  39                	add	hl, sp
  1074  040f  eb                	ex	de, hl
  1075  0410  cd0000            	call	____sdcc_4_ldi_nosave_bc
  1076  0413  c1                	pop	bc
  1077  0414  d1                	pop	de
  1078  0415  2a0200            	ld	hl, (_next_iteration_delta + 2)
  1079  0418  e5                	push	hl
  1080  0419  2a0000            	ld	hl, (_next_iteration_delta)
  1081  041c  e5                	push	hl
  1082  041d  d5                	push	de
  1083  041e  c5                	push	bc
  1084  041f  cd0000            	call	___fsmul_callee
  1085  0422  d5                	push	de
  1086  0423  e5                	push	hl
  1087  0424  21fcff            	ld	hl,-4
  1088  0427  cd0000            	call	____sdcc_4_push_hlix
  1089  042a  cd0000            	call	___fssub_callee
  1090  042d  220800            	ld	(_ball + 8),hl
  1091  0430  ed530a00          	ld	(_ball + 8 + 2),de
  1092  0434  4d                	ld	c,l
  1093  0435  44                	ld	b,h
  1094                          ;ball.c:147:
  1095  0436  210000            	ld	hl,0x0000
  1096  0439  e5                	push	hl
  1097  043a  e5                	push	hl
  1098  043b  d5                	push	de
  1099  043c  c5                	push	bc
  1100  043d  cd0000            	call	___fslt_callee
  1101  0440  7d                	ld	a, l
  1102  0441  b7                	or	a, a
  1103  0442  2803              	jr	Z,l_update_ball_00104
  1104                          ;ball.c:148: ball.x += ball.v_x * next_iteration_delta;
  1105  0444  cd0000            	call	_ball_hits_ground
  1106                          l_update_ball_00104:
  1107                          ;ball.c:150: {
  1108  0447  110000            	ld	de,_ball
  1109  044a  210100            	ld	hl,1
  1110  044d  39                	add	hl, sp
  1111  044e  eb                	ex	de, hl
  1112  044f  cd0000            	call	____sdcc_4_ldi_nosave_bc
  1113  0452  ed4b1000          	ld	bc,(_ball + 16)
  1114  0456  ed5b1200          	ld	de,(_ball + 16 + 2)
  1115  045a  2a0200            	ld	hl, (_next_iteration_delta + 2)
  1116  045d  e5                	push	hl
  1117  045e  2a0000            	ld	hl, (_next_iteration_delta)
  1118  0461  e5                	push	hl
  1119  0462  d5                	push	de
  1120  0463  c5                	push	bc
  1121  0464  cd0000            	call	___fsmul_callee
  1122  0467  d5                	push	de
  1123  0468  e5                	push	hl
  1124  0469  21fcff            	ld	hl,-4
  1125  046c  cd0000            	call	____sdcc_4_push_hlix
  1126  046f  cd0000            	call	___fsadd_callee
  1127  0472  220000            	ld	(_ball),hl
  1128  0475  ed530200          	ld	(_ball+2),de
  1129                          ;ball.c:151: ball.x = COURT_LEFT;
  1130  0479  0170c1            	ld	bc,0xc170
  1131  047c  c5                	push	bc
  1132  047d  010000            	ld	bc,0x0000
  1133  0480  c5                	push	bc
  1134  0481  d5                	push	de
  1135  0482  e5                	push	hl
  1136  0483  cd0000            	call	___fslt_callee
  1137  0486  7d                	ld	a, l
  1138  0487  b7                	or	a, a
  1139  0488  282c              	jr	Z,l_update_ball_00108
  1140                          ;ball.c:153: event_ball_bounced();
  1141  048a  210000            	ld	hl,0x0000
  1142  048d  220000            	ld	(_ball), hl
  1143  0490  2170c1            	ld	hl,0xc170
  1144  0493  220200            	ld	(_ball+2), hl
  1145                          ;ball.c:154: }
  1146  0496  ed4b1000          	ld	bc,(_ball + 16)
  1147  049a  2a1200            	ld	hl,(_ball + 16 + 2)
  1148  049d  e5                	push	hl
  1149  049e  c5                	push	bc
  1150  049f  214cbd            	ld	hl,0xbd4c
  1151  04a2  e5                	push	hl
  1152  04a3  21cdcc            	ld	hl,0xcccd
  1153  04a6  e5                	push	hl
  1154  04a7  cd0000            	call	___fsmul_callee
  1155  04aa  221000            	ld	(_ball + 16),hl
  1156  04ad  ed531200          	ld	(_ball + 16 + 2),de
  1157                          ;ball.c:155: else if (ball.x > COURT_RIGHT)
  1158  04b1  cd0000            	call	_event_ball_bounced
  1159  04b4  1842              	jr	l_update_ball_00109
  1160                          l_update_ball_00108:
  1161                          ;ball.c:157: ball.x = COURT_RIGHT;
  1162  04b6  ed4b0000          	ld	bc,(_ball)
  1163  04ba  2a0200            	ld	hl, (_ball + 2)
  1164  04bd  e5                	push	hl
  1165  04be  c5                	push	bc
  1166  04bf  21a743            	ld	hl,0x43a7
  1167  04c2  e5                	push	hl
  1168  04c3  210080            	ld	hl,0x8000
  1169  04c6  e5                	push	hl
  1170  04c7  cd0000            	call	___fslt_callee
  1171  04ca  7d                	ld	a, l
  1172  04cb  b7                	or	a, a
  1173  04cc  282a              	jr	Z,l_update_ball_00109
  1174                          ;ball.c:159: event_ball_bounced();
  1175  04ce  210080            	ld	hl,0x8000
  1176  04d1  220000            	ld	(_ball), hl
  1177  04d4  21a743            	ld	hl,0x43a7
  1178  04d7  220200            	ld	(_ball+2), hl
  1179                          ;ball.c:160: }
  1180  04da  ed4b1000          	ld	bc,(_ball + 16)
  1181  04de  2a1200            	ld	hl,(_ball + 16 + 2)
  1182  04e1  e5                	push	hl
  1183  04e2  c5                	push	bc
  1184  04e3  214cbd            	ld	hl,0xbd4c
  1185  04e6  e5                	push	hl
  1186  04e7  21cdcc            	ld	hl,0xcccd
  1187  04ea  e5                	push	hl
  1188  04eb  cd0000            	call	___fsmul_callee
  1189  04ee  221000            	ld	(_ball + 16),hl
  1190  04f1  ed531200          	ld	(_ball + 16 + 2),de
  1191                          ;ball.c:161:
  1192  04f5  cd0000            	call	_event_ball_bounced
  1193                          l_update_ball_00109:
  1194                          ;ball.c:164:
  1195  04f8  cdc402            	call	_check_players_touch
  1196  04fb  cb45              	bit	0, l
  1197                          ;ball.c:165: bool ball_before_net = ball.y < NET_POSITION_Y;
  1198  04fd  c2df05            	jp	NZ,l_update_ball_00119
  1199                          ;ball.c:167: if (ball_before_net != (ball.y < NET_POSITION_Y))
  1200  0500  110400            	ld	de,+(_ball + 4)
  1201  0503  210000            	ld	hl,0
  1202  0506  39                	add	hl, sp
  1203  0507  eb                	ex	de, hl
  1204  0508  cd0000            	call	____sdcc_4_ldi_nosave_bc
  1205  050b  212043            	ld	hl,0x4320
  1206  050e  e5                	push	hl
  1207  050f  210000            	ld	hl,0x0000
  1208  0512  e5                	push	hl
  1209  0513  21fbff            	ld	hl,-5
  1210  0516  cd0000            	call	____sdcc_4_push_hlix
  1211  0519  cd0000            	call	___fslt_callee
  1212  051c  dd75ff            	ld	(ix-1),l
  1213                          ;ball.c:168: ball_crosses_net();
  1214  051f  ed4b1400          	ld	bc,(_ball + 20)
  1215  0523  ed5b1600          	ld	de,(_ball + 20 + 2)
  1216  0527  2a0200            	ld	hl, (_next_iteration_delta + 2)
  1217  052a  e5                	push	hl
  1218  052b  2a0000            	ld	hl, (_next_iteration_delta)
  1219  052e  e5                	push	hl
  1220  052f  d5                	push	de
  1221  0530  c5                	push	bc
  1222  0531  cd0000            	call	___fsmul_callee
  1223  0534  d5                	push	de
  1224  0535  e5                	push	hl
  1225  0536  21fbff            	ld	hl,-5
  1226  0539  cd0000            	call	____sdcc_4_push_hlix
  1227  053c  cd0000            	call	___fsadd_callee
  1228  053f  220400            	ld	(_ball + 4),hl
  1229  0542  ed530600          	ld	(_ball + 4 + 2),de
  1230                          ;ball.c:169:
  1231  0546  012043            	ld	bc,0x4320
  1232  0549  c5                	push	bc
  1233  054a  010000            	ld	bc,0x0000
  1234  054d  c5                	push	bc
  1235  054e  d5                	push	de
  1236  054f  e5                	push	hl
  1237  0550  cd0000            	call	___fslt_callee
  1238  0553  dd7eff            	ld	a,(ix-1)
  1239  0556  95                	sub	a, l
  1240  0557  2803              	jr	Z,l_update_ball_00113
  1241                          ;ball.c:170: if (ball.y < COURT_TOP)
  1242  0559  cd8c00            	call	_ball_crosses_net
  1243                          l_update_ball_00113:
  1244                          ;ball.c:167: if (ball_before_net != (ball.y < NET_POSITION_Y))
  1245  055c  ed4b0400          	ld	bc,(_ball + 4)
  1246  0560  2a0600            	ld	hl,(_ball + 4 + 2)
  1247                          ;ball.c:172: ball.y = COURT_TOP;
  1248  0563  e5                	push	hl
  1249  0564  c5                	push	bc
  1250  0565  119442            	ld	de,0x4294
  1251  0568  d5                	push	de
  1252  0569  110000            	ld	de,0x0000
  1253  056c  d5                	push	de
  1254  056d  e5                	push	hl
  1255  056e  c5                	push	bc
  1256  056f  cd0000            	call	___fslt_callee
  1257  0572  7d                	ld	a, l
  1258  0573  c1                	pop	bc
  1259  0574  e1                	pop	hl
  1260  0575  b7                	or	a, a
  1261  0576  282c              	jr	Z,l_update_ball_00117
  1262                          ;ball.c:174: event_ball_bounced();
  1263  0578  210000            	ld	hl,0x0000
  1264  057b  220400            	ld	(_ball + 4),hl
  1265  057e  219442            	ld	hl,0x4294
  1266  0581  220600            	ld	(_ball + 4 + 2),hl
  1267                          ;ball.c:175: }
  1268  0584  ed4b1400          	ld	bc,(_ball + 20)
  1269  0588  2a1600            	ld	hl,(_ball + 20 + 2)
  1270  058b  e5                	push	hl
  1271  058c  c5                	push	bc
  1272  058d  214cbd            	ld	hl,0xbd4c
  1273  0590  e5                	push	hl
  1274  0591  21cdcc            	ld	hl,0xcccd
  1275  0594  e5                	push	hl
  1276  0595  cd0000            	call	___fsmul_callee
  1277  0598  221400            	ld	(_ball + 20),hl
  1278  059b  ed531600          	ld	(_ball + 20 + 2),de
  1279                          ;ball.c:176: else if (ball.y > COURT_BOTTOM)
  1280  059f  cd0000            	call	_event_ball_bounced
  1281  05a2  183b              	jr	l_update_ball_00119
  1282                          l_update_ball_00117:
  1283                          ;ball.c:178: ball.y = COURT_BOTTOM;
  1284  05a4  e5                	push	hl
  1285  05a5  c5                	push	bc
  1286  05a6  218843            	ld	hl,0x4388
  1287  05a9  e5                	push	hl
  1288  05aa  210000            	ld	hl,0x0000
  1289  05ad  e5                	push	hl
  1290  05ae  cd0000            	call	___fslt_callee
  1291  05b1  7d                	ld	a, l
  1292  05b2  b7                	or	a, a
  1293  05b3  282a              	jr	Z,l_update_ball_00119
  1294                          ;ball.c:180: event_ball_bounced();
  1295  05b5  210000            	ld	hl,0x0000
  1296  05b8  220400            	ld	(_ball + 4),hl
  1297  05bb  218843            	ld	hl,0x4388
  1298  05be  220600            	ld	(_ball + 4 + 2),hl
  1299                          ;ball.c:181: }
  1300  05c1  ed4b1400          	ld	bc,(_ball + 20)
  1301  05c5  2a1600            	ld	hl,(_ball + 20 + 2)
  1302  05c8  e5                	push	hl
  1303  05c9  c5                	push	bc
  1304  05ca  214cbd            	ld	hl,0xbd4c
  1305  05cd  e5                	push	hl
  1306  05ce  21cdcc            	ld	hl,0xcccd
  1307  05d1  e5                	push	hl
  1308  05d2  cd0000            	call	___fsmul_callee
  1309  05d5  221400            	ld	(_ball + 20),hl
  1310  05d8  ed531600          	ld	(_ball + 20 + 2),de
  1311                          ;ball.c:182: }
  1312  05dc  cd0000            	call	_event_ball_bounced
  1313                          l_update_ball_00119:
  1314                          ;ball.c:184: /**
  1315  05df  ddf9              	ld	sp, ix
  1316  05e1  dde1              	pop	ix
  1317  05e3  c9                	ret
  1318                          ;ball.c:189: if (ball.height >= top_height)
  1319                          ;	---------------------------------
  1320                          ; Function set_lob_ball_velocity
  1321                          ; ---------------------------------
  1322                          _set_lob_ball_velocity:
  1323  05e4  cd0000            	call	___sdcc_enter_ix
  1324  05e7  21f8ff            	ld	hl, -8
  1325  05ea  39                	add	hl, sp
  1326  05eb  f9                	ld	sp, hl
  1327                          ;ball.c:191: // No solution
  1328  05ec  110800            	ld	de,+(_ball + 8)
  1329  05ef  210400            	ld	hl,4
  1330  05f2  39                	add	hl, sp
  1331  05f3  eb                	ex	de, hl
  1332  05f4  cd0000            	call	____sdcc_4_ldi_nosave_bc
  1333  05f7  dd7e08            	ld	a,(ix+8)
  1334  05fa  f5                	push	af
  1335  05fb  33                	inc	sp
  1336  05fc  cd0000            	call	___uchar2fs_callee
  1337  05ff  d5                	push	de
  1338  0600  e5                	push	hl
  1339  0601  21fcff            	ld	hl,-4
  1340  0604  cd0000            	call	____sdcc_4_push_hlix
  1341  0607  cd0000            	call	___fslt_callee
  1342  060a  cb45              	bit	0, l
  1343                          ;ball.c:195: ball.v_h = -fmin(sqrt(2 * GRAVITY * (top_height - ball.height)), MAX_VERTICAL_SPEED);
  1344  060c  ca3107            	jp	Z,l_set_lob_ball_velocity_00103
  1345                          ;ball.c:197: // Moment the ball will hit the ground
  1346  060f  dd4e08            	ld	c,(ix+8)
  1347  0612  0600              	ld	b,0x00
  1348  0614  c5                	push	bc
  1349  0615  cd0000            	call	___sint2fs_callee
  1350  0618  dd4efe            	ld	c,(ix-2)
  1351  061b  dd46ff            	ld	b,(ix-1)
  1352  061e  c5                	push	bc
  1353  061f  dd4efc            	ld	c,(ix-4)
  1354  0622  dd46fd            	ld	b,(ix-3)
  1355  0625  c5                	push	bc
  1356  0626  d5                	push	de
  1357  0627  e5                	push	hl
  1358  0628  cd0000            	call	___fssub_callee
  1359  062b  d5                	push	de
  1360  062c  e5                	push	hl
  1361  062d  21993e            	ld	hl,0x3e99
  1362  0630  e5                	push	hl
  1363  0631  219a99            	ld	hl,0x999a
  1364  0634  e5                	push	hl
  1365  0635  cd0000            	call	___fsmul_callee
  1366  0638  cd0000            	call	_sqrt_fastcall
  1367  063b  4d                	ld	c, l
  1368  063c  44                	ld	b, h
  1369  063d  210041            	ld	hl,0x4100
  1370  0640  e5                	push	hl
  1371  0641  65                	ld	h, l
  1372  0642  e5                	push	hl
  1373  0643  d5                	push	de
  1374  0644  c5                	push	bc
  1375  0645  cd0000            	call	_fmin_callee
  1376  0648  7a                	ld	a,d
  1377  0649  ee80              	xor	a,0x80
  1378  064b  57                	ld	d,a
  1379  064c  220c00            	ld	(_ball + 12),hl
  1380  064f  ed530e00          	ld	(_ball + 12 + 2),de
  1381                          ;ball.c:200: ball.v_y = (y - ball.y) / tg;
  1382  0653  7a                	ld	a,d
  1383  0654  ee80              	xor	a,0x80
  1384  0656  dd77fb            	ld	(ix-5),a
  1385  0659  4d                	ld	c,l
  1386  065a  44                	ld	b,h
  1387  065b  e3                	ex	(sp),hl
  1388  065c  dd73fa            	ld	(ix-6),e
  1389  065f  d5                	push	de
  1390  0660  c5                	push	bc
  1391  0661  d5                	push	de
  1392  0662  c5                	push	bc
  1393  0663  cd0000            	call	___fsmul_callee
  1394  0666  01ffff            	ld	bc,-1
  1395  0669  cd0000            	call	____sdcc_store_dehl_bcix
  1396  066c  ed4b0800          	ld	bc,(_ball + 8)
  1397  0670  2a0a00            	ld	hl,(_ball + 8 + 2)
  1398  0673  e5                	push	hl
  1399  0674  c5                	push	bc
  1400  0675  21993e            	ld	hl,0x3e99
  1401  0678  e5                	push	hl
  1402  0679  219a99            	ld	hl,0x999a
  1403  067c  e5                	push	hl
  1404  067d  cd0000            	call	___fsmul_callee
  1405  0680  d5                	push	de
  1406  0681  e5                	push	hl
  1407  0682  21fcff            	ld	hl,-4
  1408  0685  cd0000            	call	____sdcc_4_push_hlix
  1409  0688  cd0000            	call	___fsadd_callee
  1410  068b  cd0000            	call	_sqrt_fastcall
  1411  068e  d5                	push	de
  1412  068f  e5                	push	hl
  1413  0690  21f8ff            	ld	hl,-8
  1414  0693  cd0000            	call	____sdcc_4_push_hlix
  1415  0696  cd0000            	call	___fsadd_callee
  1416  0699  01193e            	ld	bc,0x3e19
  1417  069c  c5                	push	bc
  1418  069d  019a99            	ld	bc,0x999a
  1419  06a0  c5                	push	bc
  1420  06a1  d5                	push	de
  1421  06a2  e5                	push	hl
  1422  06a3  cd0000            	call	___fsdiv_callee
  1423  06a6  e3                	ex	(sp), hl
  1424  06a7  dd73fa            	ld	(ix-6),e
  1425  06aa  dd72fb            	ld	(ix-5),d
  1426                          ;ball.c:201: // debug_point("vxy", ball.v_x, ball.v_y);
  1427  06ad  110000            	ld	de,_ball
  1428  06b0  210400            	ld	hl,4
  1429  06b3  39                	add	hl, sp
  1430  06b4  eb                	ex	de, hl
  1431  06b5  cd0000            	call	____sdcc_4_ldi_nosave_bc
  1432  06b8  dd6e04            	ld	l,(ix+4)
  1433  06bb  dd6605            	ld	h,(ix+5)
  1434  06be  e5                	push	hl
  1435  06bf  cd0000            	call	___sint2fs_callee
  1436  06c2  dd4efe            	ld	c,(ix-2)
  1437  06c5  dd46ff            	ld	b,(ix-1)
  1438  06c8  c5                	push	bc
  1439  06c9  dd4efc            	ld	c,(ix-4)
  1440  06cc  dd46fd            	ld	b,(ix-3)
  1441  06cf  c5                	push	bc
  1442  06d0  d5                	push	de
  1443  06d1  e5                	push	hl
  1444  06d2  cd0000            	call	___fssub_callee
  1445  06d5  dd4efa            	ld	c,(ix-6)
  1446  06d8  dd46fb            	ld	b,(ix-5)
  1447  06db  c5                	push	bc
  1448  06dc  dd4ef8            	ld	c,(ix-8)
  1449  06df  dd46f9            	ld	b,(ix-7)
  1450  06e2  c5                	push	bc
  1451  06e3  d5                	push	de
  1452  06e4  e5                	push	hl
  1453  06e5  cd0000            	call	___fsdiv_callee
  1454  06e8  221000            	ld	(_ball + 16),hl
  1455  06eb  ed531200          	ld	(_ball + 16 + 2),de
  1456                          ;ball.c:202: // debug_halt_next_frame();
  1457  06ef  110400            	ld	de,_ball + 4
  1458  06f2  210400            	ld	hl,4
  1459  06f5  39                	add	hl, sp
  1460  06f6  eb                	ex	de, hl
  1461  06f7  cd0000            	call	____sdcc_4_ldi_nosave_bc
  1462  06fa  dd6e06            	ld	l,(ix+6)
  1463  06fd  dd6607            	ld	h,(ix+7)
  1464  0700  e5                	push	hl
  1465  0701  cd0000            	call	___sint2fs_callee
  1466  0704  dd4efe            	ld	c,(ix-2)
  1467  0707  dd46ff            	ld	b,(ix-1)
  1468  070a  c5                	push	bc
  1469  070b  dd4efc            	ld	c,(ix-4)
  1470  070e  dd46fd            	ld	b,(ix-3)
  1471  0711  c5                	push	bc
  1472  0712  d5                	push	de
  1473  0713  e5                	push	hl
  1474  0714  cd0000            	call	___fssub_callee
  1475  0717  dd4efa            	ld	c,(ix-6)
  1476  071a  dd46fb            	ld	b,(ix-5)
  1477  071d  c5                	push	bc
  1478  071e  dd4ef8            	ld	c,(ix-8)
  1479  0721  dd46f9            	ld	b,(ix-7)
  1480  0724  c5                	push	bc
  1481  0725  d5                	push	de
  1482  0726  e5                	push	hl
  1483  0727  cd0000            	call	___fsdiv_callee
  1484  072a  221400            	ld	(_ball + 20),hl
  1485  072d  ed531600          	ld	(_ball + 20 + 2),de
  1486                          l_set_lob_ball_velocity_00103:
  1487                          ;ball.c:205: /**
  1488  0731  ddf9              	ld	sp, ix
  1489  0733  dde1              	pop	ix
  1490  0735  c9                	ret
  1491                          ;ball.c:210: // debug_point("Target", x, y);
  1492                          ;	---------------------------------
  1493                          ; Function set_ball_velocity_net_height
  1494                          ; ---------------------------------
  1495                          _set_ball_velocity_net_height:
  1496  0736  cd0000            	call	___sdcc_enter_ix
  1497  0739  21e4ff            	ld	hl, -28
  1498  073c  39                	add	hl, sp
  1499  073d  f9                	ld	sp, hl
  1500                          ;ball.c:216: float d_net = d * (NET_REFERENCE_Y - ball.y) / (y - ball.y);
  1501  073e  ed4b0000          	ld	bc,(_ball)
  1502  0742  ed5b0200          	ld	de, (_ball + 2)
  1503  0746  c5                	push	bc
  1504  0747  d5                	push	de
  1505  0748  dd6e04            	ld	l,(ix+4)
  1506  074b  dd6605            	ld	h,(ix+5)
  1507  074e  e5                	push	hl
  1508  074f  cd0000            	call	___sint2fs_callee
  1509  0752  01e7ff            	ld	bc,-25
  1510  0755  cd0000            	call	____sdcc_store_dehl_bcix
  1511  0758  d1                	pop	de
  1512  0759  c1                	pop	bc
  1513  075a  d5                	push	de
  1514  075b  c5                	push	bc
  1515  075c  21e4ff            	ld	hl,-28
  1516  075f  cd0000            	call	____sdcc_4_push_hlix
  1517  0762  cd0000            	call	___fssub_callee
  1518  0765  d5                	push	de
  1519  0766  e5                	push	hl
  1520  0767  d5                	push	de
  1521  0768  e5                	push	hl
  1522  0769  cd0000            	call	___fsmul_callee
  1523  076c  01ffff            	ld	bc,-1
  1524  076f  cd0000            	call	____sdcc_store_dehl_bcix
  1525  0772  ed4b0400          	ld	bc,(_ball + 4)
  1526  0776  ed5b0600          	ld	de,(_ball + 4 + 2)
  1527  077a  c5                	push	bc
  1528  077b  d5                	push	de
  1529  077c  dd6e06            	ld	l,(ix+6)
  1530  077f  dd6607            	ld	h,(ix+7)
  1531  0782  e5                	push	hl
  1532  0783  cd0000            	call	___sint2fs_callee
  1533  0786  01ebff            	ld	bc,-21
  1534  0789  cd0000            	call	____sdcc_store_dehl_bcix
  1535  078c  d1                	pop	de
  1536  078d  c1                	pop	bc
  1537  078e  d5                	push	de
  1538  078f  c5                	push	bc
  1539  0790  21e8ff            	ld	hl,-24
  1540  0793  cd0000            	call	____sdcc_4_push_hlix
  1541  0796  cd0000            	call	___fssub_callee
  1542  0799  d5                	push	de
  1543  079a  e5                	push	hl
  1544  079b  d5                	push	de
  1545  079c  e5                	push	hl
  1546  079d  cd0000            	call	___fsmul_callee
  1547  07a0  d5                	push	de
  1548  07a1  e5                	push	hl
  1549  07a2  21fcff            	ld	hl,-4
  1550  07a5  cd0000            	call	____sdcc_4_push_hlix
  1551  07a8  cd0000            	call	___fsadd_callee
  1552  07ab  cd0000            	call	_sqrt_fastcall
  1553  07ae  01efff            	ld	bc,-17
  1554  07b1  cd0000            	call	____sdcc_store_dehl_bcix
  1555                          ;ball.c:218: // height at net at max (horizontal) speed ==> establishes the minimum height
  1556  07b4  110400            	ld	de,+(_ball + 4)
  1557  07b7  211400            	ld	hl,20
  1558  07ba  39                	add	hl, sp
  1559  07bb  eb                	ex	de, hl
  1560  07bc  cd0000            	call	____sdcc_4_ldi_nosave_bc
  1561  07bf  21f8ff            	ld	hl,-8
  1562  07c2  cd0000            	call	____sdcc_4_push_hlix
  1563  07c5  212043            	ld	hl,0x4320
  1564  07c8  e5                	push	hl
  1565  07c9  210000            	ld	hl,0x0000
  1566  07cc  e5                	push	hl
  1567  07cd  cd0000            	call	___fssub_callee
  1568  07d0  d5                	push	de
  1569  07d1  e5                	push	hl
  1570  07d2  21ecff            	ld	hl,-20
  1571  07d5  cd0000            	call	____sdcc_4_push_hlix
  1572  07d8  cd0000            	call	___fsmul_callee
  1573  07db  01ffff            	ld	bc,-1
  1574  07de  cd0000            	call	____sdcc_store_dehl_bcix
  1575  07e1  21f8ff            	ld	hl,-8
  1576  07e4  cd0000            	call	____sdcc_4_push_hlix
  1577  07e7  21e8ff            	ld	hl,-24
  1578  07ea  cd0000            	call	____sdcc_4_push_hlix
  1579  07ed  cd0000            	call	___fssub_callee
  1580  07f0  d5                	push	de
  1581  07f1  e5                	push	hl
  1582  07f2  21fcff            	ld	hl,-4
  1583  07f5  cd0000            	call	____sdcc_4_push_hlix
  1584  07f8  cd0000            	call	___fsdiv_callee
  1585  07fb  01f3ff            	ld	bc,-13
  1586  07fe  cd0000            	call	____sdcc_store_dehl_bcix
  1587                          ;ball.c:222: float vert_speed_for_mhs = ball.height / mhs_time_to_ground - GRAVITY * mhs_time_to_ground / 2;
  1588  0801  212041            	ld	hl,0x4120
  1589  0804  e5                	push	hl
  1590  0805  210000            	ld	hl,0x0000
  1591  0808  e5                	push	hl
  1592  0809  21ecff            	ld	hl,-20
  1593  080c  cd0000            	call	____sdcc_4_push_hlix
  1594  080f  cd0000            	call	___fsdiv
  1595  0812  f1                	pop	af
  1596  0813  f1                	pop	af
  1597  0814  f1                	pop	af
  1598                          ;ball.c:223: float net_height_for_mhs = ball.height - vert_speed_for_mhs * mhs_time_to_net - GRAVITY * mhs_time_to_net * mhs_time_to_net / 2;
  1599  0815  e3                	ex	(sp),hl
  1600  0816  d5                	push	de
  1601  0817  212041            	ld	hl,0x4120
  1602  081a  e5                	push	hl
  1603  081b  210000            	ld	hl,0x0000
  1604  081e  e5                	push	hl
  1605  081f  21f0ff            	ld	hl,-16
  1606  0822  cd0000            	call	____sdcc_4_push_hlix
  1607  0825  cd0000            	call	___fsdiv_callee
  1608  0828  01ffff            	ld	bc,-1
  1609  082b  cd0000            	call	____sdcc_store_dehl_bcix
  1610  082e  d1                	pop	de
  1611  082f  c1                	pop	bc
  1612  0830  d5                	push	de
  1613  0831  c5                	push	bc
  1614  0832  211800            	ld	hl,24
  1615  0835  39                	add	hl, sp
  1616  0836  eb                	ex	de, hl
  1617  0837  211c00            	ld	hl,28
  1618  083a  39                	add	hl, sp
  1619  083b  cd0000            	call	____sdcc_4_ldi_nosave_bc
  1620  083e  110800            	ld	de,+(_ball + 8)
  1621  0841  211400            	ld	hl,20
  1622  0844  39                	add	hl, sp
  1623  0845  eb                	ex	de, hl
  1624  0846  cd0000            	call	____sdcc_4_ldi_nosave_bc
  1625  0849  c1                	pop	bc
  1626  084a  d1                	pop	de
  1627  084b  c5                	push	bc
  1628  084c  d5                	push	de
  1629  084d  d5                	push	de
  1630  084e  c5                	push	bc
  1631  084f  21f4ff            	ld	hl,-12
  1632  0852  cd0000            	call	____sdcc_4_push_hlix
  1633  0855  cd0000            	call	___fsdiv_callee
  1634  0858  01ffff            	ld	bc,-1
  1635  085b  cd0000            	call	____sdcc_store_dehl_bcix
  1636  085e  d1                	pop	de
  1637  085f  c1                	pop	bc
  1638  0860  d5                	push	de
  1639  0861  c5                	push	bc
  1640  0862  21193e            	ld	hl,0x3e19
  1641  0865  e5                	push	hl
  1642  0866  219a99            	ld	hl,0x999a
  1643  0869  e5                	push	hl
  1644  086a  cd0000            	call	___fsmul_callee
  1645  086d  4d                	ld	c, l
  1646  086e  44                	ld	b, h
  1647  086f  210040            	ld	hl,0x4000
  1648  0872  e5                	push	hl
  1649  0873  65                	ld	h, l
  1650  0874  e5                	push	hl
  1651  0875  d5                	push	de
  1652  0876  c5                	push	bc
  1653  0877  cd0000            	call	___fsdiv_callee
  1654  087a  d5                	push	de
  1655  087b  e5                	push	hl
  1656  087c  21fcff            	ld	hl,-4
  1657  087f  cd0000            	call	____sdcc_4_push_hlix
  1658  0882  cd0000            	call	___fssub_callee
  1659                          ;ball.c:225: // We preassign the max horizontal speed
  1660  0885  dd4efa            	ld	c,(ix-6)
  1661  0888  dd46fb            	ld	b,(ix-5)
  1662  088b  c5                	push	bc
  1663  088c  dd4ef8            	ld	c,(ix-8)
  1664  088f  dd46f9            	ld	b,(ix-7)
  1665  0892  c5                	push	bc
  1666  0893  d5                	push	de
  1667  0894  e5                	push	hl
  1668  0895  cd0000            	call	___fsmul_callee
  1669  0898  d5                	push	de
  1670  0899  e5                	push	hl
  1671  089a  21f4ff            	ld	hl,-12
  1672  089d  cd0000            	call	____sdcc_4_push_hlix
  1673  08a0  cd0000            	call	___fssub_callee
  1674  08a3  01ffff            	ld	bc,-1
  1675  08a6  cd0000            	call	____sdcc_store_dehl_bcix
  1676  08a9  21f8ff            	ld	hl,-8
  1677  08ac  cd0000            	call	____sdcc_4_push_hlix
  1678  08af  21193e            	ld	hl,0x3e19
  1679  08b2  e5                	push	hl
  1680  08b3  219a99            	ld	hl,0x999a
  1681  08b6  e5                	push	hl
  1682  08b7  cd0000            	call	___fsmul_callee
  1683  08ba  dd4efa            	ld	c,(ix-6)
  1684  08bd  dd46fb            	ld	b,(ix-5)
  1685  08c0  c5                	push	bc
  1686  08c1  dd4ef8            	ld	c,(ix-8)
  1687  08c4  dd46f9            	ld	b,(ix-7)
  1688  08c7  c5                	push	bc
  1689  08c8  d5                	push	de
  1690  08c9  e5                	push	hl
  1691  08ca  cd0000            	call	___fsmul_callee
  1692  08cd  4d                	ld	c, l
  1693  08ce  44                	ld	b, h
  1694  08cf  210040            	ld	hl,0x4000
  1695  08d2  e5                	push	hl
  1696  08d3  65                	ld	h, l
  1697  08d4  e5                	push	hl
  1698  08d5  d5                	push	de
  1699  08d6  c5                	push	bc
  1700  08d7  cd0000            	call	___fsdiv_callee
  1701  08da  d5                	push	de
  1702  08db  e5                	push	hl
  1703  08dc  21fcff            	ld	hl,-4
  1704  08df  cd0000            	call	____sdcc_4_push_hlix
  1705  08e2  cd0000            	call	___fssub_callee
  1706  08e5  01fbff            	ld	bc,-5
  1707  08e8  cd0000            	call	____sdcc_store_dehl_bcix
  1708                          ;ball.c:228: // But if target net_hegiht is higher, it is safe to calculate the speed
  1709  08eb  af                	xor	a, a
  1710  08ec  dd77fc            	ld	(ix-4),a
  1711  08ef  dd77fd            	ld	(ix-3),a
  1712  08f2  dd36fe20          	ld	(ix-2),0x20
  1713  08f6  dd36ff41          	ld	(ix-1),0x41
  1714                          ;ball.c:231: // denominator to calculate horizontal speed
  1715  08fa  dd7e08            	ld	a,(ix+8)
  1716  08fd  f5                	push	af
  1717  08fe  33                	inc	sp
  1718  08ff  cd0000            	call	___uchar2fs_callee
  1719  0902  e5                	push	hl
  1720  0903  d5                	push	de
  1721  0904  d5                	push	de
  1722  0905  e5                	push	hl
  1723  0906  dd4efa            	ld	c,(ix-6)
  1724  0909  dd46fb            	ld	b,(ix-5)
  1725  090c  c5                	push	bc
  1726  090d  dd4ef8            	ld	c,(ix-8)
  1727  0910  dd46f9            	ld	b,(ix-7)
  1728  0913  c5                	push	bc
  1729  0914  cd0000            	call	___fslt_callee
  1730  0917  7d                	ld	a, l
  1731  0918  d1                	pop	de
  1732  0919  e1                	pop	hl
  1733  091a  b7                	or	a, a
  1734  091b  caca09            	jp	Z, l_set_ball_velocity_net_height_00102
  1735                          ;ball.c:235:
  1736  091e  dd4eee            	ld	c,(ix-18)
  1737  0921  dd46ef            	ld	b,(ix-17)
  1738  0924  c5                	push	bc
  1739  0925  dd4eec            	ld	c,(ix-20)
  1740  0928  dd46ed            	ld	b,(ix-19)
  1741  092b  c5                	push	bc
  1742  092c  d5                	push	de
  1743  092d  e5                	push	hl
  1744  092e  cd0000            	call	___fsmul_callee
  1745  0931  01fbff            	ld	bc,-5
  1746  0934  cd0000            	call	____sdcc_store_dehl_bcix
  1747  0937  21f0ff            	ld	hl,-16
  1748  093a  cd0000            	call	____sdcc_4_push_hlix
  1749  093d  21ecff            	ld	hl,-20
  1750  0940  cd0000            	call	____sdcc_4_push_hlix
  1751  0943  cd0000            	call	___fssub_callee
  1752  0946  01ffff            	ld	bc,-1
  1753  0949  cd0000            	call	____sdcc_store_dehl_bcix
  1754  094c  21fcff            	ld	hl,-4
  1755  094f  cd0000            	call	____sdcc_4_push_hlix
  1756  0952  21f4ff            	ld	hl,-12
  1757  0955  cd0000            	call	____sdcc_4_push_hlix
  1758  0958  cd0000            	call	___fsmul_callee
  1759  095b  d5                	push	de
  1760  095c  e5                	push	hl
  1761  095d  21f8ff            	ld	hl,-8
  1762  0960  cd0000            	call	____sdcc_4_push_hlix
  1763  0963  cd0000            	call	___fssub_callee
  1764  0966  d5                	push	de
  1765  0967  e5                	push	hl
  1766  0968  210040            	ld	hl,0x4000
  1767  096b  e5                	push	hl
  1768  096c  65                	ld	h, l
  1769  096d  e5                	push	hl
  1770  096e  cd0000            	call	___fsmul_callee
  1771  0971  01fbff            	ld	bc,-5
  1772  0974  cd0000            	call	____sdcc_store_dehl_bcix
  1773                          ;ball.c:239:
  1774  0977  21f0ff            	ld	hl,-16
  1775  097a  cd0000            	call	____sdcc_4_push_hlix
  1776  097d  21193e            	ld	hl,0x3e19
  1777  0980  e5                	push	hl
  1778  0981  219a99            	ld	hl,0x999a
  1779  0984  e5                	push	hl
  1780  0985  cd0000            	call	___fsmul_callee
  1781  0988  dd4eee            	ld	c,(ix-18)
  1782  098b  dd46ef            	ld	b,(ix-17)
  1783  098e  c5                	push	bc
  1784  098f  dd4eec            	ld	c,(ix-20)
  1785  0992  dd46ed            	ld	b,(ix-19)
  1786  0995  c5                	push	bc
  1787  0996  d5                	push	de
  1788  0997  e5                	push	hl
  1789  0998  cd0000            	call	___fsmul_callee
  1790  099b  dd4efe            	ld	c,(ix-2)
  1791  099e  dd46ff            	ld	b,(ix-1)
  1792  09a1  c5                	push	bc
  1793  09a2  dd4efc            	ld	c,(ix-4)
  1794  09a5  dd46fd            	ld	b,(ix-3)
  1795  09a8  c5                	push	bc
  1796  09a9  d5                	push	de
  1797  09aa  e5                	push	hl
  1798  09ab  cd0000            	call	___fsmul_callee
  1799  09ae  dd4efa            	ld	c,(ix-6)
  1800  09b1  dd46fb            	ld	b,(ix-5)
  1801  09b4  c5                	push	bc
  1802  09b5  dd4ef8            	ld	c,(ix-8)
  1803  09b8  dd46f9            	ld	b,(ix-7)
  1804  09bb  c5                	push	bc
  1805  09bc  d5                	push	de
  1806  09bd  e5                	push	hl
  1807  09be  cd0000            	call	___fsdiv_callee
  1808  09c1  cd0000            	call	_sqrt_fastcall
  1809  09c4  01ffff            	ld	bc,-1
  1810  09c7  cd0000            	call	____sdcc_store_dehl_bcix
  1811                          l_set_ball_velocity_net_height_00102:
  1812                          ;ball.c:243: ball.v_h = ball.height * v_horizontal / d - GRAVITY * d / (2 * v_horizontal);
  1813  09ca  ed4b0000          	ld	bc,(_ball)
  1814  09ce  2a0200            	ld	hl, (_ball + 2)
  1815  09d1  e5                	push	hl
  1816  09d2  c5                	push	bc
  1817  09d3  21e4ff            	ld	hl,-28
  1818  09d6  cd0000            	call	____sdcc_4_push_hlix
  1819  09d9  cd0000            	call	___fssub_callee
  1820  09dc  d5                	push	de
  1821  09dd  e5                	push	hl
  1822  09de  21fcff            	ld	hl,-4
  1823  09e1  cd0000            	call	____sdcc_4_push_hlix
  1824  09e4  cd0000            	call	___fsmul_callee
  1825  09e7  dd4eee            	ld	c,(ix-18)
  1826  09ea  dd46ef            	ld	b,(ix-17)
  1827  09ed  c5                	push	bc
  1828  09ee  dd4eec            	ld	c,(ix-20)
  1829  09f1  dd46ed            	ld	b,(ix-19)
  1830  09f4  c5                	push	bc
  1831  09f5  d5                	push	de
  1832  09f6  e5                	push	hl
  1833  09f7  cd0000            	call	___fsdiv_callee
  1834  09fa  221000            	ld	(_ball + 16),hl
  1835  09fd  ed531200          	ld	(_ball + 16 + 2),de
  1836                          ;ball.c:244:
  1837  0a01  ed4b0400          	ld	bc,(_ball + 4)
  1838  0a05  2a0600            	ld	hl,(_ball + 4 + 2)
  1839  0a08  e5                	push	hl
  1840  0a09  c5                	push	bc
  1841  0a0a  21e8ff            	ld	hl,-24
  1842  0a0d  cd0000            	call	____sdcc_4_push_hlix
  1843  0a10  cd0000            	call	___fssub_callee
  1844  0a13  d5                	push	de
  1845  0a14  e5                	push	hl
  1846  0a15  21fcff            	ld	hl,-4
  1847  0a18  cd0000            	call	____sdcc_4_push_hlix
  1848  0a1b  cd0000            	call	___fsmul_callee
  1849  0a1e  dd4eee            	ld	c,(ix-18)
  1850  0a21  dd46ef            	ld	b,(ix-17)
  1851  0a24  c5                	push	bc
  1852  0a25  dd4eec            	ld	c,(ix-20)
  1853  0a28  dd46ed            	ld	b,(ix-19)
  1854  0a2b  c5                	push	bc
  1855  0a2c  d5                	push	de
  1856  0a2d  e5                	push	hl
  1857  0a2e  cd0000            	call	___fsdiv_callee
  1858  0a31  221400            	ld	(_ball + 20),hl
  1859  0a34  ed531600          	ld	(_ball + 20 + 2),de
  1860                          ;ball.c:245: #ifdef DEBUG
  1861  0a38  ed4b0800          	ld	bc,(_ball + 8)
  1862  0a3c  2a0a00            	ld	hl,(_ball + 8 + 2)
  1863  0a3f  dd5efe            	ld	e,(ix-2)
  1864  0a42  dd56ff            	ld	d,(ix-1)
  1865  0a45  d5                	push	de
  1866  0a46  dd5efc            	ld	e,(ix-4)
  1867  0a49  dd56fd            	ld	d,(ix-3)
  1868  0a4c  d5                	push	de
  1869  0a4d  e5                	push	hl
  1870  0a4e  c5                	push	bc
  1871  0a4f  cd0000            	call	___fsmul_callee
  1872  0a52  dd4eee            	ld	c,(ix-18)
  1873  0a55  dd46ef            	ld	b,(ix-17)
  1874  0a58  c5                	push	bc
  1875  0a59  dd4eec            	ld	c,(ix-20)
  1876  0a5c  dd46ed            	ld	b,(ix-19)
  1877  0a5f  c5                	push	bc
  1878  0a60  d5                	push	de
  1879  0a61  e5                	push	hl
  1880  0a62  cd0000            	call	___fsdiv_callee
  1881  0a65  01fbff            	ld	bc,-5
  1882  0a68  cd0000            	call	____sdcc_store_dehl_bcix
  1883  0a6b  21ecff            	ld	hl,-20
  1884  0a6e  cd0000            	call	____sdcc_4_push_hlix
  1885  0a71  21193e            	ld	hl,0x3e19
  1886  0a74  e5                	push	hl
  1887  0a75  219a99            	ld	hl,0x999a
  1888  0a78  e5                	push	hl
  1889  0a79  cd0000            	call	___fsmul_callee
  1890  0a7c  01f7ff            	ld	bc,-9
  1891  0a7f  cd0000            	call	____sdcc_store_dehl_bcix
  1892  0a82  21fcff            	ld	hl,-4
  1893  0a85  cd0000            	call	____sdcc_4_push_hlix
  1894  0a88  210040            	ld	hl,0x4000
  1895  0a8b  e5                	push	hl
  1896  0a8c  65                	ld	h, l
  1897  0a8d  e5                	push	hl
  1898  0a8e  cd0000            	call	___fsmul_callee
  1899  0a91  d5                	push	de
  1900  0a92  e5                	push	hl
  1901  0a93  21f4ff            	ld	hl,-12
  1902  0a96  cd0000            	call	____sdcc_4_push_hlix
  1903  0a99  cd0000            	call	___fsdiv_callee
  1904  0a9c  d5                	push	de
  1905  0a9d  e5                	push	hl
  1906  0a9e  21f8ff            	ld	hl,-8
  1907  0aa1  cd0000            	call	____sdcc_4_push_hlix
  1908  0aa4  cd0000            	call	___fssub_callee
  1909  0aa7  220c00            	ld	(_ball + 12),hl
  1910  0aaa  ed530e00          	ld	(_ball + 12 + 2),de
  1911                          ;ball.c:255: /**
  1912  0aae  ddf9              	ld	sp, ix
  1913  0ab0  dde1              	pop	ix
  1914  0ab2  c9                	ret
  1915                          ;ball.c:260: *future_z = ball.height - ball.v_h * time - GRAVITY * sq(time) / 2;
  1916                          ;	---------------------------------
  1917                          ; Function ball_future_x_and_height
  1918                          ; ---------------------------------
  1919                          _ball_future_x_and_height:
  1920  0ab3  cd0000            	call	___sdcc_enter_ix
  1921  0ab6  21f6ff            	ld	hl, -10
  1922  0ab9  39                	add	hl, sp
  1923  0aba  f9                	ld	sp, hl
  1924                          ;ball.c:262: {
  1925  0abb  dd7e0a            	ld	a,(ix+10)
  1926  0abe  dd77f6            	ld	(ix-10),a
  1927  0ac1  dd7e0b            	ld	a,(ix+11)
  1928  0ac4  dd77f7            	ld	(ix-9),a
  1929  0ac7  110800            	ld	de,+(_ball + 8)
  1930  0aca  210600            	ld	hl,6
  1931  0acd  39                	add	hl, sp
  1932  0ace  eb                	ex	de, hl
  1933  0acf  cd0000            	call	____sdcc_4_ldi_nosave_bc
  1934  0ad2  ed4b0c00          	ld	bc,(_ball + 12)
  1935  0ad6  ed5b0e00          	ld	de,(_ball + 12 + 2)
  1936  0ada  210400            	ld	hl,4
  1937  0add  cd0000            	call	____sdcc_4_push_hlix
  1938  0ae0  d5                	push	de
  1939  0ae1  c5                	push	bc
  1940  0ae2  cd0000            	call	___fsmul_callee
  1941  0ae5  d5                	push	de
  1942  0ae6  e5                	push	hl
  1943  0ae7  21fcff            	ld	hl,-4
  1944  0aea  cd0000            	call	____sdcc_4_push_hlix
  1945  0aed  cd0000            	call	___fssub_callee
  1946  0af0  01ffff            	ld	bc,-1
  1947  0af3  cd0000            	call	____sdcc_store_dehl_bcix
  1948  0af6  210400            	ld	hl,4
  1949  0af9  cd0000            	call	____sdcc_4_push_hlix
  1950  0afc  210400            	ld	hl,4
  1951  0aff  cd0000            	call	____sdcc_4_push_hlix
  1952  0b02  cd0000            	call	___fsmul_callee
  1953  0b05  d5                	push	de
  1954  0b06  e5                	push	hl
  1955  0b07  21193e            	ld	hl,0x3e19
  1956  0b0a  e5                	push	hl
  1957  0b0b  219a99            	ld	hl,0x999a
  1958  0b0e  e5                	push	hl
  1959  0b0f  cd0000            	call	___fsmul_callee
  1960  0b12  4d                	ld	c, l
  1961  0b13  44                	ld	b, h
  1962  0b14  210040            	ld	hl,0x4000
  1963  0b17  e5                	push	hl
  1964  0b18  65                	ld	h, l
  1965  0b19  e5                	push	hl
  1966  0b1a  d5                	push	de
  1967  0b1b  c5                	push	bc
  1968  0b1c  cd0000            	call	___fsdiv_callee
  1969  0b1f  d5                	push	de
  1970  0b20  e5                	push	hl
  1971  0b21  21fcff            	ld	hl,-4
  1972  0b24  cd0000            	call	____sdcc_4_push_hlix
  1973  0b27  cd0000            	call	___fssub_callee
  1974  0b2a  4d                	ld	c, l
  1975  0b2b  44                	ld	b, h
  1976  0b2c  e1                	pop	hl
  1977  0b2d  e5                	push	hl
  1978  0b2e  cd0000            	call	____sdcc_store_debc_mhl
  1979                          ;ball.c:263: // The time to bounce is obtained as a proportion of height of the ball and the total height run in the period
  1980  0b31  210000            	ld	hl,0x0000
  1981  0b34  e5                	push	hl
  1982  0b35  e5                	push	hl
  1983  0b36  d5                	push	de
  1984  0b37  c5                	push	bc
  1985  0b38  cd0000            	call	___fslt_callee
  1986  0b3b  7d                	ld	a, l
  1987  0b3c  b7                	or	a, a
  1988  0b3d  ca420c            	jp	Z, l_ball_future_x_and_height_00102
  1989                          ;ball.c:266: // TODO: apply surface type conditions... this should be a function
  1990  0b40  ed4b0800          	ld	bc,(_ball + 8)
  1991  0b44  ed5b0a00          	ld	de,(_ball + 8 + 2)
  1992  0b48  c5                	push	bc
  1993  0b49  d5                	push	de
  1994  0b4a  d5                	push	de
  1995  0b4b  c5                	push	bc
  1996  0b4c  210400            	ld	hl,4
  1997  0b4f  cd0000            	call	____sdcc_4_push_hlix
  1998  0b52  cd0000            	call	___fsmul_callee
  1999  0b55  01fbff            	ld	bc,-5
  2000  0b58  cd0000            	call	____sdcc_store_dehl_bcix
  2001  0b5b  d1                	pop	de
  2002  0b5c  c1                	pop	bc
  2003  0b5d  d5                	push	de
  2004  0b5e  c5                	push	bc
  2005  0b5f  dd5ef6            	ld	e,(ix-10)
  2006  0b62  dd56f7            	ld	d,(ix-9)
  2007  0b65  210a00            	ld	hl,10
  2008  0b68  39                	add	hl, sp
  2009  0b69  eb                	ex	de, hl
  2010  0b6a  cd0000            	call	____sdcc_4_ldi_nosave_bc
  2011  0b6d  c1                	pop	bc
  2012  0b6e  d1                	pop	de
  2013  0b6f  21fcff            	ld	hl,-4
  2014  0b72  cd0000            	call	____sdcc_4_push_hlix
  2015  0b75  d5                	push	de
  2016  0b76  c5                	push	bc
  2017  0b77  cd0000            	call	___fssub_callee
  2018  0b7a  d5                	push	de
  2019  0b7b  e5                	push	hl
  2020  0b7c  21f8ff            	ld	hl,-8
  2021  0b7f  cd0000            	call	____sdcc_4_push_hlix
  2022  0b82  cd0000            	call	___fsdiv_callee
  2023  0b85  01ffff            	ld	bc,-1
  2024  0b88  cd0000            	call	____sdcc_store_dehl_bcix
  2025                          ;ball.c:267: float speed_after_bounce = -speed_at_bounce * GROUND_COEF_RESTITUTION;
  2026  0b8b  110c00            	ld	de,+(_ball + 12)
  2027  0b8e  210200            	ld	hl,2
  2028  0b91  39                	add	hl, sp
  2029  0b92  eb                	ex	de, hl
  2030  0b93  cd0000            	call	____sdcc_4_ldi_nosave_bc
  2031  0b96  21fcff            	ld	hl,-4
  2032  0b99  cd0000            	call	____sdcc_4_push_hlix
  2033  0b9c  21193e            	ld	hl,0x3e19
  2034  0b9f  e5                	push	hl
  2035  0ba0  219a99            	ld	hl,0x999a
  2036  0ba3  e5                	push	hl
  2037  0ba4  cd0000            	call	___fsmul_callee
  2038  0ba7  d5                	push	de
  2039  0ba8  e5                	push	hl
  2040  0ba9  21f8ff            	ld	hl,-8
  2041  0bac  cd0000            	call	____sdcc_4_push_hlix
  2042  0baf  cd0000            	call	___fssub_callee
  2043                          ;ball.c:269: *future_z = -speed_after_bounce * time_after_bounce - GRAVITY * sq(time_after_bounce) / 2;
  2044  0bb2  7a                	ld	a, d
  2045  0bb3  ee80              	xor	a,0x80
  2046  0bb5  57                	ld	d, a
  2047  0bb6  d5                	push	de
  2048  0bb7  e5                	push	hl
  2049  0bb8  21403f            	ld	hl,0x3f40
  2050  0bbb  e5                	push	hl
  2051  0bbc  210000            	ld	hl,0x0000
  2052  0bbf  e5                	push	hl
  2053  0bc0  cd0000            	call	___fsmul_callee
  2054  0bc3  01fbff            	ld	bc,-5
  2055  0bc6  cd0000            	call	____sdcc_store_dehl_bcix
  2056                          ;ball.c:270: }
  2057  0bc9  21fcff            	ld	hl,-4
  2058  0bcc  cd0000            	call	____sdcc_4_push_hlix
  2059  0bcf  210400            	ld	hl,4
  2060  0bd2  cd0000            	call	____sdcc_4_push_hlix
  2061  0bd5  cd0000            	call	___fssub_callee
  2062                          ;ball.c:271:
  2063  0bd8  dd7efb            	ld	a,(ix-5)
  2064  0bdb  ee80              	xor	a,0x80
  2065  0bdd  dd77ff            	ld	(ix-1),a
  2066  0be0  dd7ef8            	ld	a,(ix-8)
  2067  0be3  dd77fc            	ld	(ix-4),a
  2068  0be6  dd7ef9            	ld	a,(ix-7)
  2069  0be9  dd77fd            	ld	(ix-3),a
  2070  0bec  dd7efa            	ld	a,(ix-6)
  2071  0bef  dd77fe            	ld	(ix-2),a
  2072  0bf2  e5                	push	hl
  2073  0bf3  d5                	push	de
  2074  0bf4  d5                	push	de
  2075  0bf5  e5                	push	hl
  2076  0bf6  dd4efe            	ld	c,(ix-2)
  2077  0bf9  dd46ff            	ld	b,(ix-1)
  2078  0bfc  c5                	push	bc
  2079  0bfd  dd4efc            	ld	c,(ix-4)
  2080  0c00  dd46fd            	ld	b,(ix-3)
  2081  0c03  c5                	push	bc
  2082  0c04  cd0000            	call	___fsmul_callee
  2083  0c07  01ffff            	ld	bc,-1
  2084  0c0a  cd0000            	call	____sdcc_store_dehl_bcix
  2085  0c0d  d1                	pop	de
  2086  0c0e  e1                	pop	hl
  2087  0c0f  d5                	push	de
  2088  0c10  e5                	push	hl
  2089  0c11  d5                	push	de
  2090  0c12  e5                	push	hl
  2091  0c13  cd0000            	call	___fsmul_callee
  2092  0c16  d5                	push	de
  2093  0c17  e5                	push	hl
  2094  0c18  21193e            	ld	hl,0x3e19
  2095  0c1b  e5                	push	hl
  2096  0c1c  219a99            	ld	hl,0x999a
  2097  0c1f  e5                	push	hl
  2098  0c20  cd0000            	call	___fsmul_callee
  2099  0c23  4d                	ld	c, l
  2100  0c24  44                	ld	b, h
  2101  0c25  210040            	ld	hl,0x4000
  2102  0c28  e5                	push	hl
  2103  0c29  65                	ld	h, l
  2104  0c2a  e5                	push	hl
  2105  0c2b  d5                	push	de
  2106  0c2c  c5                	push	bc
  2107  0c2d  cd0000            	call	___fsdiv_callee
  2108  0c30  d5                	push	de
  2109  0c31  e5                	push	hl
  2110  0c32  21fcff            	ld	hl,-4
  2111  0c35  cd0000            	call	____sdcc_4_push_hlix
  2112  0c38  cd0000            	call	___fssub_callee
  2113  0c3b  4d                	ld	c, l
  2114  0c3c  44                	ld	b, h
  2115  0c3d  e1                	pop	hl
  2116  0c3e  e5                	push	hl
  2117  0c3f  cd0000            	call	____sdcc_store_debc_mhl
  2118                          l_ball_future_x_and_height_00102:
  2119                          ;ball.c:274: ERROR: no line number 274 in file ball.c
  2120  0c42  dd7e08            	ld	a,(ix+8)
  2121  0c45  dd77fa            	ld	(ix-6),a
  2122  0c48  dd7e09            	ld	a,(ix+9)
  2123  0c4b  dd77fb            	ld	(ix-5),a
  2124  0c4e  110000            	ld	de,_ball
  2125  0c51  210600            	ld	hl,6
  2126  0c54  39                	add	hl, sp
  2127  0c55  eb                	ex	de, hl
  2128  0c56  cd0000            	call	____sdcc_4_ldi_nosave_bc
  2129  0c59  ed4b1000          	ld	bc, (_ball + 16)
  2130  0c5d  ed5b1200          	ld	de, (_ball + 18)
  2131  0c61  210400            	ld	hl,4
  2132  0c64  cd0000            	call	____sdcc_4_push_hlix
  2133  0c67  d5                	push	de
  2134  0c68  c5                	push	bc
  2135  0c69  cd0000            	call	___fsmul_callee
  2136  0c6c  d5                	push	de
  2137  0c6d  e5                	push	hl
  2138  0c6e  21fcff            	ld	hl,-4
  2139  0c71  cd0000            	call	____sdcc_4_push_hlix
  2140  0c74  cd0000            	call	___fsadd_callee
  2141  0c77  4d                	ld	c, l
  2142  0c78  dd6efa            	ld	l,(ix-6)
  2143  0c7b  44                	ld	b,h
  2144  0c7c  dd66fb            	ld	h,(ix-5)
  2145  0c7f  cd0000            	call	____sdcc_store_debc_mhl
  2146                          ;ball.c:275: ERROR: no line number 275 in file ball.c
  2147  0c82  ddf9              	ld	sp, ix
  2148  0c84  dde1              	pop	ix
  2149  0c86  c9                	ret
  2150                          	SECTION data_compiler
  2151                          _ball:
  2152  0000  00002043          	DEFB +0x00,0x00, +0x20, +0x43
  2153  0004  00001643          	DEFB +0x00,0x00, +0x16, +0x43
  2154  0008  0000f041          	DEFB +0x00,0x00, +0xf0, +0x41
  2155  000c  00000000          	DEFB +0x00,0x00, +0x00, +0x00
  2156  0010  00000000          	DEFB +0x00,0x00, +0x00, +0x00
  2157  0014  00000000          	DEFB +0x00,0x00, +0x00, +0x00
  2158  0018  01                	DEFB +0x01
  2159                          	SECTION IGNORE
  2160                          
