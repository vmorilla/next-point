/tmp/tmpWNAd2CGv.asm:
     1                          MODULE debug_c
     2                          LINE 0, "debug.c"
debug.c:
                                
     1                          ;--------------------------------------------------------
     2                          ; File Created by SDCC : free open source ISO C Compiler
     3                          ; Version 4.3.0 #14210 (Mac OS X ppc)
     4                          ;--------------------------------------------------------
     5                          	.zxn
     6                          ; Processed by Z88DK
     7                          ;--------------------------------------------------------
     8                          
     9                          	EXTERN __divschar
    10                          	EXTERN __divschar_callee
    11                          	EXTERN __divsint
    12                          	EXTERN __divsint_callee
    13                          	EXTERN __divslong
    14                          	EXTERN __divslong_callee
    15                          	EXTERN __divslonglong
    16                          	EXTERN __divslonglong_callee
    17                          	EXTERN __divsuchar
    18                          	EXTERN __divsuchar_callee
    19                          	EXTERN __divuchar
    20                          	EXTERN __divuchar_callee
    21                          	EXTERN __divuint
    22                          	EXTERN __divuint_callee
    23                          	EXTERN __divulong
    24                          	EXTERN __divulong_callee
    25                          	EXTERN __divulonglong
    26                          	EXTERN __divulonglong_callee
    27                          	EXTERN __divuschar
    28                          	EXTERN __divuschar_callee
    29                          	EXTERN __modschar
    30                          	EXTERN __modschar_callee
    31                          	EXTERN __modsint
    32                          	EXTERN __modsint_callee
    33                          	EXTERN __modslong
    34                          	EXTERN __modslong_callee
    35                          	EXTERN __modslonglong
    36                          	EXTERN __modslonglong_callee
    37                          	EXTERN __modsuchar
    38                          	EXTERN __modsuchar_callee
    39                          	EXTERN __moduchar
    40                          	EXTERN __moduchar_callee
    41                          	EXTERN __moduint
    42                          	EXTERN __moduint_callee
    43                          	EXTERN __modulong
    44                          	EXTERN __modulong_callee
    45                          	EXTERN __modulonglong
    46                          	EXTERN __modulonglong_callee
    47                          	EXTERN __moduschar
    48                          	EXTERN __moduschar_callee
    49                          	EXTERN __mulint
    50                          	EXTERN __mulint_callee
    51                          	EXTERN __mullong
    52                          	EXTERN __mullong_callee
    53                          	EXTERN __mullonglong
    54                          	EXTERN __mullonglong_callee
    55                          	EXTERN __mulschar
    56                          	EXTERN __mulschar_callee
    57                          	EXTERN __mulsuchar
    58                          	EXTERN __mulsuchar_callee
    59                          	EXTERN __muluchar
    60                          	EXTERN __muluchar_callee
    61                          	EXTERN __muluschar
    62                          	EXTERN __muluschar_callee
    63                          	EXTERN __rlslonglong
    64                          	EXTERN __rlslonglong_callee
    65                          	EXTERN __rlulonglong
    66                          	EXTERN __rlulonglong_callee
    67                          	EXTERN __rrslonglong
    68                          	EXTERN __rrslonglong_callee
    69                          	EXTERN __rrulonglong
    70                          	EXTERN __rrulonglong_callee
    71                          	EXTERN ___mulsint2slong
    72                          	EXTERN ___mulsint2slong_callee
    73                          	EXTERN ___muluint2ulong
    74                          	EXTERN ___muluint2ulong_callee
    75                          	EXTERN ___sdcc_call_hl
    76                          	EXTERN ___sdcc_call_iy
    77                          	EXTERN ___sdcc_enter_ix
    78                          	EXTERN banked_call
    79                          	EXTERN _banked_ret
    80                          	EXTERN ___fs2schar
    81                          	EXTERN ___fs2schar_callee
    82                          	EXTERN ___fs2sint
    83                          	EXTERN ___fs2sint_callee
    84                          	EXTERN ___fs2slong
    85                          	EXTERN ___fs2slong_callee
    86                          	EXTERN ___fs2slonglong
    87                          	EXTERN ___fs2slonglong_callee
    88                          	EXTERN ___fs2uchar
    89                          	EXTERN ___fs2uchar_callee
    90                          	EXTERN ___fs2uint
    91                          	EXTERN ___fs2uint_callee
    92                          	EXTERN ___fs2ulong
    93                          	EXTERN ___fs2ulong_callee
    94                          	EXTERN ___fs2ulonglong
    95                          	EXTERN ___fs2ulonglong_callee
    96                          	EXTERN ___fsadd
    97                          	EXTERN ___fsadd_callee
    98                          	EXTERN ___fsdiv
    99                          	EXTERN ___fsdiv_callee
   100                          	EXTERN ___fseq
   101                          	EXTERN ___fseq_callee
   102                          	EXTERN ___fsgt
   103                          	EXTERN ___fsgt_callee
   104                          	EXTERN ___fslt
   105                          	EXTERN ___fslt_callee
   106                          	EXTERN ___fsmul
   107                          	EXTERN ___fsmul_callee
   108                          	EXTERN ___fsneq
   109                          	EXTERN ___fsneq_callee
   110                          	EXTERN ___fssub
   111                          	EXTERN ___fssub_callee
   112                          	EXTERN ___schar2fs
   113                          	EXTERN ___schar2fs_callee
   114                          	EXTERN ___sint2fs
   115                          	EXTERN ___sint2fs_callee
   116                          	EXTERN ___slong2fs
   117                          	EXTERN ___slong2fs_callee
   118                          	EXTERN ___slonglong2fs
   119                          	EXTERN ___slonglong2fs_callee
   120                          	EXTERN ___uchar2fs
   121                          	EXTERN ___uchar2fs_callee
   122                          	EXTERN ___uint2fs
   123                          	EXTERN ___uint2fs_callee
   124                          	EXTERN ___ulong2fs
   125                          	EXTERN ___ulong2fs_callee
   126                          	EXTERN ___ulonglong2fs
   127                          	EXTERN ___ulonglong2fs_callee
   128                          	EXTERN ____sdcc_2_copy_src_mhl_dst_deix
   129                          	EXTERN ____sdcc_2_copy_src_mhl_dst_bcix
   130                          	EXTERN ____sdcc_4_copy_src_mhl_dst_deix
   131                          	EXTERN ____sdcc_4_copy_src_mhl_dst_bcix
   132                          	EXTERN ____sdcc_4_copy_src_mhl_dst_mbc
   133                          	EXTERN ____sdcc_4_ldi_nosave_bc
   134                          	EXTERN ____sdcc_4_ldi_save_bc
   135                          	EXTERN ____sdcc_4_push_hlix
   136                          	EXTERN ____sdcc_4_push_mhl
   137                          	EXTERN ____sdcc_lib_setmem_hl
   138                          	EXTERN ____sdcc_ll_add_de_bc_hl
   139                          	EXTERN ____sdcc_ll_add_de_bc_hlix
   140                          	EXTERN ____sdcc_ll_add_de_hlix_bc
   141                          	EXTERN ____sdcc_ll_add_de_hlix_bcix
   142                          	EXTERN ____sdcc_ll_add_deix_bc_hl
   143                          	EXTERN ____sdcc_ll_add_deix_hlix
   144                          	EXTERN ____sdcc_ll_add_hlix_bc_deix
   145                          	EXTERN ____sdcc_ll_add_hlix_deix_bc
   146                          	EXTERN ____sdcc_ll_add_hlix_deix_bcix
   147                          	EXTERN ____sdcc_ll_asr_hlix_a
   148                          	EXTERN ____sdcc_ll_asr_mbc_a
   149                          	EXTERN ____sdcc_ll_copy_src_de_dst_hlix
   150                          	EXTERN ____sdcc_ll_copy_src_de_dst_hlsp
   151                          	EXTERN ____sdcc_ll_copy_src_deix_dst_hl
   152                          	EXTERN ____sdcc_ll_copy_src_deix_dst_hlix
   153                          	EXTERN ____sdcc_ll_copy_src_deixm_dst_hlsp
   154                          	EXTERN ____sdcc_ll_copy_src_desp_dst_hlsp
   155                          	EXTERN ____sdcc_ll_copy_src_hl_dst_de
   156                          	EXTERN ____sdcc_ll_copy_src_hlsp_dst_de
   157                          	EXTERN ____sdcc_ll_copy_src_hlsp_dst_deixm
   158                          	EXTERN ____sdcc_ll_lsl_hlix_a
   159                          	EXTERN ____sdcc_ll_lsl_mbc_a
   160                          	EXTERN ____sdcc_ll_lsr_hlix_a
   161                          	EXTERN ____sdcc_ll_lsr_mbc_a
   162                          	EXTERN ____sdcc_ll_push_hlix
   163                          	EXTERN ____sdcc_ll_push_mhl
   164                          	EXTERN ____sdcc_ll_sub_de_bc_hl
   165                          	EXTERN ____sdcc_ll_sub_de_bc_hlix
   166                          	EXTERN ____sdcc_ll_sub_de_hlix_bc
   167                          	EXTERN ____sdcc_ll_sub_de_hlix_bcix
   168                          	EXTERN ____sdcc_ll_sub_deix_bc_hl
   169                          	EXTERN ____sdcc_ll_sub_deix_hlix
   170                          	EXTERN ____sdcc_ll_sub_hlix_bc_deix
   171                          	EXTERN ____sdcc_ll_sub_hlix_deix_bc
   172                          	EXTERN ____sdcc_ll_sub_hlix_deix_bcix
   173                          	EXTERN ____sdcc_load_debc_deix
   174                          	EXTERN ____sdcc_load_dehl_deix
   175                          	EXTERN ____sdcc_load_debc_mhl
   176                          	EXTERN ____sdcc_load_hlde_mhl
   177                          	EXTERN ____sdcc_store_dehl_bcix
   178                          	EXTERN ____sdcc_store_debc_hlix
   179                          	EXTERN ____sdcc_store_debc_mhl
   180                          	EXTERN ____sdcc_cpu_pop_ei
   181                          	EXTERN ____sdcc_cpu_pop_ei_jp
   182                          	EXTERN ____sdcc_cpu_push_di
   183                          	EXTERN ____sdcc_outi
   184                          	EXTERN ____sdcc_outi_128
   185                          	EXTERN ____sdcc_outi_256
   186                          	EXTERN ____sdcc_ldi
   187                          	EXTERN ____sdcc_ldi_128
   188                          	EXTERN ____sdcc_ldi_256
   189                          	EXTERN ____sdcc_4_copy_srcd_hlix_dst_deix
   190                          	EXTERN ____sdcc_4_and_src_mbc_mhl_dst_deix
   191                          	EXTERN ____sdcc_4_or_src_mbc_mhl_dst_deix
   192                          	EXTERN ____sdcc_4_xor_src_mbc_mhl_dst_deix
   193                          	EXTERN ____sdcc_4_or_src_dehl_dst_bcix
   194                          	EXTERN ____sdcc_4_xor_src_dehl_dst_bcix
   195                          	EXTERN ____sdcc_4_and_src_dehl_dst_bcix
   196                          	EXTERN ____sdcc_4_xor_src_mbc_mhl_dst_debc
   197                          	EXTERN ____sdcc_4_or_src_mbc_mhl_dst_debc
   198                          	EXTERN ____sdcc_4_and_src_mbc_mhl_dst_debc
   199                          	EXTERN ____sdcc_4_cpl_src_mhl_dst_debc
   200                          	EXTERN ____sdcc_4_xor_src_debc_mhl_dst_debc
   201                          	EXTERN ____sdcc_4_or_src_debc_mhl_dst_debc
   202                          	EXTERN ____sdcc_4_and_src_debc_mhl_dst_debc
   203                          	EXTERN ____sdcc_4_and_src_debc_hlix_dst_debc
   204                          	EXTERN ____sdcc_4_or_src_debc_hlix_dst_debc
   205                          	EXTERN ____sdcc_4_xor_src_debc_hlix_dst_debc
   206                          
   207                          ;--------------------------------------------------------
   208                          ; Public variables in this module
   209                          ;--------------------------------------------------------
   210                          	GLOBAL __assert
   211                          	GLOBAL __debug_halt_next_frame
   212                          	GLOBAL __debug_draw_point
   213                          	GLOBAL __debug_point
   214                          	GLOBAL __debug_number
   215                          	GLOBAL __debug_message
   216                          	GLOBAL _end_console_line
   217                          	GLOBAL _new_console_line
   218                          	GLOBAL _scroll_debug_console
   219                          	GLOBAL _halt_next_frame
   220                          	GLOBAL _debug_console_n_lines
   221                          	GLOBAL _float_to_string
   222                          ;--------------------------------------------------------
   223                          ; Externals used
   224                          ;--------------------------------------------------------
   225                          	GLOBAL _clip_sprites_window
   226                          	GLOBAL _setup_relative_sprite
   227                          	GLOBAL _setup_unified_sprite
   228                          	GLOBAL _set_sprite_index
   229                          	GLOBAL _set_tilemap_offset
   230                          	GLOBAL _clip_tilemap_window
   231                          	GLOBAL _set_layer2_offset
   232                          	GLOBAL _clip_layer2_window
   233                          	GLOBAL _ZXN_NEXTREG_UPDATE
   234                          	GLOBAL _zx_pattern_fill_callee
   235                          	GLOBAL _zx_pattern_fill
   236                          	GLOBAL _tshr_saddrpup_fastcall
   237                          	GLOBAL _tshr_saddrpup
   238                          	GLOBAL _tshr_saddrpright_callee
   239                          	GLOBAL _tshr_saddrpright
   240                          	GLOBAL _tshr_saddrpleft_callee
   241                          	GLOBAL _tshr_saddrpleft
   242                          	GLOBAL _tshr_saddrpdown_fastcall
   243                          	GLOBAL _tshr_saddrpdown
   244                          	GLOBAL _tshr_saddrcup_fastcall
   245                          	GLOBAL _tshr_saddrcup
   246                          	GLOBAL _tshr_saddrcright_fastcall
   247                          	GLOBAL _tshr_saddrcright
   248                          	GLOBAL _tshr_saddrcleft_fastcall
   249                          	GLOBAL _tshr_saddrcleft
   250                          	GLOBAL _tshr_saddrcdown_fastcall
   251                          	GLOBAL _tshr_saddrcdown
   252                          	GLOBAL _tshr_saddr2py_fastcall
   253                          	GLOBAL _tshr_saddr2py
   254                          	GLOBAL _tshr_saddr2px_fastcall
   255                          	GLOBAL _tshr_saddr2px
   256                          	GLOBAL _tshr_saddr2cy_fastcall
   257                          	GLOBAL _tshr_saddr2cy
   258                          	GLOBAL _tshr_saddr2cx_fastcall
   259                          	GLOBAL _tshr_saddr2cx
   260                          	GLOBAL _tshr_py2saddr_fastcall
   261                          	GLOBAL _tshr_py2saddr
   262                          	GLOBAL _tshr_pxy2saddr_callee
   263                          	GLOBAL _tshr_pxy2saddr
   264                          	GLOBAL _tshr_px2bitmask_fastcall
   265                          	GLOBAL _tshr_px2bitmask
   266                          	GLOBAL _tshr_cy2saddr_fastcall
   267                          	GLOBAL _tshr_cy2saddr
   268                          	GLOBAL _tshr_cxy2saddr_callee
   269                          	GLOBAL _tshr_cxy2saddr
   270                          	GLOBAL _tshr_bitmask2px_fastcall
   271                          	GLOBAL _tshr_bitmask2px
   272                          	GLOBAL _tshc_saddrpup_fastcall
   273                          	GLOBAL _tshc_saddrpup
   274                          	GLOBAL _tshc_saddrpright_callee
   275                          	GLOBAL _tshc_saddrpright
   276                          	GLOBAL _tshc_saddrpleft_callee
   277                          	GLOBAL _tshc_saddrpleft
   278                          	GLOBAL _tshc_saddrpdown_fastcall
   279                          	GLOBAL _tshc_saddrpdown
   280                          	GLOBAL _tshc_saddrcup_fastcall
   281                          	GLOBAL _tshc_saddrcup
   282                          	GLOBAL _tshc_saddrcright_fastcall
   283                          	GLOBAL _tshc_saddrcright
   284                          	GLOBAL _tshc_saddrcleft_fastcall
   285                          	GLOBAL _tshc_saddrcleft
   286                          	GLOBAL _tshc_saddrcdown_fastcall
   287                          	GLOBAL _tshc_saddrcdown
   288                          	GLOBAL _tshc_saddr2py_fastcall
   289                          	GLOBAL _tshc_saddr2py
   290                          	GLOBAL _tshc_saddr2px_fastcall
   291                          	GLOBAL _tshc_saddr2px
   292                          	GLOBAL _tshc_saddr2cy_fastcall
   293                          	GLOBAL _tshc_saddr2cy
   294                          	GLOBAL _tshc_saddr2cx_fastcall
   295                          	GLOBAL _tshc_saddr2cx
   296                          	GLOBAL _tshc_saddr2aaddr_fastcall
   297                          	GLOBAL _tshc_saddr2aaddr
   298                          	GLOBAL _tshc_py2saddr_fastcall
   299                          	GLOBAL _tshc_py2saddr
   300                          	GLOBAL _tshc_py2aaddr_fastcall
   301                          	GLOBAL _tshc_py2aaddr
   302                          	GLOBAL _tshc_pxy2saddr_callee
   303                          	GLOBAL _tshc_pxy2saddr
   304                          	GLOBAL _tshc_pxy2aaddr_callee
   305                          	GLOBAL _tshc_pxy2aaddr
   306                          	GLOBAL _tshc_px2bitmask_fastcall
   307                          	GLOBAL _tshc_px2bitmask
   308                          	GLOBAL _tshc_cy2saddr_fastcall
   309                          	GLOBAL _tshc_cy2saddr
   310                          	GLOBAL _tshc_cy2aaddr_fastcall
   311                          	GLOBAL _tshc_cy2aaddr
   312                          	GLOBAL _tshc_cxy2saddr_callee
   313                          	GLOBAL _tshc_cxy2saddr
   314                          	GLOBAL _tshc_cxy2aaddr_callee
   315                          	GLOBAL _tshc_cxy2aaddr
   316                          	GLOBAL _tshc_bitmask2px_fastcall
   317                          	GLOBAL _tshc_bitmask2px
   318                          	GLOBAL _tshc_aaddrpup_fastcall
   319                          	GLOBAL _tshc_aaddrpup
   320                          	GLOBAL _tshc_aaddrpright_callee
   321                          	GLOBAL _tshc_aaddrpright
   322                          	GLOBAL _tshc_aaddrpleft_callee
   323                          	GLOBAL _tshc_aaddrpleft
   324                          	GLOBAL _tshc_aaddrpdown_fastcall
   325                          	GLOBAL _tshc_aaddrpdown
   326                          	GLOBAL _tshc_aaddrcup_fastcall
   327                          	GLOBAL _tshc_aaddrcup
   328                          	GLOBAL _tshc_aaddrcright_fastcall
   329                          	GLOBAL _tshc_aaddrcright
   330                          	GLOBAL _tshc_aaddrcleft_fastcall
   331                          	GLOBAL _tshc_aaddrcleft
   332                          	GLOBAL _tshc_aaddrcdown_fastcall
   333                          	GLOBAL _tshc_aaddrcdown
   334                          	GLOBAL _tshc_aaddr2saddr_fastcall
   335                          	GLOBAL _tshc_aaddr2saddr
   336                          	GLOBAL _tshc_aaddr2py_fastcall
   337                          	GLOBAL _tshc_aaddr2py
   338                          	GLOBAL _tshc_aaddr2px_fastcall
   339                          	GLOBAL _tshc_aaddr2px
   340                          	GLOBAL _tshc_aaddr2cy_fastcall
   341                          	GLOBAL _tshc_aaddr2cy
   342                          	GLOBAL _tshc_aaddr2cx_fastcall
   343                          	GLOBAL _tshc_aaddr2cx
   344                          	GLOBAL _zx_saddrpup_fastcall
   345                          	GLOBAL _zx_saddrpup
   346                          	GLOBAL _zx_saddrpright_callee
   347                          	GLOBAL _zx_saddrpright
   348                          	GLOBAL _zx_saddrpleft_callee
   349                          	GLOBAL _zx_saddrpleft
   350                          	GLOBAL _zx_saddrpdown_fastcall
   351                          	GLOBAL _zx_saddrpdown
   352                          	GLOBAL _zx_saddrcup_fastcall
   353                          	GLOBAL _zx_saddrcup
   354                          	GLOBAL _zx_saddrcright_fastcall
   355                          	GLOBAL _zx_saddrcright
   356                          	GLOBAL _zx_saddrcleft_fastcall
   357                          	GLOBAL _zx_saddrcleft
   358                          	GLOBAL _zx_saddrcdown_fastcall
   359                          	GLOBAL _zx_saddrcdown
   360                          	GLOBAL _zx_saddr2py_fastcall
   361                          	GLOBAL _zx_saddr2py
   362                          	GLOBAL _zx_saddr2px_fastcall
   363                          	GLOBAL _zx_saddr2px
   364                          	GLOBAL _zx_saddr2cy_fastcall
   365                          	GLOBAL _zx_saddr2cy
   366                          	GLOBAL _zx_saddr2cx_fastcall
   367                          	GLOBAL _zx_saddr2cx
   368                          	GLOBAL _zx_saddr2aaddr_fastcall
   369                          	GLOBAL _zx_saddr2aaddr
   370                          	GLOBAL _zx_py2saddr_fastcall
   371                          	GLOBAL _zx_py2saddr
   372                          	GLOBAL _zx_py2aaddr_fastcall
   373                          	GLOBAL _zx_py2aaddr
   374                          	GLOBAL _zx_pxy2saddr_callee
   375                          	GLOBAL _zx_pxy2saddr
   376                          	GLOBAL _zx_pxy2aaddr_callee
   377                          	GLOBAL _zx_pxy2aaddr
   378                          	GLOBAL _zx_px2bitmask_fastcall
   379                          	GLOBAL _zx_px2bitmask
   380                          	GLOBAL _zx_cy2saddr_fastcall
   381                          	GLOBAL _zx_cy2saddr
   382                          	GLOBAL _zx_cy2aaddr_fastcall
   383                          	GLOBAL _zx_cy2aaddr
   384                          	GLOBAL _zx_cxy2saddr_callee
   385                          	GLOBAL _zx_cxy2saddr
   386                          	GLOBAL _zx_cxy2aaddr_callee
   387                          	GLOBAL _zx_cxy2aaddr
   388                          	GLOBAL _zx_bitmask2px_fastcall
   389                          	GLOBAL _zx_bitmask2px
   390                          	GLOBAL _zx_aaddrcup_fastcall
   391                          	GLOBAL _zx_aaddrcup
   392                          	GLOBAL _zx_aaddrcright_fastcall
   393                          	GLOBAL _zx_aaddrcright
   394                          	GLOBAL _zx_aaddrcleft_fastcall
   395                          	GLOBAL _zx_aaddrcleft
   396                          	GLOBAL _zx_aaddrcdown_fastcall
   397                          	GLOBAL _zx_aaddrcdown
   398                          	GLOBAL _zx_aaddr2saddr_fastcall
   399                          	GLOBAL _zx_aaddr2saddr
   400                          	GLOBAL _zx_aaddr2py_fastcall
   401                          	GLOBAL _zx_aaddr2py
   402                          	GLOBAL _zx_aaddr2px_fastcall
   403                          	GLOBAL _zx_aaddr2px
   404                          	GLOBAL _zx_aaddr2cy_fastcall
   405                          	GLOBAL _zx_aaddr2cy
   406                          	GLOBAL _zx_aaddr2cx_fastcall
   407                          	GLOBAL _zx_aaddr2cx
   408                          	GLOBAL _tshr_visit_wc_pix_callee
   409                          	GLOBAL _tshr_visit_wc_pix
   410                          	GLOBAL _tshr_scroll_wc_up_pix_callee
   411                          	GLOBAL _tshr_scroll_wc_up_pix
   412                          	GLOBAL _tshr_scroll_up_pix_callee
   413                          	GLOBAL _tshr_scroll_up_pix
   414                          	GLOBAL _tshr_scroll_up_callee
   415                          	GLOBAL _tshr_scroll_up
   416                          	GLOBAL _tshr_cls_wc_pix_callee
   417                          	GLOBAL _tshr_cls_wc_pix
   418                          	GLOBAL _tshr_cls_pix_fastcall
   419                          	GLOBAL _tshr_cls_pix
   420                          	GLOBAL _tshr_cls_attr_fastcall
   421                          	GLOBAL _tshr_cls_attr
   422                          	GLOBAL _tshr_cls_fastcall
   423                          	GLOBAL _tshr_cls
   424                          	GLOBAL _tshc_visit_wc_pix_callee
   425                          	GLOBAL _tshc_visit_wc_pix
   426                          	GLOBAL _tshc_visit_wc_attr_callee
   427                          	GLOBAL _tshc_visit_wc_attr
   428                          	GLOBAL _tshc_scroll_wc_up_pix_callee
   429                          	GLOBAL _tshc_scroll_wc_up_pix
   430                          	GLOBAL _tshc_scroll_wc_up_attr_callee
   431                          	GLOBAL _tshc_scroll_wc_up_attr
   432                          	GLOBAL _tshc_scroll_wc_up_callee
   433                          	GLOBAL _tshc_scroll_wc_up
   434                          	GLOBAL _tshc_scroll_up_pix_callee
   435                          	GLOBAL _tshc_scroll_up_pix
   436                          	GLOBAL _tshc_scroll_up_attr_callee
   437                          	GLOBAL _tshc_scroll_up_attr
   438                          	GLOBAL _tshc_scroll_up_callee
   439                          	GLOBAL _tshc_scroll_up
   440                          	GLOBAL _tshc_cls_wc_pix_callee
   441                          	GLOBAL _tshc_cls_wc_pix
   442                          	GLOBAL _tshc_cls_wc_attr_callee
   443                          	GLOBAL _tshc_cls_wc_attr
   444                          	GLOBAL _tshc_cls_wc_callee
   445                          	GLOBAL _tshc_cls_wc
   446                          	GLOBAL _tshc_cls_pix_fastcall
   447                          	GLOBAL _tshc_cls_pix
   448                          	GLOBAL _tshc_cls_attr_fastcall
   449                          	GLOBAL _tshc_cls_attr
   450                          	GLOBAL _tshc_cls_fastcall
   451                          	GLOBAL _tshc_cls
   452                          	GLOBAL _zx_visit_wc_pix_callee
   453                          	GLOBAL _zx_visit_wc_pix
   454                          	GLOBAL _zx_visit_wc_attr_callee
   455                          	GLOBAL _zx_visit_wc_attr
   456                          	GLOBAL _zx_scroll_wc_up_pix_callee
   457                          	GLOBAL _zx_scroll_wc_up_pix
   458                          	GLOBAL _zx_scroll_wc_up_attr_callee
   459                          	GLOBAL _zx_scroll_wc_up_attr
   460                          	GLOBAL _zx_scroll_wc_up_callee
   461                          	GLOBAL _zx_scroll_wc_up
   462                          	GLOBAL _zx_scroll_up_pix_callee
   463                          	GLOBAL _zx_scroll_up_pix
   464                          	GLOBAL _zx_scroll_up_attr_callee
   465                          	GLOBAL _zx_scroll_up_attr
   466                          	GLOBAL _zx_scroll_up_callee
   467                          	GLOBAL _zx_scroll_up
   468                          	GLOBAL _zx_cls_wc_pix_callee
   469                          	GLOBAL _zx_cls_wc_pix
   470                          	GLOBAL _zx_cls_wc_attr_callee
   471                          	GLOBAL _zx_cls_wc_attr
   472                          	GLOBAL _zx_cls_wc_callee
   473                          	GLOBAL _zx_cls_wc
   474                          	GLOBAL _zx_cls_pix_fastcall
   475                          	GLOBAL _zx_cls_pix
   476                          	GLOBAL _zx_cls_attr_fastcall
   477                          	GLOBAL _zx_cls_attr
   478                          	GLOBAL _zx_cls_fastcall
   479                          	GLOBAL _zx_cls
   480                          	GLOBAL _zx_border_fastcall
   481                          	GLOBAL _zx_border
   482                          	GLOBAL _ts_vmod_fastcall
   483                          	GLOBAL _ts_vmod
   484                          	GLOBAL _zx_tape_verify_block_callee
   485                          	GLOBAL _zx_tape_verify_block
   486                          	GLOBAL _zx_tape_save_block_callee
   487                          	GLOBAL _zx_tape_save_block
   488                          	GLOBAL _zx_tape_load_block_callee
   489                          	GLOBAL _zx_tape_load_block
   490                          	GLOBAL _check_version_nextzxos_fastcall
   491                          	GLOBAL _check_version_nextzxos
   492                          	GLOBAL _check_version_esxdos_fastcall
   493                          	GLOBAL _check_version_esxdos
   494                          	GLOBAL _check_version_core_fastcall
   495                          	GLOBAL _check_version_core
   496                          	GLOBAL _zxn_mangle_bank_state_fastcall
   497                          	GLOBAL _zxn_mangle_bank_state
   498                          	GLOBAL _zxn_write_sysvar_bank_state_fastcall
   499                          	GLOBAL _zxn_write_sysvar_bank_state
   500                          	GLOBAL _zxn_read_sysvar_bank_state
   501                          	GLOBAL _zxn_write_bank_state_fastcall
   502                          	GLOBAL _zxn_write_bank_state
   503                          	GLOBAL _zxn_write_mmu_state_fastcall
   504                          	GLOBAL _zxn_write_mmu_state
   505                          	GLOBAL _zxn_read_mmu_state_fastcall
   506                          	GLOBAL _zxn_read_mmu_state
   507                          	GLOBAL _zxn_page_from_addr_fastcall
   508                          	GLOBAL _zxn_page_from_addr
   509                          	GLOBAL _zxn_addr_from_page_fastcall
   510                          	GLOBAL _zxn_addr_from_page
   511                          	GLOBAL _zxn_addr_in_mmu_callee
   512                          	GLOBAL _zxn_addr_in_mmu
   513                          	GLOBAL _zxn_mmu_from_addr_fastcall
   514                          	GLOBAL _zxn_mmu_from_addr
   515                          	GLOBAL _zxn_addr_from_mmu_fastcall
   516                          	GLOBAL _zxn_addr_from_mmu
   517                          	GLOBAL _ZXN_WRITE_MMU7_fastcall
   518                          	GLOBAL _ZXN_WRITE_MMU7
   519                          	GLOBAL _ZXN_WRITE_MMU6_fastcall
   520                          	GLOBAL _ZXN_WRITE_MMU6
   521                          	GLOBAL _ZXN_WRITE_MMU5_fastcall
   522                          	GLOBAL _ZXN_WRITE_MMU5
   523                          	GLOBAL _ZXN_WRITE_MMU4_fastcall
   524                          	GLOBAL _ZXN_WRITE_MMU4
   525                          	GLOBAL _ZXN_WRITE_MMU3_fastcall
   526                          	GLOBAL _ZXN_WRITE_MMU3
   527                          	GLOBAL _ZXN_WRITE_MMU2_fastcall
   528                          	GLOBAL _ZXN_WRITE_MMU2
   529                          	GLOBAL _ZXN_WRITE_MMU1_fastcall
   530                          	GLOBAL _ZXN_WRITE_MMU1
   531                          	GLOBAL _ZXN_WRITE_MMU0_fastcall
   532                          	GLOBAL _ZXN_WRITE_MMU0
   533                          	GLOBAL _ZXN_READ_MMU7
   534                          	GLOBAL _ZXN_READ_MMU6
   535                          	GLOBAL _ZXN_READ_MMU5
   536                          	GLOBAL _ZXN_READ_MMU4
   537                          	GLOBAL _ZXN_READ_MMU3
   538                          	GLOBAL _ZXN_READ_MMU2
   539                          	GLOBAL _ZXN_READ_MMU1
   540                          	GLOBAL _ZXN_READ_MMU0
   541                          	GLOBAL _ZXN_WRITE_REG_callee
   542                          	GLOBAL _ZXN_WRITE_REG
   543                          	GLOBAL _ZXN_READ_REG_fastcall
   544                          	GLOBAL _ZXN_READ_REG
   545                          	GLOBAL _clear_tilemap
   546                          	GLOBAL _select_tilemap
   547                          	GLOBAL _xy_in_boundary
   548                          	GLOBAL _point_in_boundary
   549                          	GLOBAL _x_projection
   550                          	GLOBAL _intrinsic_swap_word_32_fastcall
   551                          	GLOBAL _intrinsic_swap_word_32
   552                          	GLOBAL _intrinsic_swap_endian_32_fastcall
   553                          	GLOBAL _intrinsic_swap_endian_32
   554                          	GLOBAL _intrinsic_swap_endian_16_fastcall
   555                          	GLOBAL _intrinsic_swap_endian_16
   556                          	GLOBAL _intrinsic_return_de
   557                          	GLOBAL _intrinsic_return_bc
   558                          	GLOBAL _intrinsic_exx
   559                          	GLOBAL _intrinsic_ex_de_hl
   560                          	GLOBAL _intrinsic_nop
   561                          	GLOBAL _intrinsic_im_2
   562                          	GLOBAL _intrinsic_im_1
   563                          	GLOBAL _intrinsic_im_0
   564                          	GLOBAL _intrinsic_retn
   565                          	GLOBAL _intrinsic_reti
   566                          	GLOBAL _intrinsic_halt
   567                          	GLOBAL _intrinsic_ei
   568                          	GLOBAL _intrinsic_di
   569                          	GLOBAL _intrinsic_stub
   570                          	GLOBAL _intrinsic_ini
   571                          	GLOBAL _intrinsic_outi
   572                          	GLOBAL _intrinsic_ldi
   573                          	GLOBAL _ffsll_callee
   574                          	GLOBAL _ffsll
   575                          	GLOBAL _strxfrm_callee
   576                          	GLOBAL _strxfrm
   577                          	GLOBAL _strupr_fastcall
   578                          	GLOBAL _strupr
   579                          	GLOBAL _strtok_r_callee
   580                          	GLOBAL _strtok_r
   581                          	GLOBAL _strtok_callee
   582                          	GLOBAL _strtok
   583                          	GLOBAL _strstrip_fastcall
   584                          	GLOBAL _strstrip
   585                          	GLOBAL _strstr_callee
   586                          	GLOBAL _strstr
   587                          	GLOBAL _strspn_callee
   588                          	GLOBAL _strspn
   589                          	GLOBAL _strsep_callee
   590                          	GLOBAL _strsep
   591                          	GLOBAL _strrstrip_fastcall
   592                          	GLOBAL _strrstrip
   593                          	GLOBAL _strrstr_callee
   594                          	GLOBAL _strrstr
   595                          	GLOBAL _strrspn_callee
   596                          	GLOBAL _strrspn
   597                          	GLOBAL _strrev_fastcall
   598                          	GLOBAL _strrev
   599                          	GLOBAL _strrcspn_callee
   600                          	GLOBAL _strrcspn
   601                          	GLOBAL _strrchr_callee
   602                          	GLOBAL _strrchr
   603                          	GLOBAL _strpbrk_callee
   604                          	GLOBAL _strpbrk
   605                          	GLOBAL _strnlen_callee
   606                          	GLOBAL _strnlen
   607                          	GLOBAL _strnicmp_callee
   608                          	GLOBAL _strnicmp
   609                          	GLOBAL _strndup_callee
   610                          	GLOBAL _strndup
   611                          	GLOBAL _strncpy_callee
   612                          	GLOBAL _strncpy
   613                          	GLOBAL _strncmp_callee
   614                          	GLOBAL _strncmp
   615                          	GLOBAL _strnchr_callee
   616                          	GLOBAL _strnchr
   617                          	GLOBAL _strncat_callee
   618                          	GLOBAL _strncat
   619                          	GLOBAL _strncasecmp_callee
   620                          	GLOBAL _strncasecmp
   621                          	GLOBAL _strlwr_fastcall
   622                          	GLOBAL _strlwr
   623                          	GLOBAL _strlen_fastcall
   624                          	GLOBAL _strlen
   625                          	GLOBAL _strlcpy_callee
   626                          	GLOBAL _strlcpy
   627                          	GLOBAL _strlcat_callee
   628                          	GLOBAL _strlcat
   629                          	GLOBAL _stricmp_callee
   630                          	GLOBAL _stricmp
   631                          	GLOBAL _strerror_fastcall
   632                          	GLOBAL _strerror
   633                          	GLOBAL _strdup_fastcall
   634                          	GLOBAL _strdup
   635                          	GLOBAL _strcspn_callee
   636                          	GLOBAL _strcspn
   637                          	GLOBAL _strcpy_callee
   638                          	GLOBAL _strcpy
   639                          	GLOBAL _strcoll_callee
   640                          	GLOBAL _strcoll
   641                          	GLOBAL _strcmp_callee
   642                          	GLOBAL _strcmp
   643                          	GLOBAL _strchrnul_callee
   644                          	GLOBAL _strchrnul
   645                          	GLOBAL _strchr_callee
   646                          	GLOBAL _strchr
   647                          	GLOBAL _strcat_callee
   648                          	GLOBAL _strcat
   649                          	GLOBAL _strcasecmp_callee
   650                          	GLOBAL _strcasecmp
   651                          	GLOBAL _stpncpy_callee
   652                          	GLOBAL _stpncpy
   653                          	GLOBAL _stpcpy_callee
   654                          	GLOBAL _stpcpy
   655                          	GLOBAL _memswap_callee
   656                          	GLOBAL _memswap
   657                          	GLOBAL _memset_wr_callee
   658                          	GLOBAL _memset_wr
   659                          	GLOBAL _memset_callee
   660                          	GLOBAL _memset
   661                          	GLOBAL _memrchr_callee
   662                          	GLOBAL _memrchr
   663                          	GLOBAL _memmove_callee
   664                          	GLOBAL _memmove
   665                          	GLOBAL _memmem_callee
   666                          	GLOBAL _memmem
   667                          	GLOBAL _memcpy_callee
   668                          	GLOBAL _memcpy
   669                          	GLOBAL _memcmp_callee
   670                          	GLOBAL _memcmp
   671                          	GLOBAL _memchr_callee
   672                          	GLOBAL _memchr
   673                          	GLOBAL _memccpy_callee
   674                          	GLOBAL _memccpy
   675                          	GLOBAL _ffsl_fastcall
   676                          	GLOBAL _ffsl
   677                          	GLOBAL _ffs_fastcall
   678                          	GLOBAL _ffs
   679                          	GLOBAL __strrstrip__fastcall
   680                          	GLOBAL __strrstrip_
   681                          	GLOBAL __memupr__callee
   682                          	GLOBAL __memupr_
   683                          	GLOBAL __memstrcpy__callee
   684                          	GLOBAL __memstrcpy_
   685                          	GLOBAL __memlwr__callee
   686                          	GLOBAL __memlwr_
   687                          	GLOBAL _rawmemchr_callee
   688                          	GLOBAL _rawmemchr
   689                          	GLOBAL _strnset_callee
   690                          	GLOBAL _strnset
   691                          	GLOBAL _strset_callee
   692                          	GLOBAL _strset
   693                          	GLOBAL _rindex_callee
   694                          	GLOBAL _rindex
   695                          	GLOBAL _index_callee
   696                          	GLOBAL _index
   697                          	GLOBAL _bzero_callee
   698                          	GLOBAL _bzero
   699                          	GLOBAL _bcopy_callee
   700                          	GLOBAL _bcopy
   701                          	GLOBAL _bcmp_callee
   702                          	GLOBAL _bcmp
   703                          	GLOBAL _GLOBAL_ZXN_PORT_DFFD
   704                          	GLOBAL _GLOBAL_ZXN_PORT_7FFD
   705                          	GLOBAL _GLOBAL_ZXN_PORT_1FFD
   706                          	GLOBAL _GLOBAL_ZXN_PORT_FE
   707                          	GLOBAL _GLOBAL_TS_PORT_FE
   708                          	GLOBAL _GLOBAL_ZX_PORT_7FFD
   709                          	GLOBAL _GLOBAL_ZX_PORT_1FFD
   710                          	GLOBAL _GLOBAL_ZX_PORT_FE
   711                          	GLOBAL _tilemap
   712                          	GLOBAL _balloon_tilemap
   713                          	GLOBAL _menu_palette_end
   714                          	GLOBAL _menu_palette
   715                          	GLOBAL _menu_patterns
   716                          	GLOBAL _game_palette_end
   717                          	GLOBAL _game_palette
   718                          	GLOBAL _game_patterns
   719                          	GLOBAL _tiles
   720                          	GLOBAL _court_boundaries
   721                          ;--------------------------------------------------------
   722                          ; special function registers
   723                          ;--------------------------------------------------------
   724                          defc _IO_FE	=	0x00fe
   725                          defc _IO_FF	=	0x00ff
   726                          defc _IO_TIMEX_VIDEO_MODE	=	0x00ff
   727                          defc _IO_1FFD	=	0x1ffd
   728                          defc _IO_7FFD	=	0x7ffd
   729                          defc _IO_DFFD	=	0xdffd
   730                          defc _IO_0F	=	0x000f
   731                          defc _IO_DAC_L0	=	0x000f
   732                          defc _IO_1F	=	0x001f
   733                          defc _IO_DAC_L1	=	0x001f
   734                          defc _IO_4F	=	0x004f
   735                          defc _IO_DAC_R0	=	0x004f
   736                          defc _IO_5F	=	0x005f
   737                          defc _IO_DAC_R1	=	0x005f
   738                          defc _IO_DF	=	0x00df
   739                          defc _IO_DAC_M0	=	0x00df
   740                          defc _IO_FFFD	=	0xfffd
   741                          defc _IO_TURBOSOUND	=	0xfffd
   742                          defc _IO_AY_REG	=	0xfffd
   743                          defc _IO_BFFD	=	0xbffd
   744                          defc _IO_AY_DAT	=	0xbffd
   745                          defc _IO_123B	=	0x123b
   746                          defc _IO_LAYER_2_CONFIG	=	0x123b
   747                          defc _IO_303B	=	0x303b
   748                          defc _IO_SPRITE_SLOT	=	0x303b
   749                          defc _IO_SPRITE_FLAGS	=	0x303b
   750                          defc _IO_57	=	0x0057
   751                          defc _IO_SPRITE_ATTRIBUTE	=	0x0057
   752                          defc _IO_5B	=	0x005b
   753                          defc _IO_SPRITE_PATTERN	=	0x005b
   754                          defc _IO_143B	=	0x143b
   755                          defc _IO_UART_RX	=	0x143b
   756                          defc _IO_UART_BAUD_RATE	=	0x143b
   757                          defc _IO_133B	=	0x133b
   758                          defc _IO_UART_TX	=	0x133b
   759                          defc _IO_UART_STATUS	=	0x133b
   760                          defc _IO_6B	=	0x006b
   761                          defc _IO_DMA	=	0x006b
   762                          defc _IO_E3	=	0x00e3
   763                          defc _IO_DIVIDE_CONTROL	=	0x00e3
   764                          defc _IO_E7	=	0x00e7
   765                          defc _IO_SPI_CONTROL	=	0x00e7
   766                          defc _IO_SPI_STATUS	=	0x00e7
   767                          defc _IO_EB	=	0x00eb
   768                          defc _IO_SPI_DATA	=	0x00eb
   769                          defc _IO_103B	=	0x103b
   770                          defc _IO_I2C_SCL	=	0x103b
   771                          defc _IO_113B	=	0x113b
   772                          defc _IO_I2C_SDA	=	0x113b
   773                          defc _IO_LED_L	=	0x103b
   774                          defc _IO_243B	=	0x243b
   775                          defc _IO_NEXTREG_REG	=	0x243b
   776                          defc _IO_253B	=	0x253b
   777                          defc _IO_NEXTREG_DAT	=	0x253b
   778                          ;--------------------------------------------------------
   779                          ; ram data
   780                          ;--------------------------------------------------------
   781                          	SECTION bss_compiler
   782                          _assertion_message:
   783  0000  0000000000000000  	DEFS 32
              0000000000000000  
              0000000000000000  
              0000000000000000  
   784                          ;--------------------------------------------------------
   785                          ; ram data
   786                          ;--------------------------------------------------------
   787                          
   788                          IF 0
   789                          
   790                          ; .area _INITIALIZED removed by z88dk
   791                          
   792                          _debug_console_n_lines:
   793                          	DEFS 1
   794                          _halt_next_frame:
   795                          	DEFS 1
   796                          
   797                          ENDIF
   798                          
   799                          ;--------------------------------------------------------
   800                          ; absolute external ram data
   801                          ;--------------------------------------------------------
   802                          	SECTION IGNORE
   803                          ;--------------------------------------------------------
   804                          ; global & static initialisations
   805                          ;--------------------------------------------------------
   806                          	SECTION code_crt_init
   807                          ;--------------------------------------------------------
   808                          ; Home
   809                          ;--------------------------------------------------------
   810                          	SECTION IGNORE
   811                          ;--------------------------------------------------------
   812                          ; code
   813                          ;--------------------------------------------------------
   814                          	SECTION BANK_8
   815                          ;debug.c:22: // Scroll the console up
   816                          ;	---------------------------------
   817                          ; Function scroll_debug_console
   818                          ; ---------------------------------
   819                          _scroll_debug_console:
   820  0000  cd0000            	call	___sdcc_enter_ix
   821  0003  3b                	dec	sp
   822                          ;debug.c:25: memcpy(&tilemap[DEBUG_CONSOLE_Y_POSITION + i][DEBUG_CONSOLE_X_POSITION],
   823  0004  dd36ff00          	ld	(ix-1),0x00
   824                          l_scroll_debug_console_00103:
   825  0008  dd7eff            	ld	a,(ix-1)
   826  000b  d609              	sub	a,0x09
   827  000d  3039              	jr	NC,l_scroll_debug_console_00105
   828                          ;debug.c:29: }
   829  000f  dd4eff            	ld	c,(ix-1)
   830  0012  0600              	ld	b,0x00
   831  0014  59                	ld	e, c
   832  0015  50                	ld	d, b
   833  0016  13                	inc	de
   834  0017  6b                	ld	l, e
   835  0018  62                	ld	h, d
   836  0019  29                	add	hl, hl
   837  001a  29                	add	hl, hl
   838  001b  19                	add	hl, de
   839  001c  29                	add	hl, hl
   840  001d  29                	add	hl, hl
   841  001e  29                	add	hl, hl
   842  001f  29                	add	hl, hl
   843  0020  29                	add	hl, hl
   844  0021  110000            	ld	de,_tilemap
   845  0024  19                	add	hl, de
   846  0025  3e5e              	ld	a,0x5e
   847  0027  ed31              	add	hl, a
   848  0029  03                	inc	bc
   849  002a  03                	inc	bc
   850  002b  59                	ld	e,c
   851  002c  50                	ld	d,b
   852  002d  eb                	ex	de,hl
   853  002e  29                	add	hl, hl
   854  002f  29                	add	hl, hl
   855  0030  09                	add	hl, bc
   856  0031  29                	add	hl, hl
   857  0032  29                	add	hl, hl
   858  0033  29                	add	hl, hl
   859  0034  29                	add	hl, hl
   860  0035  29                	add	hl, hl
   861  0036  010000            	ld	bc,_tilemap
   862  0039  09                	add	hl, bc
   863  003a  3e5e              	ld	a,0x5e
   864  003c  ed31              	add	hl, a
   865  003e  014000            	ld	bc,0x0040
   866  0041  edb0              	ldir
   867                          ;debug.c:25: memcpy(&tilemap[DEBUG_CONSOLE_Y_POSITION + i][DEBUG_CONSOLE_X_POSITION],
   868  0043  dd34ff            	inc	(ix-1)
   869  0046  18c0              	jr	l_scroll_debug_console_00103
   870                          l_scroll_debug_console_00105:
   871                          ;debug.c:31: char *new_console_line(void)
   872  0048  33                	inc	sp
   873  0049  dde1              	pop	ix
   874  004b  c9                	ret
   875                          	SECTION BANK_8
   876                          ;debug.c:33: if (debug_console_n_lines >= DEBUG_CONSOLE_LINES)
   877                          ;	---------------------------------
   878                          ; Function new_console_line
   879                          ; ---------------------------------
   880                          _new_console_line:
   881                          ;debug.c:35: scroll_debug_console();
   882  004c  3a0000            	ld	a,(_debug_console_n_lines)
   883  004f  d60a              	sub	a,0x0a
   884  0051  3805              	jr	C,l_new_console_line_00102
   885                          ;debug.c:37: else
   886  0053  cd0000            	call	_scroll_debug_console
   887  0056  1804              	jr	l_new_console_line_00103
   888                          l_new_console_line_00102:
   889                          ;debug.c:41: return (char *)&tilemap[DEBUG_CONSOLE_Y_POSITION + debug_console_n_lines - 1][DEBUG_CONSOLE_X_POSITION];
   890  0058  210000            	ld	hl,_debug_console_n_lines
   891  005b  34                	inc	(hl)
   892                          l_new_console_line_00103:
   893                          ;debug.c:43:
   894  005c  010000            	ld	bc,_tilemap+0
   895  005f  2a0000            	ld	hl,(_debug_console_n_lines)
   896  0062  2600              	ld	h,0x00
   897  0064  5d                	ld	e,l
   898  0065  54                	ld	d,h
   899  0066  29                	add	hl, hl
   900  0067  29                	add	hl, hl
   901  0068  19                	add	hl, de
   902  0069  29                	add	hl, hl
   903  006a  29                	add	hl, hl
   904  006b  29                	add	hl, hl
   905  006c  29                	add	hl, hl
   906  006d  29                	add	hl, hl
   907  006e  09                	add	hl, bc
   908  006f  3e5e              	ld	a,0x5e
   909  0071  ed31              	add	hl, a
   910                          ;debug.c:44: void end_console_line(char *address)
   911  0073  c9                	ret
   912                          ;debug.c:46: char *end = (char *)&tilemap[DEBUG_CONSOLE_Y_POSITION + debug_console_n_lines][DEBUG_CONSOLE_X_POSITION + DEBUG_CONSOLE_LINE_LENGTH];
   913                          ;	---------------------------------
   914                          ; Function end_console_line
   915                          ; ---------------------------------
   916                          _end_console_line:
   917  0074  cd0000            	call	___sdcc_enter_ix
   918                          ;debug.c:48: while (address < end)
   919  0077  010000            	ld	bc,_tilemap+0
   920  007a  3a0000            	ld	a,(_debug_console_n_lines)
   921  007d  5f                	ld	e,a
   922  007e  1600              	ld	d,0x00
   923  0080  13                	inc	de
   924  0081  6b                	ld	l, e
   925  0082  62                	ld	h, d
   926  0083  29                	add	hl, hl
   927  0084  29                	add	hl, hl
   928  0085  19                	add	hl, de
   929  0086  29                	add	hl, hl
   930  0087  29                	add	hl, hl
   931  0088  29                	add	hl, hl
   932  0089  29                	add	hl, hl
   933  008a  29                	add	hl, hl
   934  008b  09                	add	hl, bc
   935  008c  3e9e              	ld	a,0x9e
   936  008e  eb                	ex	de,hl
   937  008f  ed32              	add	de, a
   938                          ;debug.c:50: *address++ = 0;
   939  0091  dd4e04            	ld	c,(ix+4)
   940  0094  dd4605            	ld	b,(ix+5)
   941                          l_end_console_line_00101:
   942  0097  79                	ld	a, c
   943  0098  93                	sub	a, e
   944  0099  78                	ld	a, b
   945  009a  9a                	sbc	a, d
   946  009b  3005              	jr	NC,l_end_console_line_00104
   947                          ;debug.c:52: }
   948  009d  af                	xor	a, a
   949  009e  02                	ld	(bc), a
   950  009f  03                	inc	bc
   951  00a0  18f5              	jr	l_end_console_line_00101
   952                          l_end_console_line_00104:
   953                          ;debug.c:54: char *float_to_string(float value, char *buffer)
   954  00a2  dde1              	pop	ix
   955  00a4  c9                	ret
   956                          ;debug.c:56: uint8_t decimals = 2; // Number of decimal places to display
   957                          ;	---------------------------------
   958                          ; Function float_to_string
   959                          ; ---------------------------------
   960                          _float_to_string:
   961  00a5  cd0000            	call	___sdcc_enter_ix
   962  00a8  21e9ff            	ld	hl, -23
   963  00ab  39                	add	hl, sp
   964  00ac  f9                	ld	sp, hl
   965                          ;debug.c:60: *buffer++ = '-';
   966  00ad  210000            	ld	hl,0x0000
   967  00b0  e5                	push	hl
   968  00b1  e5                	push	hl
   969  00b2  210400            	ld	hl,4
   970  00b5  cd0000            	call	____sdcc_4_push_hlix
   971  00b8  cd0000            	call	___fslt_callee
   972  00bb  7d                	ld	a, l
   973  00bc  b7                	or	a, a
   974  00bd  2820              	jr	Z,l_float_to_string_00102
   975                          ;debug.c:62: value = -value;
   976  00bf  dd4e08            	ld	c,(ix+8)
   977  00c2  dd4609            	ld	b,(ix+9)
   978  00c5  3e2d              	ld	a,0x2d
   979  00c7  02                	ld	(bc), a
   980  00c8  03                	inc	bc
   981  00c9  dd7108            	ld	(ix+8),c
   982  00cc  dd7009            	ld	(ix+9),b
   983                          ;debug.c:63: }
   984  00cf  dd3408            	inc	(ix+8)
   985  00d2  2003              	jr	NZ,l_float_to_string_00163
   986  00d4  dd3409            	inc	(ix+9)
   987                          l_float_to_string_00163:
   988                          ;debug.c:64:
   989  00d7  dd7e07            	ld	a,(ix+7)
   990  00da  ee80              	xor	a,0x80
   991  00dc  dd7707            	ld	(ix+7),a
   992                          l_float_to_string_00102:
   993                          ;debug.c:68:
   994  00df  210400            	ld	hl,4
   995  00e2  cd0000            	call	____sdcc_4_push_hlix
   996  00e5  cd0000            	call	___fs2sint_callee
   997                          ;debug.c:69: // Convert integer part
   998  00e8  e5                	push	hl
   999  00e9  e5                	push	hl
  1000  00ea  cd0000            	call	___sint2fs_callee
  1001  00ed  d5                	push	de
  1002  00ee  e5                	push	hl
  1003  00ef  210400            	ld	hl,4
  1004  00f2  cd0000            	call	____sdcc_4_push_hlix
  1005  00f5  cd0000            	call	___fssub_callee
  1006  00f8  01feff            	ld	bc,-2
  1007  00fb  cd0000            	call	____sdcc_store_dehl_bcix
  1008  00fe  c1                	pop	bc
  1009                          ;debug.c:75: int_buffer[i++] = '0';
  1010  00ff  78                	ld	a, b
  1011  0100  b1                	or	a, c
  1012  0101  2009              	jr	NZ,l_float_to_string_00122
  1013                          ;debug.c:77: else
  1014  0103  110100            	ld	de,0x0001
  1015  0106  dd36eb30          	ld	(ix-21),0x30
  1016  010a  183c              	jr	l_float_to_string_00124
  1017                          ;debug.c:81: int_buffer[i++] = '0' + integer_part % 10;
  1018                          l_float_to_string_00122:
  1019  010c  110000            	ld	de,0x0000
  1020                          l_float_to_string_00103:
  1021  010f  af                	xor	a, a
  1022  0110  b9                	cp	a, c
  1023  0111  98                	sbc	a, b
  1024  0112  e21701            	jp	PO, l_float_to_string_00164
  1025  0115  ee80              	xor	a,0x80
  1026                          l_float_to_string_00164:
  1027  0117  f24801            	jp	P, l_float_to_string_00128
  1028                          ;debug.c:83: }
  1029  011a  210200            	ld	hl,2
  1030  011d  39                	add	hl, sp
  1031  011e  19                	add	hl, de
  1032  011f  13                	inc	de
  1033  0120  e5                	push	hl
  1034  0121  c5                	push	bc
  1035  0122  d5                	push	de
  1036  0123  ed8a000a          	push	+0x000a
  1037  0127  c5                	push	bc
  1038  0128  cd0000            	call	__modsint_callee
  1039  012b  dd75e9            	ld	(ix-23),l
  1040  012e  dd74ea            	ld	(ix-22),h
  1041  0131  d1                	pop	de
  1042  0132  c1                	pop	bc
  1043  0133  e1                	pop	hl
  1044  0134  dd7ee9            	ld	a,(ix-23)
  1045  0137  c630              	add	a,0x30
  1046  0139  77                	ld	(hl), a
  1047                          ;debug.c:84: }
  1048  013a  d5                	push	de
  1049  013b  210a00            	ld	hl,0x000a
  1050  013e  e5                	push	hl
  1051  013f  c5                	push	bc
  1052  0140  cd0000            	call	__divsint_callee
  1053  0143  4d                	ld	c, l
  1054  0144  44                	ld	b, h
  1055  0145  d1                	pop	de
  1056  0146  18c7              	jr	l_float_to_string_00103
  1057                          ;debug.c:89: *buffer++ = int_buffer[--i];
  1058                          l_float_to_string_00128:
  1059                          l_float_to_string_00124:
  1060                          l_float_to_string_00109:
  1061                          ;debug.c:62: value = -value;
  1062  0148  dd4e08            	ld	c,(ix+8)
  1063  014b  dd4609            	ld	b,(ix+9)
  1064                          ;debug.c:91: }
  1065  014e  210100            	ld	hl,0x0001
  1066  0151  09                	add	hl, bc
  1067  0152  e3                	ex	(sp), hl
  1068                          ;debug.c:89: *buffer++ = int_buffer[--i];
  1069  0153  af                	xor	a, a
  1070  0154  bb                	cp	a, e
  1071  0155  9a                	sbc	a, d
  1072  0156  e25b01            	jp	PO, l_float_to_string_00165
  1073  0159  ee80              	xor	a,0x80
  1074                          l_float_to_string_00165:
  1075  015b  f27c01            	jp	P, l_float_to_string_00111
  1076                          ;debug.c:91: }
  1077  015e  1b                	dec	de
  1078  015f  210200            	ld	hl,2
  1079  0162  39                	add	hl, sp
  1080  0163  19                	add	hl, de
  1081  0164  7e                	ld	a, (hl)
  1082  0165  02                	ld	(bc), a
  1083  0166  dd7ee9            	ld	a,(ix-23)
  1084  0169  dd7708            	ld	(ix+8),a
  1085  016c  dd7eea            	ld	a,(ix-22)
  1086  016f  dd7709            	ld	(ix+9),a
  1087                          ;debug.c:92:
  1088  0172  dd3408            	inc	(ix+8)
  1089  0175  20d1              	jr	NZ,l_float_to_string_00109
  1090  0177  dd3409            	inc	(ix+9)
  1091  017a  18cc              	jr	l_float_to_string_00109
  1092                          l_float_to_string_00111:
  1093                          ;debug.c:98:
  1094  017c  3e2e              	ld	a,0x2e
  1095  017e  02                	ld	(bc), a
  1096  017f  dd7ee9            	ld	a,(ix-23)
  1097  0182  dd7708            	ld	(ix+8),a
  1098  0185  dd7eea            	ld	a,(ix-22)
  1099  0188  dd7709            	ld	(ix+9),a
  1100                          ;debug.c:99: // Convert decimal part
  1101  018b  dd3408            	inc	(ix+8)
  1102  018e  2003              	jr	NZ,l_float_to_string_00167
  1103  0190  dd3409            	inc	(ix+9)
  1104                          l_float_to_string_00167:
  1105                          ;debug.c:102: decimal_part *= 10;
  1106  0193  dd36ff02          	ld	(ix-1),0x02
  1107                          l_float_to_string_00112:
  1108  0197  dd4eff            	ld	c,(ix-1)
  1109  019a  dd35ff            	dec	(ix-1)
  1110  019d  79                	ld	a, c
  1111  019e  b7                	or	a, a
  1112  019f  2851              	jr	Z,l_float_to_string_00116
  1113                          ;debug.c:104: *buffer++ = '0' + digit;
  1114  01a1  21fbff            	ld	hl,-5
  1115  01a4  cd0000            	call	____sdcc_4_push_hlix
  1116  01a7  212041            	ld	hl,0x4120
  1117  01aa  e5                	push	hl
  1118  01ab  210000            	ld	hl,0x0000
  1119  01ae  e5                	push	hl
  1120  01af  cd0000            	call	___fsmul_callee
  1121  01b2  01feff            	ld	bc,-2
  1122  01b5  cd0000            	call	____sdcc_store_dehl_bcix
  1123                          ;debug.c:105: buffer++;
  1124  01b8  21fbff            	ld	hl,-5
  1125  01bb  cd0000            	call	____sdcc_4_push_hlix
  1126  01be  cd0000            	call	___fs2sint_callee
  1127  01c1  eb                	ex	de, hl
  1128                          ;debug.c:106: decimal_part -= digit;
  1129  01c2  dd4e08            	ld	c,(ix+8)
  1130  01c5  dd4609            	ld	b,(ix+9)
  1131  01c8  7b                	ld	a, e
  1132  01c9  c630              	add	a,0x30
  1133  01cb  02                	ld	(bc), a
  1134  01cc  03                	inc	bc
  1135  01cd  dd7108            	ld	(ix+8),c
  1136  01d0  dd7009            	ld	(ix+9),b
  1137                          ;debug.c:107: }
  1138  01d3  dd3408            	inc	(ix+8)
  1139  01d6  2003              	jr	NZ,l_float_to_string_00168
  1140  01d8  dd3409            	inc	(ix+9)
  1141                          l_float_to_string_00168:
  1142                          ;debug.c:108: }
  1143  01db  d5                	push	de
  1144  01dc  cd0000            	call	___sint2fs_callee
  1145  01df  d5                	push	de
  1146  01e0  e5                	push	hl
  1147  01e1  21fbff            	ld	hl,-5
  1148  01e4  cd0000            	call	____sdcc_4_push_hlix
  1149  01e7  cd0000            	call	___fssub_callee
  1150  01ea  01feff            	ld	bc,-2
  1151  01ed  cd0000            	call	____sdcc_store_dehl_bcix
  1152  01f0  18a5              	jr	l_float_to_string_00112
  1153                          l_float_to_string_00116:
  1154                          ;debug.c:112:
  1155  01f2  dd6e08            	ld	l,(ix+8)
  1156  01f5  dd6609            	ld	h,(ix+9)
  1157                          ;debug.c:113: void _debug_message(const char *message)
  1158  01f8  ddf9              	ld	sp, ix
  1159  01fa  dde1              	pop	ix
  1160  01fc  c9                	ret
  1161                          ;debug.c:115: char *address = new_console_line();
  1162                          ;	---------------------------------
  1163                          ; Function _debug_message
  1164                          ; ---------------------------------
  1165                          __debug_message:
  1166  01fd  cd0000            	call	___sdcc_enter_ix
  1167                          ;debug.c:117: {
  1168  0200  cd4c00            	call	_new_console_line
  1169  0203  eb                	ex	de, hl
  1170                          ;debug.c:118: *address++ = *message++;
  1171  0204  dd4e04            	ld	c,(ix+4)
  1172  0207  dd4605            	ld	b,(ix+5)
  1173                          l__debug_message_00101:
  1174  020a  0a                	ld	a, (bc)
  1175  020b  b7                	or	a, a
  1176  020c  2806              	jr	Z,l__debug_message_00103
  1177                          ;debug.c:120: }
  1178  020e  03                	inc	bc
  1179  020f  12                	ld	(de), a
  1180  0210  13                	inc	de
  1181                          ;debug.c:121: end_console_line(address);
  1182  0211  13                	inc	de
  1183  0212  18f6              	jr	l__debug_message_00101
  1184                          l__debug_message_00103:
  1185                          ;debug.c:123:
  1186  0214  d5                	push	de
  1187  0215  cd7400            	call	_end_console_line
  1188  0218  f1                	pop	af
  1189                          ;debug.c:124: void _debug_number(const char *label, float value)
  1190  0219  dde1              	pop	ix
  1191  021b  c9                	ret
  1192                          ;debug.c:126: char *address = new_console_line();
  1193                          ;	---------------------------------
  1194                          ; Function _debug_number
  1195                          ; ---------------------------------
  1196                          __debug_number:
  1197  021c  cd0000            	call	___sdcc_enter_ix
  1198  021f  f5                	push	af
  1199                          ;debug.c:128: {
  1200  0220  cd4c00            	call	_new_console_line
  1201  0223  eb                	ex	de, hl
  1202                          ;debug.c:129:
  1203  0224  dd7e04            	ld	a,(ix+4)
  1204  0227  dd77fe            	ld	(ix-2),a
  1205  022a  dd7e05            	ld	a,(ix+5)
  1206  022d  dd77ff            	ld	(ix-1),a
  1207                          l__debug_number_00101:
  1208  0230  e1                	pop	hl
  1209  0231  7e                	ld	a,(hl)
  1210  0232  e5                	push	hl
  1211                          ;debug.c:132: }
  1212  0233  4b                	ld	c, e
  1213  0234  42                	ld	b, d
  1214  0235  03                	inc	bc
  1215                          ;debug.c:129:
  1216  0236  b7                	or	a, a
  1217  0237  280e              	jr	Z,l__debug_number_00103
  1218                          ;debug.c:132: }
  1219  0239  dd34fe            	inc	(ix-2)
  1220  023c  2003              	jr	NZ,l__debug_number_00117
  1221  023e  dd34ff            	inc	(ix-1)
  1222                          l__debug_number_00117:
  1223  0241  12                	ld	(de), a
  1224                          ;debug.c:133: *address++ = ':';
  1225  0242  59                	ld	e, c
  1226  0243  50                	ld	d, b
  1227  0244  13                	inc	de
  1228  0245  18e9              	jr	l__debug_number_00101
  1229                          l__debug_number_00103:
  1230                          ;debug.c:135: *address++ = ' ';
  1231  0247  3e3a              	ld	a,0x3a
  1232  0249  12                	ld	(de), a
  1233                          ;debug.c:136: address++;
  1234  024a  03                	inc	bc
  1235                          ;debug.c:137:
  1236  024b  3e20              	ld	a,0x20
  1237  024d  02                	ld	(bc), a
  1238  024e  03                	inc	bc
  1239                          ;debug.c:138: // Converts the float to a string
  1240  024f  03                	inc	bc
  1241                          ;debug.c:141: // Sends the message
  1242  0250  c5                	push	bc
  1243  0251  210600            	ld	hl,6
  1244  0254  cd0000            	call	____sdcc_4_push_hlix
  1245  0257  cda500            	call	_float_to_string
  1246  025a  f1                	pop	af
  1247  025b  f1                	pop	af
  1248                          ;debug.c:144:
  1249  025c  e3                	ex	(sp),hl
  1250  025d  cd7400            	call	_end_console_line
  1251  0260  f1                	pop	af
  1252                          ;debug.c:145: void _debug_point(const char *label, float x, float y)
  1253  0261  f1                	pop	af
  1254  0262  dde1              	pop	ix
  1255  0264  c9                	ret
  1256                          ;debug.c:147: char *address = new_console_line();
  1257                          ;	---------------------------------
  1258                          ; Function _debug_point
  1259                          ; ---------------------------------
  1260                          __debug_point:
  1261  0265  cd0000            	call	___sdcc_enter_ix
  1262  0268  f5                	push	af
  1263                          ;debug.c:149: {
  1264  0269  cd4c00            	call	_new_console_line
  1265  026c  eb                	ex	de, hl
  1266                          ;debug.c:150: *address++ = *label++;
  1267  026d  dd7e04            	ld	a,(ix+4)
  1268  0270  dd77fe            	ld	(ix-2),a
  1269  0273  dd7e05            	ld	a,(ix+5)
  1270  0276  dd77ff            	ld	(ix-1),a
  1271                          l__debug_point_00101:
  1272  0279  e1                	pop	hl
  1273  027a  7e                	ld	a,(hl)
  1274  027b  e5                	push	hl
  1275                          ;debug.c:152: }
  1276  027c  4b                	ld	c, e
  1277  027d  42                	ld	b, d
  1278  027e  03                	inc	bc
  1279                          ;debug.c:150: *address++ = *label++;
  1280  027f  b7                	or	a, a
  1281  0280  280e              	jr	Z,l__debug_point_00103
  1282                          ;debug.c:152: }
  1283  0282  dd34fe            	inc	(ix-2)
  1284  0285  2003              	jr	NZ,l__debug_point_00117
  1285  0287  dd34ff            	inc	(ix-1)
  1286                          l__debug_point_00117:
  1287  028a  12                	ld	(de), a
  1288                          ;debug.c:153: *address++ = ':';
  1289  028b  59                	ld	e, c
  1290  028c  50                	ld	d, b
  1291  028d  13                	inc	de
  1292  028e  18e9              	jr	l__debug_point_00101
  1293                          l__debug_point_00103:
  1294                          ;debug.c:155: *address++ = ' ';
  1295  0290  3e3a              	ld	a,0x3a
  1296  0292  12                	ld	(de), a
  1297                          ;debug.c:156: address++;
  1298  0293  03                	inc	bc
  1299                          ;debug.c:157:
  1300  0294  3e20              	ld	a,0x20
  1301  0296  02                	ld	(bc), a
  1302  0297  03                	inc	bc
  1303                          ;debug.c:158: // Converts the float to a string
  1304  0298  03                	inc	bc
  1305                          ;debug.c:161: address++;
  1306  0299  c5                	push	bc
  1307  029a  210600            	ld	hl,6
  1308  029d  cd0000            	call	____sdcc_4_push_hlix
  1309  02a0  cda500            	call	_float_to_string
  1310  02a3  f1                	pop	af
  1311  02a4  f1                	pop	af
  1312  02a5  f1                	pop	af
  1313                          ;debug.c:162: address = float_to_string(y, address);
  1314  02a6  362c              	ld	(hl),0x2c
  1315  02a8  23                	inc	hl
  1316                          ;debug.c:163:
  1317  02a9  23                	inc	hl
  1318                          ;debug.c:164: // Sends the message
  1319  02aa  e5                	push	hl
  1320  02ab  210a00            	ld	hl,10
  1321  02ae  cd0000            	call	____sdcc_4_push_hlix
  1322  02b1  cda500            	call	_float_to_string
  1323  02b4  f1                	pop	af
  1324  02b5  f1                	pop	af
  1325                          ;debug.c:167:
  1326  02b6  e3                	ex	(sp),hl
  1327  02b7  cd7400            	call	_end_console_line
  1328  02ba  f1                	pop	af
  1329                          ;debug.c:168: void _debug_draw_point(uint16_t x, uint8_t y, uint8_t color)
  1330  02bb  f1                	pop	af
  1331  02bc  dde1              	pop	ix
  1332  02be  c9                	ret
  1333                          ;debug.c:170: if (x >= SCREEN_WIDTH)
  1334                          ;	---------------------------------
  1335                          ; Function _debug_draw_point
  1336                          ; ---------------------------------
  1337                          __debug_draw_point:
  1338  02bf  cd0000            	call	___sdcc_enter_ix
  1339  02c2  3b                	dec	sp
  1340                          ;debug.c:172: uint16_t pixel = x * 256 + y;
  1341  02c3  dd7e04            	ld	a,(ix+4)
  1342  02c6  d640              	sub	a,0x40
  1343  02c8  dd7e05            	ld	a,(ix+5)
  1344  02cb  de01              	sbc	a,0x01
  1345                          ;debug.c:173: uint8_t page = pixel >> 13;
  1346  02cd  3040              	jr	NC,l__debug_draw_point_00103
  1347                          ;debug.c:174: char *address = (char *)((pixel & 0x1FFF) | 0xC000);
  1348  02cf  dd4604            	ld	b,(ix+4)
  1349  02d2  0e00              	ld	c,0x00
  1350  02d4  dd5e06            	ld	e,(ix+6)
  1351  02d7  1600              	ld	d,0x00
  1352  02d9  eb                	ex	de, hl
  1353  02da  09                	add	hl, bc
  1354                          ;debug.c:175:
  1355  02db  4d                	ld	c,l
  1356  02dc  5d                	ld	e,l
  1357  02dd  54                	ld	d, h
  1358  02de  060d              	ld	b,0x0d
  1359  02e0  ed2a              	bsrl	de, b
  1360                          ;debug.c:176: uint8_t saved_page = ZXN_READ_MMU6();
  1361  02e2  7c                	ld	a, h
  1362  02e3  e61f              	and	a,0x1f
  1363  02e5  f6c0              	or	a,0xc0
  1364  02e7  47                	ld	b, a
  1365                          ;debug.c:178:
  1366  02e8  c5                	push	bc
  1367  02e9  013b24            	ld	bc,0x243b
  1368  02ec  3e56              	ld	a,0x50+6
  1369  02ee  ed79              	out	(c),a
  1370  02f0  04                	inc	b
  1371  02f1  ed68              	in	l,(c)
  1372  02f3  c1                	pop	bc
  1373  02f4  dd75ff            	ld	(ix-1),l
  1374                          ;debug.c:179: *address = (char *)color;
  1375  02f7  7b                	ld	a, e
  1376  02f8  c612              	add	a,0x12
  1377  02fa  6f                	ld	l, a
  1378  02fb  7d                	ld	a,l
  1379  02fc  ed9256            	mmu6	a
  1380                          ;debug.c:181: ZXN_WRITE_MMU6(saved_page);
  1381  02ff  dd7e07            	ld	a,(ix+7)
  1382  0302  1600              	ld	d,0x00
  1383  0304  02                	ld	(bc), a
  1384  0305  03                	inc	bc
  1385  0306  7a                	ld	a, d
  1386  0307  02                	ld	(bc), a
  1387                          ;debug.c:183:
  1388  0308  dd6eff            	ld	l,(ix-1)
  1389  030b  7d                	ld	a,l
  1390  030c  ed9256            	mmu6	a
  1391                          l__debug_draw_point_00103:
  1392                          ;debug.c:184: void _debug_halt_next_frame(void)
  1393  030f  33                	inc	sp
  1394  0310  dde1              	pop	ix
  1395  0312  c9                	ret
  1396                          ;debug.c:186: halt_next_frame = true;
  1397                          ;	---------------------------------
  1398                          ; Function _debug_halt_next_frame
  1399                          ; ---------------------------------
  1400                          __debug_halt_next_frame:
  1401                          ;debug.c:188:
  1402  0313  210100            	ld	hl,_halt_next_frame
  1403  0316  3601              	ld	(hl),0x01
  1404                          ;debug.c:189: /**
  1405  0318  c9                	ret
  1406                          ;debug.c:194: if (!condition)
  1407                          ;	---------------------------------
  1408                          ; Function _assert
  1409                          ; ---------------------------------
  1410                          __assert:
  1411  0319  cd0000            	call	___sdcc_enter_ix
  1412                          ;debug.c:196: strcpy(assertion_message, message);
  1413  031c  ddcb0446          	bit	0,(ix+4)
  1414  0320  200f              	jr	NZ,l__assert_00103
  1415                          ;debug.c:198: }
  1416  0322  110000            	ld	de,_assertion_message
  1417  0325  dd6e05            	ld	l,(ix+5)
  1418  0328  dd6606            	ld	h,(ix+6)
  1419  032b  af                	xor	a, a
  1420                          l__assert_00110:
  1421  032c  be                	cp	a, (hl)
  1422  032d  eda0              	ldi
  1423  032f  20fb              	jr	NZ, l__assert_00110
  1424                          ;debug.c:199: }
  1425                          l__assert_00103:
  1426                          ;debug.c:201: ERROR: no line number 201 in file debug.c
  1427  0331  dde1              	pop	ix
  1428  0333  c9                	ret
  1429                          	SECTION data_compiler
  1430                          _debug_console_n_lines:
  1431  0000  00                	DEFB +0x00
  1432                          _halt_next_frame:
  1433  0001  00                	DEFB +0x00
  1434                          	SECTION IGNORE
  1435                          
